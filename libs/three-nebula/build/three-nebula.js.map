{"version":3,"file":"three-nebula.js","mappings":"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","sources":["webpack://Nebula/webpack/universalModuleDefinition","webpack://Nebula/./node_modules/lodash/_Symbol.js","webpack://Nebula/./node_modules/lodash/_arrayLikeKeys.js","webpack://Nebula/./node_modules/lodash/_arrayMap.js","webpack://Nebula/./node_modules/lodash/_arraySample.js","webpack://Nebula/./node_modules/lodash/_baseGetTag.js","webpack://Nebula/./node_modules/lodash/_baseIsArguments.js","webpack://Nebula/./node_modules/lodash/_baseIsTypedArray.js","webpack://Nebula/./node_modules/lodash/_baseKeys.js","webpack://Nebula/./node_modules/lodash/_baseRandom.js","webpack://Nebula/./node_modules/lodash/_baseSample.js","webpack://Nebula/./node_modules/lodash/_baseTimes.js","webpack://Nebula/./node_modules/lodash/_baseUnary.js","webpack://Nebula/./node_modules/lodash/_baseValues.js","webpack://Nebula/./node_modules/lodash/_freeGlobal.js","webpack://Nebula/./node_modules/lodash/_getRawTag.js","webpack://Nebula/./node_modules/lodash/_isIndex.js","webpack://Nebula/./node_modules/lodash/_isPrototype.js","webpack://Nebula/./node_modules/lodash/_nativeKeys.js","webpack://Nebula/./node_modules/lodash/_nodeUtil.js","webpack://Nebula/./node_modules/lodash/_objectToString.js","webpack://Nebula/./node_modules/lodash/_overArg.js","webpack://Nebula/./node_modules/lodash/_root.js","webpack://Nebula/./node_modules/lodash/isArguments.js","webpack://Nebula/./node_modules/lodash/isArray.js","webpack://Nebula/./node_modules/lodash/isArrayLike.js","webpack://Nebula/./node_modules/lodash/isBuffer.js","webpack://Nebula/./node_modules/lodash/isFunction.js","webpack://Nebula/./node_modules/lodash/isLength.js","webpack://Nebula/./node_modules/lodash/isNumber.js","webpack://Nebula/./node_modules/lodash/isObject.js","webpack://Nebula/./node_modules/lodash/isObjectLike.js","webpack://Nebula/./node_modules/lodash/isTypedArray.js","webpack://Nebula/./node_modules/lodash/keys.js","webpack://Nebula/./node_modules/lodash/sample.js","webpack://Nebula/./node_modules/lodash/stubFalse.js","webpack://Nebula/./node_modules/lodash/values.js","webpack://Nebula/./node_modules/uuid/lib/bytesToUuid.js","webpack://Nebula/./node_modules/uuid/lib/rng-browser.js","webpack://Nebula/./node_modules/uuid/v1.js","webpack://Nebula/webpack/bootstrap","webpack://Nebula/webpack/runtime/compat get default export","webpack://Nebula/webpack/runtime/define property getters","webpack://Nebula/webpack/runtime/global","webpack://Nebula/webpack/runtime/hasOwnProperty shorthand","webpack://Nebula/webpack/runtime/make namespace object","webpack://Nebula/webpack/runtime/node module decorator","webpack://Nebula/./src/behaviour/types.js","webpack://Nebula/./src/initializer/types.js","webpack://Nebula/./src/zone/types.js","webpack://Nebula/./src/renderer/types.js","webpack://Nebula/./src/constants/index.js","webpack://Nebula/./src/ease/index.js","webpack://Nebula/./src/core/constants.js","webpack://Nebula/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://Nebula/./src/utils/ColorUtil.js","webpack://Nebula/./src/utils/PUID.js","webpack://Nebula/./src/core/three/Math.js","webpack://Nebula/./src/core/three/Vector3.js","webpack://Nebula/./src/core/three/Matrix4.js","webpack://Nebula/./src/core/three/Euler.js","webpack://Nebula/./src/core/three/Quaternion.js","webpack://Nebula/./src/utils/THREEUtil.js","webpack://Nebula/./src/utils/Util.js","webpack://Nebula/./src/utils/uid.js","webpack://Nebula/./src/utils/index.js","webpack://Nebula/./src/math/MathUtils.js","webpack://Nebula/./src/math/Span.js","webpack://Nebula/./src/math/types.js","webpack://Nebula/./src/math/ArraySpan.js","webpack://Nebula/./src/math/ColorSpan.js","webpack://Nebula/./src/math/Box.js","webpack://Nebula/./src/math/constants.js","webpack://Nebula/./src/math/integration.js","webpack://Nebula/./src/math/Vector3D.js","webpack://Nebula/./src/math/Polar3D.js","webpack://Nebula/./src/core/Particle.js","webpack://Nebula/./src/core/types.js","webpack://Nebula/./src/core/Pool.js","webpack://Nebula/./src/events/index.js","webpack://Nebula/./src/events/EventDispatcher.js","webpack://Nebula/./src/events/constants.js","webpack://Nebula/./src/initializer/Initializer.js","webpack://Nebula/./src/initializer/Body.js","webpack://Nebula/./src/initializer/constants.js","webpack://Nebula/./src/core/three/constants.js","webpack://Nebula/./src/initializer/BodySprite.js","webpack://Nebula/./src/initializer/InitializerUtil.js","webpack://Nebula/./src/initializer/Life.js","webpack://Nebula/./src/initializer/Mass.js","webpack://Nebula/./src/zone/Zone.js","webpack://Nebula/./src/zone/BoxZone.js","webpack://Nebula/./src/zone/LineZone.js","webpack://Nebula/./src/zone/MeshZone.js","webpack://Nebula/./src/zone/PointZone.js","webpack://Nebula/./src/zone/ScreenZone.js","webpack://Nebula/./src/zone/SphereZone.js","webpack://Nebula/./src/initializer/Position.js","webpack://Nebula/./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://Nebula/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://Nebula/./src/initializer/Radius.js","webpack://Nebula/./src/initializer/Rate.js","webpack://Nebula/./src/initializer/Texture.js","webpack://Nebula/./src/initializer/Velocity/Velocity.js","webpack://Nebula/./src/initializer/Velocity/PolarVelocity.js","webpack://Nebula/./src/initializer/Velocity/RadialVelocity.js","webpack://Nebula/./src/initializer/Velocity/VectorVelocity.js","webpack://Nebula/./src/emitter/constants.js","webpack://Nebula/./src/emitter/Emitter.js","webpack://Nebula/./src/emitter/types.js","webpack://Nebula/./src/behaviour/constants.js","webpack://Nebula/./src/behaviour/Behaviour.js","webpack://Nebula/./src/behaviour/Alpha.js","webpack://Nebula/./src/behaviour/Attraction.js","webpack://Nebula/./src/behaviour/Collision.js","webpack://Nebula/./src/behaviour/Color.js","webpack://Nebula/./src/behaviour/CrossZone.js","webpack://Nebula/./src/behaviour/Force.js","webpack://Nebula/./src/behaviour/Gravity.js","webpack://Nebula/./src/behaviour/RandomDrift.js","webpack://Nebula/./src/behaviour/Repulsion.js","webpack://Nebula/./src/behaviour/Rotate.js","webpack://Nebula/./src/behaviour/Scale.js","webpack://Nebula/./src/behaviour/Spring.js","webpack://Nebula/./src/core/fromJSON.js","webpack://Nebula/./src/core/fromJSONAsync.js","webpack://Nebula/./src/core/System.js","webpack://Nebula/./src/debug/constants.js","webpack://Nebula/./src/debug/Debug.js","webpack://Nebula/./src/debug/log.js","webpack://Nebula/./src/emitter/FollowEmitter.js","webpack://Nebula/./src/renderer/BaseRenderer.js","webpack://Nebula/./src/renderer/CustomRenderer.js","webpack://Nebula/./src/renderer/MeshRenderer.js","webpack://Nebula/./src/renderer/SpriteRenderer.js","webpack://Nebula/./src/renderer/GPURenderer/common/ParticleBuffer/constants.js","webpack://Nebula/./src/renderer/GPURenderer/common/constants.js","webpack://Nebula/./src/renderer/GPURenderer/common/stores/Target.js","webpack://Nebula/./src/renderer/GPURenderer/common/stores/UniqueList.js","webpack://Nebula/./src/renderer/GPURenderer/common/ParticleBuffer/index.js","webpack://Nebula/./src/renderer/GPURenderer/common/TextureAtlas/index.js","webpack://Nebula/./src/renderer/GPURenderer/common/TextureAtlas/constants.js","webpack://Nebula/./node_modules/potpack/index.mjs","webpack://Nebula/./src/renderer/GPURenderer/Desktop/index.js","webpack://Nebula/./src/renderer/GPURenderer/Mobile/index.js","webpack://Nebula/./src/renderer/GPURenderer/Desktop/shaders/vertexShader.js","webpack://Nebula/./src/renderer/GPURenderer/Desktop/shaders/fragmentShader.js","webpack://Nebula/./src/renderer/GPURenderer/Mobile/shaders/vertexShader.js","webpack://Nebula/./src/renderer/GPURenderer/Mobile/shaders/fragmentShader.js","webpack://Nebula/./src/renderer/GPURenderer/index.js","webpack://Nebula/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Nebula\"] = factory();\n\telse\n\t\troot[\"Nebula\"] = factory();\n})(this, function() {\nreturn ","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var baseRandom = require('./_baseRandom');\n\n/**\n * A specialized version of `_.sample` for arrays.\n *\n * @private\n * @param {Array} array The array to sample.\n * @returns {*} Returns the random element.\n */\nfunction arraySample(array) {\n  var length = array.length;\n  return length ? array[baseRandom(0, length - 1)] : undefined;\n}\n\nmodule.exports = arraySample;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var arraySample = require('./_arraySample'),\n    values = require('./values');\n\n/**\n * The base implementation of `_.sample`.\n *\n * @private\n * @param {Array|Object} collection The collection to sample.\n * @returns {*} Returns the random element.\n */\nfunction baseSample(collection) {\n  return arraySample(values(collection));\n}\n\nmodule.exports = baseSample;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var arraySample = require('./_arraySample'),\n    baseSample = require('./_baseSample'),\n    isArray = require('./isArray');\n\n/**\n * Gets a random element from `collection`.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to sample.\n * @returns {*} Returns the random element.\n * @example\n *\n * _.sample([1, 2, 3, 4]);\n * // => 2\n */\nfunction sample(collection) {\n  var func = isArray(collection) ? arraySample : baseSample;\n  return func(collection);\n}\n\nmodule.exports = sample;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","export const BEHAVIOUR_TYPE_ABSTRACT = 'Behaviour';\nexport const BEHAVIOUR_TYPE_ALPHA = 'Alpha';\nexport const BEHAVIOUR_TYPE_ATTRACTION = 'Attraction';\nexport const BEHAVIOUR_TYPE_COLLISION = 'Collision';\nexport const BEHAVIOUR_TYPE_COLOR = 'Color';\nexport const BEHAVIOUR_TYPE_CROSS_ZONE = 'CrossZone';\nexport const BEHAVIOUR_TYPE_FORCE = 'Force';\nexport const BEHAVIOUR_TYPE_GRAVITY = 'Gravity';\nexport const BEHAVIOUR_TYPE_RANDOM_DRIFT = 'RandomDrift';\nexport const BEHAVIOUR_TYPE_REPULSION = 'Repulsion';\nexport const BEHAVIOUR_TYPE_ROTATE = 'Rotate';\nexport const BEHAVIOUR_TYPE_SCALE = 'Scale';\nexport const BEHAVIOUR_TYPE_SPRING = 'Spring';\n","export const INITIALIZER_TYPE_ABSTRACT = 'Initializer';\nexport const INITIALIZER_TYPE_BODY = 'Body';\nexport const INITIALIZER_TYPE_BODY_SPRITE = 'BodySprite';\nexport const INITIALIZER_TYPE_TEXTURE = 'Texture';\nexport const INITIALIZER_TYPE_LIFE = 'Life';\nexport const INITIALIZER_TYPE_MASS = 'Mass';\nexport const INITIALIZER_TYPE_POSITION = 'Position';\nexport const INITIALIZER_TYPE_RADIUS = 'Radius';\nexport const INITIALIZER_TYPE_ZONE = 'Zone';\nexport const INITIALIZER_TYPE_VECTOR_VELOCITY = 'VectorVelocity';\nexport const INITIALIZER_TYPE_POLAR_VELOCITY = 'PolarVelocity';\nexport const INITIALIZER_TYPE_RADIAL_VELOCITY = 'RadialVelocity';\nexport const INITIALIZER_TYPE_RATE = 'Rate';\nexport const INITIALIZER_TYPES_THAT_REQUIRE_THREE = [\n  INITIALIZER_TYPE_BODY_SPRITE,\n  INITIALIZER_TYPE_TEXTURE,\n];\n","export const ZONE_TYPE_ABSTRACT = 'Zone';\nexport const ZONE_TYPE_BOX = 'BoxZone';\nexport const ZONE_TYPE_LINE = 'LineZone';\nexport const ZONE_TYPE_MESH = 'MeshZone';\nexport const ZONE_TYPE_POINT = 'PointZone';\nexport const ZONE_TYPE_SCREEN = 'ScreenZone';\nexport const ZONE_TYPE_SPHERE = 'SphereZone';\n","export const RENDERER_TYPE_BASE = 'BaseRenderer';\nexport const RENDERER_TYPE_CUSTOM = 'CustomRenderer';\nexport const RENDERER_TYPE_SPRITE = 'SpriteRenderer';\nexport const RENDERER_TYPE_MESH = 'MeshRenderer';\nexport const RENDERER_TYPE_GPU = 'GPURenderer';\nexport const RENDERER_TYPE_GPU_MOBILE = 'MobileGPURenderer';\nexport const RENDERER_TYPE_GPU_DESKTOP = 'DesktopGPURenderer';\n","export const PI = 3.142;\n\n/**\n * The max particle number in pool.\n *\n * @const {integer}\n */\nexport const POOL_MAX = 500;\nexport const TIME_STEP = 60;\nexport const DR = PI / 180;\n\n/**\n * 1:100\n *\n * @const {integer}\n */\nexport const MEASURE = 100;\nexport const EULER = 'euler';\nexport const RK2 = 'runge-kutta2';\nexport const RK4 = 'runge-kutta4';\nexport const VERLET = 'verlet';\nexport const BIND_EMITTER_EVENT = false;\n\nexport const __DEV__ = () => {\n  if (!process) {\n    return false;\n  }\n\n  if (!process.env) {\n    return false;\n  }\n\n  if (!process.env.NODE_ENV) {\n    return false;\n  }\n\n  if (process.env.NODE_ENV !== 'development') {\n    return false;\n  }\n\n  return true;\n};\n","import { PI } from '../constants';\n\n/**\n * The Ease class provides a collection of easing functions for use with System\n */\nexport const ease = {\n  easeLinear: function(value) {\n    return value;\n  },\n\n  easeInQuad: function(value) {\n    return Math.pow(value, 2);\n  },\n\n  easeOutQuad: function(value) {\n    return -(Math.pow(value - 1, 2) - 1);\n  },\n\n  easeInOutQuad: function(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 2);\n\n    return -0.5 * ((value -= 2) * value - 2);\n  },\n\n  easeInCubic: function(value) {\n    return Math.pow(value, 3);\n  },\n\n  easeOutCubic: function(value) {\n    return Math.pow(value - 1, 3) + 1;\n  },\n\n  easeInOutCubic: function(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 3);\n\n    return 0.5 * (Math.pow(value - 2, 3) + 2);\n  },\n\n  easeInQuart: function(value) {\n    return Math.pow(value, 4);\n  },\n\n  easeOutQuart: function(value) {\n    return -(Math.pow(value - 1, 4) - 1);\n  },\n\n  easeInOutQuart: function(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 4);\n\n    return -0.5 * ((value -= 2) * Math.pow(value, 3) - 2);\n  },\n\n  easeInSine: function(value) {\n    return -Math.cos(value * (PI / 2)) + 1;\n  },\n\n  easeOutSine: function(value) {\n    return Math.sin(value * (PI / 2));\n  },\n\n  easeInOutSine: function(value) {\n    return -0.5 * (Math.cos(PI * value) - 1);\n  },\n\n  easeInExpo: function(value) {\n    return value === 0 ? 0 : Math.pow(2, 10 * (value - 1));\n  },\n\n  easeOutExpo: function(value) {\n    return value === 1 ? 1 : -Math.pow(2, -10 * value) + 1;\n  },\n\n  easeInOutExpo: function(value) {\n    if (value === 0) return 0;\n    if (value === 1) return 1;\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (value - 1));\n\n    return 0.5 * (-Math.pow(2, -10 * --value) + 2);\n  },\n\n  easeInCirc: function(value) {\n    return -(Math.sqrt(1 - value * value) - 1);\n  },\n\n  easeOutCirc: function(value) {\n    return Math.sqrt(1 - Math.pow(value - 1, 2));\n  },\n\n  easeInOutCirc: function(value) {\n    if ((value /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - value * value) - 1);\n\n    return 0.5 * (Math.sqrt(1 - (value -= 2) * value) + 1);\n  },\n\n  easeInBack: function(value) {\n    var s = 1.70158;\n\n    return value * value * ((s + 1) * value - s);\n  },\n\n  easeOutBack: function(value) {\n    var s = 1.70158;\n\n    return (value = value - 1) * value * ((s + 1) * value + s) + 1;\n  },\n\n  easeInOutBack: function(value) {\n    var s = 1.70158;\n\n    if ((value /= 0.5) < 1)\n      return 0.5 * (value * value * (((s *= 1.525) + 1) * value - s));\n\n    return 0.5 * ((value -= 2) * value * (((s *= 1.525) + 1) * value + s) + 2);\n  }\n};\n\nexport const {\n  easeLinear,\n  easeInQuad,\n  easeOutQuad,\n  easeInOutQuad,\n  easeInCubic,\n  easeOutCubic,\n  easeInOutCubic,\n  easeInQuart,\n  easeOutQuart,\n  easeInOutQuart,\n  easeInSine,\n  easeOutSine,\n  easeInOutSine,\n  easeInExpo,\n  easeOutExpo,\n  easeInOutExpo,\n  easeInCirc,\n  easeOutCirc,\n  easeInOutCirc,\n  easeInBack,\n  easeOutBack,\n  easeInOutBack\n} = ease;\n\nexport const setEasingByName = easeName => {\n  if (ease[easeName]) return ease[easeName];\n  else return ease.easeLinear;\n};\n\nexport const getEasingByName = name =>\n  ease[name] ? ease[name] : ease.easeLinear;\n","import {\n  BEHAVIOUR_TYPE_ALPHA,\n  BEHAVIOUR_TYPE_ATTRACTION,\n  BEHAVIOUR_TYPE_COLOR,\n  BEHAVIOUR_TYPE_CROSS_ZONE,\n  BEHAVIOUR_TYPE_FORCE,\n  BEHAVIOUR_TYPE_GRAVITY,\n  BEHAVIOUR_TYPE_RANDOM_DRIFT,\n  BEHAVIOUR_TYPE_REPULSION,\n  BEHAVIOUR_TYPE_ROTATE,\n  BEHAVIOUR_TYPE_SCALE,\n  BEHAVIOUR_TYPE_SPRING,\n} from '../behaviour/types';\nimport {\n  INITIALIZER_TYPE_BODY,\n  INITIALIZER_TYPE_BODY_SPRITE,\n  INITIALIZER_TYPE_LIFE,\n  INITIALIZER_TYPE_MASS,\n  INITIALIZER_TYPE_POLAR_VELOCITY,\n  INITIALIZER_TYPE_POSITION,\n  INITIALIZER_TYPE_RADIAL_VELOCITY,\n  INITIALIZER_TYPE_RADIUS,\n  INITIALIZER_TYPE_TEXTURE,\n  INITIALIZER_TYPE_VECTOR_VELOCITY,\n} from '../initializer/types';\nimport {\n  ZONE_TYPE_BOX,\n  ZONE_TYPE_LINE,\n  ZONE_TYPE_MESH,\n  ZONE_TYPE_POINT,\n  ZONE_TYPE_SPHERE,\n} from '../zone/types';\n\nimport { RENDERER_TYPE_SPRITE } from '../renderer/types';\nimport { easeLinear } from '../ease';\n\n/**\n * @desc Default particle life\n * @type {number}\n */\nexport const DEFAULT_LIFE = Infinity;\n/**\n * @desc Default particle age\n * @type {number}\n */\nexport const DEFAULT_AGE = 0;\n/**\n * @desc Default particle energy\n * @type {number}\n */\nexport const DEFAULT_ENERGY = 1;\n/**\n * @desc Default particle dead\n * @type {boolean}\n */\nexport const DEFAULT_DEAD = false;\n/**\n * @desc Default particle sleep\n * @type {boolean}\n */\nexport const DEFAULT_SLEEP = false;\n\n/**\n * @desc Default particle index\n * @type {number}\n */\nexport const DEFAULT_INDEX = 0;\n/**\n * @desc Default particle body\n * @type {?object}\n */\nexport const DEFAULT_BODY = null;\n/**\n * @desc Default particle parent\n * @type {?Emitter}\n */\nexport const DEFAULT_PARENT = null;\n/**\n * @desc Default particle mass\n * @type {number}\n */\nexport const DEFAULT_MASS = 1;\n/**\n * @desc Default particle radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 10;\n/**\n * @desc Default particle alpha\n * @type {number}\n */\nexport const DEFAULT_ALPHA = 1;\n/**\n * @desc Default particle scale\n * @type {number}\n */\nexport const DEFAULT_SCALE = 1;\n/**\n * @desc Default particle useColor\n * @type {boolean}\n */\nexport const DEFAULT_USE_COLOR = false;\n/**\n * @desc Default particle useAlpha\n * @type {boolean}\n */\nexport const DEFAULT_USE_ALPHA = false;\n/**\n * @desc Default particle easing\n * @type {function}\n */\nexport const DEFAULT_EASING = easeLinear;\n\n/**\n * @desc The default delta provided to the System instance\n * @type {number}\n */\nexport const DEFAULT_SYSTEM_DELTA = 0.0167;\n\n/**\n * @desc The types of initializers supported by the System.fromJSON method.\n * @type {array<string>}\n */\nexport const SUPPORTED_JSON_INITIALIZER_TYPES = [\n  INITIALIZER_TYPE_POSITION,\n  INITIALIZER_TYPE_LIFE,\n  INITIALIZER_TYPE_RADIUS,\n  INITIALIZER_TYPE_MASS,\n  INITIALIZER_TYPE_BODY,\n  INITIALIZER_TYPE_BODY_SPRITE,\n  INITIALIZER_TYPE_TEXTURE,\n  INITIALIZER_TYPE_POLAR_VELOCITY,\n  INITIALIZER_TYPE_RADIAL_VELOCITY,\n  INITIALIZER_TYPE_VECTOR_VELOCITY,\n];\n\n/**\n * @desc The types of behaviours supported by the System.fromJSON method.\n * @type {array<string>}\n */\nexport const SUPPORTED_JSON_BEHAVIOUR_TYPES = [\n  BEHAVIOUR_TYPE_ALPHA,\n  BEHAVIOUR_TYPE_ATTRACTION,\n  BEHAVIOUR_TYPE_COLOR,\n  BEHAVIOUR_TYPE_CROSS_ZONE,\n  BEHAVIOUR_TYPE_FORCE,\n  BEHAVIOUR_TYPE_GRAVITY,\n  BEHAVIOUR_TYPE_RANDOM_DRIFT,\n  BEHAVIOUR_TYPE_REPULSION,\n  BEHAVIOUR_TYPE_ROTATE,\n  BEHAVIOUR_TYPE_SCALE,\n  BEHAVIOUR_TYPE_SPRING,\n];\n\n/**\n * @desc The types of renderers supported by the System.fromJSON method.\n * @type {array<string>}\n */\nexport const SUPPORTED_JSON_RENDERER_TYPES = [RENDERER_TYPE_SPRITE];\n\n/**\n * @desc The types of zones supported by the System.fromJSON method.\n * @type {array<string>}\n */\nexport const SUPPORTED_JSON_ZONE_TYPES = [\n  ZONE_TYPE_BOX,\n  ZONE_TYPE_LINE,\n  ZONE_TYPE_MESH,\n  ZONE_TYPE_POINT,\n  ZONE_TYPE_SPHERE,\n];\n\nexport { INITIALIZER_TYPES_THAT_REQUIRE_THREE } from '../initializer/types';\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default {\n  getRGB: function(color) {\n    var rgb = {};\n\n    if (typeof color === 'number') {\n      hex = Math.floor(color);\n      rgb.r = ((color >> 16) & 255) / 255;\n      rgb.g = ((color >> 8) & 255) / 255;\n      rgb.b = (color & 255) / 255;\n    } else if (typeof color === 'string') {\n      var m;\n\n      if (\n        (m = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(\n          color\n        ))\n      ) {\n        rgb.r = Math.min(255, parseInt(m[1], 10)) / 255;\n        rgb.g = Math.min(255, parseInt(m[2], 10)) / 255;\n        rgb.b = Math.min(255, parseInt(m[3], 10)) / 255;\n        // eslint-disable-next-line no-useless-escape\n      } else if ((m = /^\\#([A-Fa-f0-9]+)$/.exec(color))) {\n        var hex = m[1];\n\n        rgb.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n        rgb.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n        rgb.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n      }\n    } else {\n      rgb.r = color.r;\n      rgb.g = color.g;\n      rgb.b = color.b;\n    }\n\n    return rgb;\n  },\n};\n","export default {\n  _id: 0,\n  _uids: new Map(),\n  getNewId: function() {\n    return `PUID_${++this._id}`;\n  },\n  id: function(functionOrObject) {\n    if (this._uids.has(functionOrObject)) {\n      return this._uids.get(functionOrObject);\n    }\n\n    const newId = this.getNewId();\n\n    this._uids.set(functionOrObject, newId);\n\n    return newId;\n  },\n};\n","/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n\nexport { _Math };","import { _Math } from './Math.js';\nimport { Quaternion } from './Quaternion.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t},\n\n\tunproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t},\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function ( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t},\n\n\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t},\n\n\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { Vector3 };","import { Vector3 } from './Vector3.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function () {\n\n\t\tvar zero = new Vector3( 0, 0, 0 );\n\t\tvar one = new Vector3( 1, 1, 1 );\n\n\t\treturn function makeRotationFromQuaternion( q ) {\n\n\t\t\treturn this.compose( zero, q, one );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( x, y, z ) {\n\n\t\tvar te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n\nexport { Matrix4 };","import { Quaternion } from './Quaternion.js';\nimport { Vector3 } from './Vector3.js';\nimport { Matrix4 } from './Matrix4.js';\nimport { _Math } from './Math.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\t_onChange: function ( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\t_onChangeCallback: function () {}\n\n} );\n\n\nexport { Euler };","/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nimport { _Math } from './Math.js';\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis._onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tisQuaternion: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function ( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar EPS = 0.000001;\n\n\t\tvar r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < EPS ) {\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t},\n\n\tangleTo: function ( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t},\n\n\trotateTowards: function ( q, step ) {\n\n\t\tvar angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tvar t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t},\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\t_onChange: function ( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\t_onChangeCallback: function () {}\n\n} );\n\n\nexport { Quaternion };","import { Vector3 } from '../core/three/';\n\nexport default {\n  toScreenPos: (function() {\n    var vector = new Vector3();\n\n    return function(pos, camera, canvas) {\n      vector.copy(pos);\n      // map to normalized device coordinate (NDC) space\n      vector.project(camera);\n      // map to 2D screen space\n      vector.x = Math.round(((vector.x + 1) * canvas.width) / 2);\n      vector.y = Math.round(((-vector.y + 1) * canvas.height) / 2);\n      vector.z = 0;\n\n      return vector;\n    };\n  })(),\n\n  toSpacePos: (function() {\n    var vector = new Vector3(),\n      dir = new Vector3(),\n      distance;\n\n    return function(pos, camera, canvas) {\n      vector.set(\n        (pos.x / canvas.width) * 2 - 1,\n        -(pos.y / canvas.height) * 2 + 1,\n        0.5\n      );\n      vector.unproject(camera);\n\n      dir.copy(vector.sub(camera.position).normalize());\n      distance = -camera.position.z / dir.z;\n      vector.copy(camera.position);\n      vector.add(dir.multiplyScalar(distance));\n\n      return vector;\n    };\n  })(),\n};\n","export default {\n  initValue: function(value, defaults) {\n    var _value = value != null && value != undefined ? value : defaults;\n\n    return _value;\n  },\n\n  isArray: function(value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n  destroyArray: function(array) {\n    array.length = 0;\n  },\n\n  destroyObject: function(obj) {\n    for (var o in obj) delete obj[o];\n  },\n\n  isUndefined: function() {\n    for (var id in arguments) {\n      var arg = arguments[id];\n\n      if (arg !== undefined) return false;\n    }\n\n    return true;\n  },\n\n  setVectorByObj: function(target, pOBJ) {\n    if (pOBJ['x'] !== undefined) target.position.x = pOBJ['x'];\n    if (pOBJ['y'] !== undefined) target.position.y = pOBJ['y'];\n    if (pOBJ['z'] !== undefined) target.position.z = pOBJ['z'];\n\n    if (pOBJ['vx'] !== undefined) target.velocity.x = pOBJ['vx'];\n    if (pOBJ['vy'] !== undefined) target.velocity.y = pOBJ['vy'];\n    if (pOBJ['vz'] !== undefined) target.velocity.z = pOBJ['vz'];\n\n    if (pOBJ['ax'] !== undefined) target.acceleration.x = pOBJ['ax'];\n    if (pOBJ['ay'] !== undefined) target.acceleration.y = pOBJ['ay'];\n    if (pOBJ['az'] !== undefined) target.acceleration.z = pOBJ['az'];\n\n    if (pOBJ['p'] !== undefined) target.position.copy(pOBJ['p']);\n    if (pOBJ['v'] !== undefined) target.velocity.copy(pOBJ['v']);\n    if (pOBJ['a'] !== undefined) target.acceleration.copy(pOBJ['a']);\n\n    if (pOBJ['position'] !== undefined) target.position.copy(pOBJ['position']);\n    if (pOBJ['velocity'] !== undefined) target.velocity.copy(pOBJ['velocity']);\n    if (pOBJ['accelerate'] !== undefined)\n      target.acceleration.copy(pOBJ['accelerate']);\n  },\n\n  //set prototype\n  setPrototypeByObj: function(target, proObj, filters) {\n    for (var key in proObj) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (target.hasOwnProperty(key)) {\n        if (filters) {\n          if (filters.indexOf(key) < 0)\n            target[key] = this._getValue(proObj[key]);\n        } else {\n          target[key] = this._getValue(proObj[key]);\n        }\n      }\n    }\n\n    return target;\n  },\n\n  _getValue: function(pan) {\n    if (pan.constructor.type === 'Span') return pan.getValue();\n    else return pan;\n  },\n};\n","import uid from 'uuid/v1';\n\nexport default uid;\n","export { default as ColorUtil } from './ColorUtil';\nexport { default as PUID } from './PUID';\nexport { default as THREEUtil } from './THREEUtil';\nexport { default as Util } from './Util';\nexport { default as uid } from './uid';\n\nexport const withDefaults = (defaults, properties) => ({\n  ...defaults,\n  ...properties,\n});\n","import { PI } from '../constants';\n\nexport default {\n  randomAToB: function(a, b, INT) {\n    if (!INT) return a + Math.random() * (b - a);\n    else return ((Math.random() * (b - a)) >> 0) + a;\n  },\n  randomFloating: function(center, f, INT) {\n    return this.randomAToB(center - f, center + f, INT);\n  },\n\n  randomZone: function(display) {}, //eslint-disable-line\n\n  degreeTransform: function(a) {\n    return (a * PI) / 180;\n  },\n\n  toColor16: function getRGB(num) {\n    return '#' + num.toString(16);\n  },\n\n  randomColor: function() {\n    return (\n      '#' +\n      ('00000' + ((Math.random() * 0x1000000) << 0).toString(16)).slice(-6)\n    );\n  },\n\n  lerp: function(a, b, energy) {\n    return b + (a - b) * energy;\n  },\n\n  getNormal: function(v, n) {\n    if (v.x == 0 && v.y == 0) {\n      if (v.z == 0) n.set(1, 0, 1);\n      else n.set(1, 1, -v.y / v.z);\n    } else {\n      if (v.x == 0) n.set(1, 0, 1);\n      else n.set(-v.y / v.x, 1, 1);\n    }\n\n    return n.normalize();\n  },\n\n  /**\n   * Rodrigues' Rotation Formula\n   * https://en.wikipedia.org/wiki/Rodrigues%27_rotation_formula\n   * v′ = vcos(θ) + k(k⋅v)(1−cos(θ)) + (k*v)sin(θ)\n   */\n  axisRotate: function(v0, v, k, tha) {\n    var cos = Math.cos(tha);\n    var sin = Math.sin(tha);\n    var p = k.dot(v) * (1 - cos);\n\n    v0.copy(k);\n    v0.cross(v).scalar(sin);\n    v0.addValue(v.x * cos, v.y * cos, v.z * cos);\n    v0.addValue(k.x * p, k.y * p, k.z * p);\n  }\n};\n","import MathUtils from './MathUtils';\nimport Util from '../utils/Util';\nimport { MATH_TYPE_SPAN as type } from './types';\n\nexport default class Span {\n  /**\n   * Span Class. Get a random Number from a to b. Or from c-a to c+b\n   * @param {Number|Array} a - min number\n   * @param {Number} b - max number\n   * @param {Number} center - the center's z value\n   * @example\n   * var span = new Span(0,30);\n   * or\n   * var span = new Span([\"#fff\",\"#ff0\",\"#000\"]);\n   * or\n   * var span = new Span(5,1,\"center\");\n   * @extends {Zone}\n   * @constructor\n   */\n  constructor(a, b, center) {\n    this._isArray = false;\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n\n    if (Util.isArray(a)) {\n      this._isArray = true;\n      this.a = a;\n    } else {\n      this.a = Util.initValue(a, 1);\n      this.b = Util.initValue(b, this.a);\n      this._center = Util.initValue(center, false);\n    }\n  }\n\n  /**\n   * Span.getValue function\n   * @name get a random Number from a to b. Or get a random Number from c-a to c+b\n   * @param {number} INT or int\n   * @return {number} a random Number\n   */\n  getValue(INT) {\n    if (this._isArray) {\n      return this.a[(this.a.length * Math.random()) >> 0];\n    } else {\n      if (!this._center) return MathUtils.randomAToB(this.a, this.b, INT);\n      else return MathUtils.randomFloating(this.a, this.b, INT);\n    }\n  }\n}\n\nexport const createSpan = (a, b, c) => {\n  if (a instanceof Span) return a;\n\n  if (b === undefined) {\n    return new Span(a);\n  } else {\n    if (c === undefined) return new Span(a, b);\n    else return new Span(a, b, c);\n  }\n};\n","export const MATH_TYPE_ARRAY_SPAN = 'ArraySpan';\nexport const MATH_TYPE_COLOR_SPAN = 'ColorSpan';\nexport const MATH_TYPE_BOX = 'Box';\nexport const MATH_TYPE_POLAR_3D = 'Polar3D';\nexport const MATH_TYPE_SPAN = 'Span';\nexport const MATH_TYPE_VECTOR_3D = 'Vector3D';\n","import Span from './Span';\nimport sample from 'lodash/sample';\nimport { MATH_TYPE_ARRAY_SPAN as type } from './types';\n\n/**\n * Class for storing items of mixed type and fetching a randomised\n * value from these items.\n *\n */\nexport default class ArraySpan extends Span {\n  /**\n   * Constructs an ArraySpan instance.\n   *\n   * @param {mixed|array<mixed>} items - Items\n   * @return void\n   */\n  constructor(items) {\n    super();\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n\n    /**\n     * @desc An array of colors\n     * @type {array}\n     */\n    this.items = Array.isArray(items) ? items : [items];\n  }\n\n  /**\n   * Gets a random item.\n   *\n   * @return {mixed}\n   */\n  getValue() {\n    return sample(this.items);\n  }\n}\n\n/**\n * Attempts to create an ArraySpan from the items provided.\n *\n * @param {mixed} items - Items to try and create an ArraySpan from\n * @return {?ArraySpan}\n */\nexport const createArraySpan = items => {\n  if (!items) {\n    return null;\n  }\n\n  if (items instanceof ArraySpan) {\n    return items;\n  }\n\n  return new ArraySpan(items);\n};\n","import MathUtils from './MathUtils';\nimport Span from './Span';\nimport sample from 'lodash/sample';\nimport { MATH_TYPE_COLOR_SPAN as type } from './types';\n\n/**\n * Class for storing and interacting with an array of colours.\n *\n */\nexport default class ColorSpan extends Span {\n  /**\n   * Constructs a ColorSpan instance.\n   *\n   * @param {string|array<string>} colors - A color or array of colors. If the\n   * string 'random' is provided, a random color will be returned from getValue\n   * @return void\n   */\n  constructor(colors) {\n    super();\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n\n    /**\n     * @desc Determines if a random color should be returned from the getValue method.\n     * @type {boolean}\n     */\n    this.shouldRandomize = colors === 'random' ? true : false;\n\n    /**\n     * @desc An array of colors to select from\n     * @type {array<string>}\n     */\n    this.colors = Array.isArray(colors) ? colors : [colors];\n  }\n\n  /**\n   * Gets a color from the color array\n   * or a random color if this.shouldRandomize is true.\n   *\n   * @return {string} a hex color\n   */\n  getValue() {\n    return this.shouldRandomize ? MathUtils.randomColor() : sample(this.colors);\n  }\n}\n\n/**\n * Attempts to create an ArraySpan from the colors provided.\n *\n * @param {mixed} colors - colors to try and create an ArraySpan from\n * @return {?ColorSpan}\n */\nexport const createColorSpan = colors => {\n  if (!colors) {\n    console.warn(\n      `Invalid colors argument ${colors} passed to createColorSpan. Defaulting to 'random'.`\n    );\n\n    colors = 'random';\n  }\n\n  if (colors instanceof ColorSpan) {\n    return colors;\n  }\n\n  return new ColorSpan(colors);\n};\n","import { MATH_TYPE_BOX as type } from './types';\n\nexport default class Box {\n  constructor(x, y, z, w, h, d) {\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.width = w;\n    this.height = h;\n    this.depth = d;\n    this.bottom = this.y + this.height;\n    this.right = this.x + this.width;\n    this.right = this.x + this.width;\n  }\n\n  contains(x, y, z) {\n    if (\n      x <= this.right &&\n      x >= this.x &&\n      y <= this.bottom &&\n      y >= this.y &&\n      z <= this.depth &&\n      z >= this.z\n    )\n      return true;\n    else return false;\n  }\n}\n","/**\n * @see https://en.wikipedia.org/wiki/Euler_method\n * @type {string}\n */\nexport const INTEGRATION_TYPE_EULER = 'EULER';\n\n/**\n * @see http://web.mit.edu/10.001/Web/Course_Notes/Differential_Equations_Notes/node5.html\n * @type {string}\n */\nexport const INTEGRATION_TYPE_RK2 = 'RUNGE_KUTTA_2';\n\n/**\n * @see http://web.mit.edu/10.001/Web/Course_Notes/Differential_Equations_Notes/node5.html\n * @type {string}\n */\nexport const INTEGRATION_TYPE_RK4 = 'RUNGE_KUTTA_4';\n\n/**\n * @see https://en.wikipedia.org/wiki/Verlet_integration\n * @type {string}\n */\nexport const INTEGRATION_TYPE_VERLET = 'VERLET';\n","import { INTEGRATION_TYPE_EULER } from './constants';\nimport { DEFAULT_SYSTEM_DELTA } from '../core/constants';\n\n/**\n * Performs euler integration on the particle.\n *\n * @param {Particle} particle - The particle to integrate\n * @param {number} time - The factor of time to use\n * @param {number} damping - The damping to use\n * @return void\n */\nconst eulerIntegration = (particle, time, damping) => {\n  if (particle.sleep) {\n    return;\n  }\n\n  particle.old.position.copy(particle.position);\n  particle.old.velocity.copy(particle.velocity);\n  particle.acceleration.scalar(1 / particle.mass);\n  particle.velocity.add(particle.acceleration.scalar(time));\n  particle.position.add(particle.old.velocity.scalar(time));\n  damping &&\n    particle.velocity.scalar(Math.pow(damping, time / DEFAULT_SYSTEM_DELTA));\n  particle.acceleration.clear();\n};\n\n/**\n * Performs the chosen integration on the particle.\n * Defaults to euler integration.\n *\n * @param {Particle} particle - The particle to integrate\n * @param {number} time - The factor of time to use\n * @param {number} damping - The damping to use\n * @param {string} [type=INTEGRATION_TYPE_EULER] - The algorithm to use\n * @return void\n */\nexport const integrate = (\n  particle,\n  time,\n  damping,\n  type = INTEGRATION_TYPE_EULER\n) => {\n  switch (type) {\n    case INTEGRATION_TYPE_EULER:\n      eulerIntegration(particle, time, damping);\n      break;\n    default:\n      eulerIntegration(particle, time, damping);\n  }\n};\n","import { Euler, Vector3 } from '../core/three/';\n\nexport default class Vector3D extends Vector3 {\n  clear() {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.z = 0.0;\n\n    return this;\n  }\n\n  scalar(s) {\n    this.x *= s;\n    this.y *= s;\n    this.z *= s;\n\n    return this;\n  }\n\n  addValue(a, b, c) {\n    this.x += a;\n    this.y += b;\n    this.z += c;\n\n    return this;\n  }\n\n  toString() {\n    return 'x:' + this.x + 'y:' + this.y + 'z:' + this.z;\n  }\n\n  eulerFromDir(vector3D) {\n    const euler = new Euler();\n\n    return euler.setFromVector3(vector3D);\n  }\n}\n","import Vector3D from './Vector3D';\nimport { MATH_TYPE_POLAR_3D as type } from './types';\n\nexport default class Polar3D {\n  constructor(radius, theta, phi) {\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n    this.radius = radius || 1;\n    this.phi = phi || 0;\n    this.theta = theta || 0;\n  }\n\n  set(radius, theta, phi) {\n    this.radius = radius || 1;\n    this.phi = phi || 0;\n    this.theta = theta || 0;\n\n    return this;\n  }\n\n  setRadius(radius) {\n    this.radius = radius;\n\n    return this;\n  }\n\n  setPhi(phi) {\n    this.phi = phi;\n\n    return this;\n  }\n\n  setTheta(theta) {\n    this.theta = theta;\n\n    return this;\n  }\n\n  copy(p) {\n    this.radius = p.radius;\n    this.phi = p.phi;\n    this.theta = p.theta;\n\n    return this;\n  }\n\n  toVector3D() {\n    return new Vector3D(this.getX(), this.getY(), this.getZ());\n  }\n\n  getX() {\n    return this.radius * Math.sin(this.theta) * Math.cos(this.phi);\n  }\n\n  getY() {\n    return -this.radius * Math.sin(this.theta) * Math.sin(this.phi);\n  }\n\n  getZ() {\n    return this.radius * Math.cos(this.theta);\n  }\n\n  normalize() {\n    this.radius = 1;\n\n    return this;\n  }\n\n  equals(v) {\n    return (\n      v.radius === this.radius && v.phi === this.phi && v.theta === this.theta\n    );\n  }\n\n  clear() {\n    this.radius = 0.0;\n    this.phi = 0.0;\n    this.theta = 0.0;\n\n    return this;\n  }\n\n  clone() {\n    return new Polar3D(this.radius, this.phi, this.theta);\n  }\n}\n","import {\n  DEFAULT_AGE,\n  DEFAULT_ALPHA,\n  DEFAULT_BODY,\n  DEFAULT_DEAD,\n  DEFAULT_EASING,\n  DEFAULT_ENERGY,\n  DEFAULT_LIFE,\n  DEFAULT_MASS,\n  DEFAULT_PARENT,\n  DEFAULT_RADIUS,\n  DEFAULT_SCALE,\n  DEFAULT_SLEEP,\n  DEFAULT_USE_ALPHA,\n  DEFAULT_USE_COLOR,\n} from './constants';\nimport { Util, uid } from '../utils';\n\nimport { PI } from '../constants';\nimport { Vector3D } from '../math';\nimport { CORE_TYPE_PARTICLE as type } from './types';\n\n/**\n * A Particle is an object that is emitted by an emitter.\n *\n */\nexport default class Particle {\n  /**\n   * Constructs a Particle instance.\n   *\n   * @param {object} properties - The properties to instantiate the particle with\n   * @property {number} properties.life - The particle's life\n   * @property {number} properties.age - The particle's age\n   * @property {number} properties.energy - The particle's energy loss\n   * @property {boolean} properties.dead - Determines if the particle is dead or not\n   * @property {boolean} properties.sleep - Determines if the particle is sleeping or not\n   * @property {object} properties.target - The particle's target\n   * @property {object} properties.body - The particle's body\n   * @property {number} properties.mass - The particle's mass\n   * @property {number} properties.radius - The particle's radius\n   * @property {number} properties.alpha - The particle's alpha\n   * @property {number} properties.scale - The particle's scale\n   * @property {number} properties.rotation - The particle's rotation\n   * @property {string|number} properties.color - The particle's color\n   * @property {function} properties.easing - The particle's easing\n   * @property {Vector3D} properties.position - The particle's position\n   * @property {Vector3D} properties.velocity - The particle's velocity\n   * @property {Vector3D} properties.acceleration - The particle's acceleration\n   * @property {array} properties.behaviours - The particle's behaviours array\n   * @property {object} properties.transform - The particle's transform collection\n   * @return void\n   */\n  constructor(properties) {\n    /**\n     * @desc The particle's unique id\n     * @type {number}\n     */\n    this.id = `particle-${uid()}`;\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n    /**\n     * @desc The particle's life\n     * @type {number}\n     */\n    this.life = DEFAULT_LIFE;\n    /**\n     * @desc The particle's age\n     * @type {number}\n     */\n    this.age = DEFAULT_AGE;\n    /**\n     * @desc The particle's energy loss\n     * @type {number}\n     */\n    this.energy = DEFAULT_ENERGY;\n    /**\n     * @desc Determines if the particle is dead or not\n     * @type {number}\n     */\n    this.dead = DEFAULT_DEAD;\n    /**\n     * @desc Determines if the particle is sleeping or not\n     * @type {number}\n     */\n    this.sleep = DEFAULT_SLEEP;\n    /**\n     * @desc The particle's body\n     * @type {object}\n     */\n    this.body = DEFAULT_BODY;\n    /**\n     * @desc The particle's parent\n     * @type {?Emitter}\n     */\n    this.parent = DEFAULT_PARENT;\n    /**\n     * @desc The particle's mass\n     * @type {number}\n     */\n    this.mass = DEFAULT_MASS;\n    /**\n     * @desc The particle's radius\n     * @type {number}\n     */\n    this.radius = DEFAULT_RADIUS;\n    /**\n     * @desc The particle's alpha\n     * @type {number}\n     */\n    this.alpha = DEFAULT_ALPHA;\n    /**\n     * @desc The particle's scale\n     * @type {number}\n     */\n    this.scale = DEFAULT_SCALE;\n    /**\n     * @desc Determines whether to use color or not\n     * @type {boolean}\n     */\n    this.useColor = DEFAULT_USE_COLOR;\n    /**\n     * @desc Determines whether to use alpha or not\n     * @type {boolean}\n     */\n    this.useAlpha = DEFAULT_USE_ALPHA;\n    /**\n     * @desc The particle's easing\n     * @type {string}\n     */\n    this.easing = DEFAULT_EASING;\n    /**\n     * @desc The particle's position\n     * @type {Vector3D}\n     */\n    this.position = new Vector3D();\n    /**\n     * @desc The particle's velocity\n     * @type {Vector3D}\n     */\n    this.velocity = new Vector3D();\n    /**\n     * @desc The particle's acceleration\n     * @type {Vector3D}\n     */\n    this.acceleration = new Vector3D();\n    /**\n     * @desc The particle's last position, velocity and acceleration\n     * @type {Vector3D}\n     */\n    this.old = {};\n    /**\n     * @desc The particle's old position\n     * @type {Vector3D}\n     */\n    this.old.position = this.position.clone();\n    /**\n     * @desc The particle's old velocity\n     * @type {Vector3D}\n     */\n    this.old.velocity = this.velocity.clone();\n    /**\n     * @desc The particle's old acceleration\n     * @type {Vector3D}\n     */\n    this.old.acceleration = this.acceleration.clone();\n    /**\n     * @desc The particle's behaviours array\n     * @type {array}\n     */\n    this.behaviours = [];\n    /**\n     * @desc The particle's transform collection\n     * @type {object}\n     */\n    this.transform = {};\n    /**\n     * @desc The particle's color store\n     * @type {object}\n     */\n    this.color = { r: 0, g: 0, b: 0 };\n    /**\n     * @desc The particle's rotation\n     * @type {number}\n     */\n    this.rotation = new Vector3D();\n\n    /**\n     * @desc The particle's distance to the camera, only set by the GPURenderer for depth sorting purposes.\n     * @type {number}\n     */\n    this.distanceToCamera = 0;\n\n    // override constructor props with passed properties.\n    Util.setPrototypeByObj(this, properties);\n  }\n\n  /**\n   * Gets the particle's current direction.\n   *\n   * @return {number}\n   */\n  getDirection() {\n    return Math.atan2(this.velocity.x, -this.velocity.y) * (180 / PI);\n  }\n\n  /**\n   * Resets the particle's default properties and clear's its particle's position,\n   * velocity, acceleration, color and rotation. Also destroy's the particle's\n   * transform collection & removes all behaviours.\n   *\n   * @return {Particle}\n   */\n  reset() {\n    this.life = DEFAULT_LIFE;\n    this.age = DEFAULT_AGE;\n    this.energy = DEFAULT_ENERGY;\n    this.dead = DEFAULT_DEAD;\n    this.sleep = DEFAULT_SLEEP;\n    this.body = DEFAULT_BODY;\n    this.parent = DEFAULT_PARENT;\n    this.mass = DEFAULT_MASS;\n    this.radius = DEFAULT_RADIUS;\n    this.alpha = DEFAULT_ALPHA;\n    this.scale = DEFAULT_SCALE;\n    this.useColor = DEFAULT_USE_COLOR;\n    this.useAlpha = DEFAULT_USE_ALPHA;\n    this.easing = DEFAULT_EASING;\n    this.position.set(0, 0, 0);\n    this.velocity.set(0, 0, 0);\n    this.acceleration.set(0, 0, 0);\n    this.old.position.set(0, 0, 0);\n    this.old.velocity.set(0, 0, 0);\n    this.old.acceleration.set(0, 0, 0);\n    this.color.r = 0;\n    this.color.g = 0;\n    this.color.b = 0;\n\n    this.rotation.clear();\n    Util.destroyObject(this.transform);\n    this.removeAllBehaviours();\n\n    return this;\n  }\n\n  /**\n   * Updates the particle's properties by applying each behaviour to the particle.\n   * Will also update the particle's energy, unless it's age is greater than it's life\n   * in which case it will be destroyed.\n   *\n   * @param {number} time - Integration time\n   * @param {integer} index - Particle index\n   * @return void\n   */\n  update(time, index) {\n    if (!this.sleep) {\n      this.age += time;\n\n      let i = this.behaviours.length;\n\n      while (i--) {\n        let behaviour = this.behaviours[i];\n\n        //behaviour && \n        behaviour.applyBehaviour(this, time, index);\n      }\n    }\n\n    if (this.age >= this.life) {\n      this.destroy();\n    } else {\n      const scale = this.easing(this.age / this.life);\n\n      this.energy = Math.max(1 - scale, 0);\n    }\n  }\n\n  /**\n   * Adds a behaviour to the particle.\n   *\n   * @param {Behaviour} behaviour - The behaviour to add to the particle\n   * @return void\n   */\n  addBehaviour(behaviour) {\n    this.behaviours.push(behaviour);\n    behaviour.initialize(this);\n  }\n\n  /**\n   * Adds multiple behaviours to the particle.\n   *\n   * @param {array<Behaviour>} behaviours - An array of behaviours to add to the particle\n   * @return void\n   */\n  addBehaviours(behaviours) {\n    let i = behaviours.length;\n\n    while (i--) {\n      this.addBehaviour(behaviours[i]);\n    }\n  }\n\n  /**\n   * Removes the behaviour from the particle.\n   *\n   * @param {Behaviour} behaviour - The behaviour to remove from the particle\n   * @return void\n   */\n  removeBehaviour(behaviour) {\n    const index = this.behaviours.indexOf(behaviour);\n\n    if (index > -1) {\n      this.behaviours.splice(index, 1);\n    }\n  }\n\n  /**\n   * Removes all behaviours from the particle.\n   *\n   * @return void\n   */\n  removeAllBehaviours() {\n    Util.destroyArray(this.behaviours);\n  }\n\n  /**\n   * Destroys the particle.\n   *\n   * @return void\n   */\n  destroy() {\n    this.removeAllBehaviours();\n    this.energy = 0;\n    this.dead = true;\n    this.parent = null;\n  }\n}\n","export const CORE_TYPE_PARTICLE = 'Particle';\nexport const CORE_TYPE_POOL = 'Pool';\nexport const CORE_TYPE_SYSTEM = 'System';\n","import PUID from '../utils/PUID';\nimport { CORE_TYPE_POOL as type } from './types';\n/**\n * An object pool implementation. Used for pooling objects to avoid unnecessary\n * garbage collection.\n *\n */\nexport default class Pool {\n  /**\n   * Constructs a Pool instance.\n   *\n   * @return void\n   */\n  constructor() {\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n    /**\n     * @desc Incrementing id that keeps a count of the number of objects created\n     * @type {integer}\n     */\n    this.cID = 0;\n\n    /**\n     * @desc Map of pools in the format of PUID<String>: pool<Array>\n     * @type {object}\n     */\n    this.list = {};\n  }\n\n  /**\n   * Attempts to create a new object either by creating a new instance or calling its\n   * clone method.\n   *\n   * TODO COVERAGE - for the constructorArgs\n   * @param {function|object} functionOrObject - The object to instantiate or clone\n   * @return {object|undefined}\n   */\n  create(functionOrObject, ...constructorArgs) {\n    if (!this.canCreateNewObject(functionOrObject)) {\n      throw new Error(\n        'The pool is unable to create or clone the object supplied'\n      );\n    }\n\n    this.cID++;\n\n    if (this.canInstantiateObject(functionOrObject)) {\n      return new functionOrObject(...constructorArgs);\n    }\n\n    if (this.canCloneObject(functionOrObject)) {\n      return functionOrObject.clone();\n    }\n  }\n\n  /**\n   * Determines if the object is able to be instantiated or not.\n   *\n   * @param {object} object - The object to check\n   * @return {boolean}\n   */\n  canInstantiateObject(object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * Determines if the object is able to be cloned or not.\n   *\n   * @param {object} object - The object to check\n   * @return {boolean}\n   */\n  canCloneObject(object) {\n    return object.clone && typeof object.clone === 'function';\n  }\n\n  /**\n   * Determines if a new object is able to be created.\n   *\n   * @param {object} object - The object to check\n   * @return {boolean}\n   */\n  canCreateNewObject(object) {\n    return this.canInstantiateObject(object) || this.canCloneObject(object)\n      ? true\n      : false;\n  }\n\n  /**\n   * Gets a count of all objects in the pool.\n   *\n   * @return {integer}\n   */\n  getCount() {\n    var count = 0;\n\n    for (var id in this.list) count += this.list[id].length;\n\n    return count++;\n  }\n\n  /**\n   * Gets an object either by creating a new one or retrieving it from the pool.\n   *\n   * @param {function|object} obj - The function or object to get\n   * @param {array} args - The args to pass to the function on creation\n   * @return {object}\n   */\n  get(obj, ...args) {\n    var p,\n      puid = obj.__puid || PUID.id(obj);\n\n    if (this.list[puid] && this.list[puid].length > 0)\n      p = this.list[puid].pop();\n    else p = this.create(obj, ...args);\n\n    p.__puid = obj.__puid || puid;\n\n    return p;\n  }\n\n  /**\n   * Pushes an object into the pool.\n   *\n   * @param {object} obj - The object to expire\n   * @return {integer}\n   */\n  expire(obj) {\n    return this._getList(obj.__puid).push(obj);\n  }\n\n  /**\n   * Destroys all pools.\n   *\n   * @return void\n   */\n  destroy() {\n    for (var id in this.list) {\n      this.list[id].length = 0;\n      delete this.list[id];\n    }\n  }\n\n  /**\n   * Gets the pool mapped to the UID.\n   *\n   * @param {string} uid - The pool uid\n   * @return {array}\n   */\n  _getList(uid) {\n    uid = uid || 'default';\n    if (!this.list[uid]) this.list[uid] = [];\n\n    return this.list[uid];\n  }\n}\n","import EventDispatcher from './EventDispatcher';\n\nexport default EventDispatcher;\nexport * from './constants';\n","/*\n * EventDispatcher\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n **/\n\nexport default class EventDispatcher {\n  constructor() {\n    this.listeners = null;\n  }\n\n  set listeners(listeners) {\n    this._listeners = listeners;\n  }\n\n  get listeners() {\n    return this._listeners;\n  }\n\n  addEventListener(type, listener) {\n    if (!this.listeners) {\n      this.listeners = {};\n    } else {\n      this.removeEventListener(type, listener);\n    }\n\n    if (!this.listeners[type]) this.listeners[type] = [];\n    this.listeners[type].push(listener);\n\n    return listener;\n  }\n\n  removeEventListener(type, listener) {\n    if (!this.listeners) return;\n    if (!this.listeners[type]) return;\n\n    var arr = this.listeners[type];\n\n    for (var i = 0, l = arr.length; i < l; i++) {\n      if (arr[i] == listener) {\n        if (l == 1) {\n          delete this.listeners[type];\n        }\n        // allows for faster checks.\n        else {\n          arr.splice(i, 1);\n        }\n        break;\n      }\n    }\n  }\n\n  removeAllEventListeners(type) {\n    if (!type) this.listeners = null;\n    else if (this.listeners) delete this.listeners[type];\n  }\n\n  dispatchEvent(eventName, eventTarget) {\n    var ret = false,\n      listeners = this.listeners;\n\n    if (eventName && listeners) {\n      var arr = listeners[eventName];\n\n      if (!arr) return ret;\n\n      arr = arr.slice();        //Should use a copy into a temporary here instead...\n      // to avoid issues with items being removed or added during the dispatch\n\n      var handler,\n        i = arr.length;\n\n      while (i--) {\n        handler = arr[i];\n\n        ret = ret || handler(eventTarget);\n      }\n    }\n\n    return !!ret;\n  }\n\n  hasEventListener(type) {\n    var listeners = this.listeners;\n\n    return !!(listeners && listeners[type]);\n  }\n}\n","export const SYSTEM_UPDATE = 'SYSTEM_UPDATE';\nexport const PARTICLE_CREATED = 'PARTICLE_CREATED';\nexport const PARTICLE_UPDATE = 'PARTICLE_UPDATE';\nexport const PARTICLE_DEAD = 'PARTICLE_DEAD';\nexport const EMITTER_ADDED = 'EMITTER_ADDED';\nexport const EMITTER_REMOVED = 'EMITTER_REMOVED';\nexport const EMITTER_DEAD = 'EMITTER_DEAD';\nexport const SYSTEM_UPDATE_AFTER = 'SYSTEM_UPDATE_AFTER';\n","import { INITIALIZER_TYPE_ABSTRACT } from './types';\n\n/**\n * The base Emitter / Particle property class.\n *\n * @abstract\n */\nexport default class Initializer {\n  /**\n   * Constructs an Initializer instance.\n   *\n   * @param {string} [type=INITIALIZER_TYPE_ABSTRACT] - The intiializer type\n   * @param {boolean} [isEnabled=true] - Determines if the initializer should be enabled or not\n\n   * @return void\n   */\n  constructor(type = INITIALIZER_TYPE_ABSTRACT, isEnabled = true) {\n    this.type = type;\n    this.isEnabled = isEnabled;\n  }\n\n  /**\n   * Initializes the property on the emitter or particle.\n   *\n   * @see {@link '../emitter/emitter.js'} setupParticle\n   * @param {Emitter} emitter - the emitter to initialize the property on\n   * @param {Particle} particle - the particle to intiialize the property on\n   * @return void\n   */\n  init(emitter, particle) {\n    if (!this.isEnabled) {\n      return;\n    }\n\n    if (particle) {\n      this.initialize(particle);\n      particle.hasBeenInitialized = true;\n    } else {\n      this.initialize(emitter);\n      emitter.hasBeenInitialized = true;\n    }\n  }\n\n  /**\n   * @abstract\n   */\n  reset() {}\n\n  /**\n   * Place custom property initialization code in this method in the subclass.\n   *\n   * @param {object} target - either an Emitter or a Particle\n   * @abstract\n   */\n  initialize(target) {} // eslint-disable-line\n\n  /**\n   * Determines if the initializer requires a Web GL API to be provided to its constructor.\n   * If true, the WebGL API will need to be provided as the first argument to the constructor\n   * and fromJSON methods.\n   *\n   * @return {boolean}\n   */\n  static requiresWebGlApi() {\n    return false;\n  }\n\n  /**\n   * Returns a new instance of the initializer from the JSON object passed.\n   *\n   * @abstract\n   * @param {object} json - JSON object containing the required constructor properties\n   * @return {Behaviour}\n   */\n  static fromJSON(json) {} // eslint-disable-line\n}\n","import Initializer from './Initializer';\nimport { createArraySpan } from '../math';\nimport { INITIALIZER_TYPE_BODY as type } from './types';\n/**\n * Sets the body property on initialized particles.\n *\n */\nexport default class Body extends Initializer {\n  /**\n   * Constructs a Body initalizer instance.\n   *\n   * @param {string|number|object} body - The content for the particle body, can\n   * be a color or an object (mesh)\n   * @param {?number} w - The width of the particle body\n   * @param {?number} h - The height of the particle body\n   * @return void\n   */\n  constructor(body, w, h, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc The content for the particle body\n     * @type {ArraySpan}\n     */\n    this.body = createArraySpan(body);\n\n    /**\n     * @desc The width of the particle Body\n     * @type {number}\n     */\n    this.w = w;\n\n    /**\n     * @desc The height of the particle Body\n     * @type {number}\n     */\n    this.h = h || w;\n  }\n\n  /**\n   * Sets the particle's initial body.\n   *\n   * @param {Particle} particle - the particle to initialize the property on\n   * @return void\n   */\n  initialize(particle) {\n    var body = this.body.getValue();\n\n    if (this.w) {\n      particle.body = {\n        width: this.w,\n        height: this.h,\n        body: body,\n      };\n    } else {\n      particle.body = body;\n    }\n  }\n\n  /**\n   * Creates a Body initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.body - The color for the particle body\n   * @property {number} json.width - The width of the particle body\n   * @property {number} json.height - The height of the particle body\n   * @return {Body}\n   */\n  static fromJSON(json) {\n    const { body, width, height, isEnabled = true } = json;\n\n    return new Body(body, width, height, isEnabled);\n  }\n}\n","import {\n  AdditiveBlending,\n  CustomBlending,\n  MultiplyBlending,\n  NoBlending,\n  NormalBlending,\n  SubtractiveBlending,\n} from '../core/three/';\n\nexport const SUPPORTED_MATERIAL_BLENDING_MODES = {\n  AdditiveBlending,\n  CustomBlending,\n  MultiplyBlending,\n  NoBlending,\n  NormalBlending,\n  SubtractiveBlending,\n};\n\nexport const DEFAULT_MATERIAL_PROPERTIES = {\n  color: 0xff0000,\n  blending: AdditiveBlending,\n  fog: true,\n};\nexport const DEFAULT_JSON_MATERIAL_PROPERTIES = {\n  ...DEFAULT_MATERIAL_PROPERTIES,\n  blending: 'AdditiveBlending',\n};\nexport const DEFAULT_RATE_NUM_PAN = 1;\nexport const DEFAULT_RATE_TIME_PAN = 1;\n","export var REVISION = '106';\nexport var MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nexport var CullFaceNone = 0;\nexport var CullFaceBack = 1;\nexport var CullFaceFront = 2;\nexport var CullFaceFrontBack = 3;\nexport var FrontFaceDirectionCW = 0;\nexport var FrontFaceDirectionCCW = 1;\nexport var BasicShadowMap = 0;\nexport var PCFShadowMap = 1;\nexport var PCFSoftShadowMap = 2;\nexport var FrontSide = 0;\nexport var BackSide = 1;\nexport var DoubleSide = 2;\nexport var FlatShading = 1;\nexport var SmoothShading = 2;\nexport var NoColors = 0;\nexport var FaceColors = 1;\nexport var VertexColors = 2;\nexport var NoBlending = 0;\nexport var NormalBlending = 1;\nexport var AdditiveBlending = 2;\nexport var SubtractiveBlending = 3;\nexport var MultiplyBlending = 4;\nexport var CustomBlending = 5;\nexport var AddEquation = 100;\nexport var SubtractEquation = 101;\nexport var ReverseSubtractEquation = 102;\nexport var MinEquation = 103;\nexport var MaxEquation = 104;\nexport var ZeroFactor = 200;\nexport var OneFactor = 201;\nexport var SrcColorFactor = 202;\nexport var OneMinusSrcColorFactor = 203;\nexport var SrcAlphaFactor = 204;\nexport var OneMinusSrcAlphaFactor = 205;\nexport var DstAlphaFactor = 206;\nexport var OneMinusDstAlphaFactor = 207;\nexport var DstColorFactor = 208;\nexport var OneMinusDstColorFactor = 209;\nexport var SrcAlphaSaturateFactor = 210;\nexport var NeverDepth = 0;\nexport var AlwaysDepth = 1;\nexport var LessDepth = 2;\nexport var LessEqualDepth = 3;\nexport var EqualDepth = 4;\nexport var GreaterEqualDepth = 5;\nexport var GreaterDepth = 6;\nexport var NotEqualDepth = 7;\nexport var MultiplyOperation = 0;\nexport var MixOperation = 1;\nexport var AddOperation = 2;\nexport var NoToneMapping = 0;\nexport var LinearToneMapping = 1;\nexport var ReinhardToneMapping = 2;\nexport var Uncharted2ToneMapping = 3;\nexport var CineonToneMapping = 4;\nexport var ACESFilmicToneMapping = 5;\n\nexport var UVMapping = 300;\nexport var CubeReflectionMapping = 301;\nexport var CubeRefractionMapping = 302;\nexport var EquirectangularReflectionMapping = 303;\nexport var EquirectangularRefractionMapping = 304;\nexport var SphericalReflectionMapping = 305;\nexport var CubeUVReflectionMapping = 306;\nexport var CubeUVRefractionMapping = 307;\nexport var RepeatWrapping = 1000;\nexport var ClampToEdgeWrapping = 1001;\nexport var MirroredRepeatWrapping = 1002;\nexport var NearestFilter = 1003;\nexport var NearestMipMapNearestFilter = 1004;\nexport var NearestMipMapLinearFilter = 1005;\nexport var LinearFilter = 1006;\nexport var LinearMipMapNearestFilter = 1007;\nexport var LinearMipMapLinearFilter = 1008;\nexport var UnsignedByteType = 1009;\nexport var ByteType = 1010;\nexport var ShortType = 1011;\nexport var UnsignedShortType = 1012;\nexport var IntType = 1013;\nexport var UnsignedIntType = 1014;\nexport var FloatType = 1015;\nexport var HalfFloatType = 1016;\nexport var UnsignedShort4444Type = 1017;\nexport var UnsignedShort5551Type = 1018;\nexport var UnsignedShort565Type = 1019;\nexport var UnsignedInt248Type = 1020;\nexport var AlphaFormat = 1021;\nexport var RGBFormat = 1022;\nexport var RGBAFormat = 1023;\nexport var LuminanceFormat = 1024;\nexport var LuminanceAlphaFormat = 1025;\nexport var RGBEFormat = RGBAFormat;\nexport var DepthFormat = 1026;\nexport var DepthStencilFormat = 1027;\nexport var RedFormat = 1028;\nexport var RGB_S3TC_DXT1_Format = 33776;\nexport var RGBA_S3TC_DXT1_Format = 33777;\nexport var RGBA_S3TC_DXT3_Format = 33778;\nexport var RGBA_S3TC_DXT5_Format = 33779;\nexport var RGB_PVRTC_4BPPV1_Format = 35840;\nexport var RGB_PVRTC_2BPPV1_Format = 35841;\nexport var RGBA_PVRTC_4BPPV1_Format = 35842;\nexport var RGBA_PVRTC_2BPPV1_Format = 35843;\nexport var RGB_ETC1_Format = 36196;\nexport var RGBA_ASTC_4x4_Format = 37808;\nexport var RGBA_ASTC_5x4_Format = 37809;\nexport var RGBA_ASTC_5x5_Format = 37810;\nexport var RGBA_ASTC_6x5_Format = 37811;\nexport var RGBA_ASTC_6x6_Format = 37812;\nexport var RGBA_ASTC_8x5_Format = 37813;\nexport var RGBA_ASTC_8x6_Format = 37814;\nexport var RGBA_ASTC_8x8_Format = 37815;\nexport var RGBA_ASTC_10x5_Format = 37816;\nexport var RGBA_ASTC_10x6_Format = 37817;\nexport var RGBA_ASTC_10x8_Format = 37818;\nexport var RGBA_ASTC_10x10_Format = 37819;\nexport var RGBA_ASTC_12x10_Format = 37820;\nexport var RGBA_ASTC_12x12_Format = 37821;\nexport var LoopOnce = 2200;\nexport var LoopRepeat = 2201;\nexport var LoopPingPong = 2202;\nexport var InterpolateDiscrete = 2300;\nexport var InterpolateLinear = 2301;\nexport var InterpolateSmooth = 2302;\nexport var ZeroCurvatureEnding = 2400;\nexport var ZeroSlopeEnding = 2401;\nexport var WrapAroundEnding = 2402;\nexport var TrianglesDrawMode = 0;\nexport var TriangleStripDrawMode = 1;\nexport var TriangleFanDrawMode = 2;\nexport var LinearEncoding = 3000;\nexport var sRGBEncoding = 3001;\nexport var GammaEncoding = 3007;\nexport var RGBEEncoding = 3002;\nexport var LogLuvEncoding = 3003;\nexport var RGBM7Encoding = 3004;\nexport var RGBM16Encoding = 3005;\nexport var RGBDEncoding = 3006;\nexport var BasicDepthPacking = 3200;\nexport var RGBADepthPacking = 3201;\nexport var TangentSpaceNormalMap = 0;\nexport var ObjectSpaceNormalMap = 1;\n","import {\n  DEFAULT_JSON_MATERIAL_PROPERTIES,\n  DEFAULT_MATERIAL_PROPERTIES,\n  SUPPORTED_MATERIAL_BLENDING_MODES,\n} from './constants';\n\nimport Initializer from './Initializer';\nimport { INITIALIZER_TYPE_BODY_SPRITE as type } from './types';\nimport { withDefaults } from '../utils';\n\n/**\n * Sets the body property to be a THREE.Sprite on initialized particles.\n *\n * NOTE The texture map MUST be set on the SpriteMaterial in the TextureLoader.load\n * callback. Not doing so will cause WebGL buffer errors.\n */\nexport default class BodySprite extends Initializer {\n  /**\n   * Constructs a BodySprite initializer.\n   *\n   * @param {object} THREE - The Web GL API we are using eg., THREE\n   * @param {string} texture - The sprite texture\n   * @param {object} materialProperties - The sprite material properties\n   * @throws {Error} If the TextureLoader fails to load the supplied texture\n   * @return void\n   */\n  constructor(\n    THREE,\n    texture,\n    materialProperties = DEFAULT_MATERIAL_PROPERTIES,\n    isEnabled = true\n  ) {\n    super(type, isEnabled);\n\n    const { Sprite, SpriteMaterial, TextureLoader } = THREE;\n\n    /**\n     * @desc The material properties for this object's SpriteMaterial\n     * NOTE This is required for testing purposes\n     * @type {object}\n     */\n    this.materialProperties = withDefaults(\n      DEFAULT_MATERIAL_PROPERTIES,\n      materialProperties\n    );\n\n    new TextureLoader().load(\n      texture,\n      map => {\n        /**\n         * @desc The texture for the THREE.SpriteMaterial map.\n         * @type {Texture}\n         */\n        this.texture = map;\n\n        /**\n         * @desc THREE.SpriteMaterial instance.\n         * @type {SpriteMaterial}\n         */\n        this.material = new SpriteMaterial({\n          ...{ map },\n          ...this.materialProperties,\n        });\n\n        /**\n         * @desc THREE.Sprite instance.\n         * @type {Sprite}\n         */\n        this.sprite = new Sprite(this.material);\n      },\n      undefined,\n      error => {\n        throw new Error(error);\n      }\n    );\n  }\n\n  /**\n   * Sets the particle body to the sprite.\n   *\n   * @param {Particle} particle - The particle to set the body of\n   * @return void\n   */\n  initialize(particle) {\n    particle.body = this.sprite;\n  }\n\n  /**\n   * Creates a BodySprite initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from\n   * @param {object} THREE - The Web GL API we are using eg., THREE\n   * @param {string} json.texture - The sprite texture\n   * @param {object} json.materialProperties - The sprite material properties\n   * @return {BodySprite}\n   */\n  static fromJSON(json, THREE) {\n    const {\n      texture,\n      materialProperties = DEFAULT_JSON_MATERIAL_PROPERTIES,\n      isEnabled = true,\n    } = json;\n\n    const ensureMappedBlendingMode = properties => {\n      const { blending } = properties;\n\n      return {\n        ...properties,\n        blending: blending\n          ? SUPPORTED_MATERIAL_BLENDING_MODES[blending]\n          : SUPPORTED_MATERIAL_BLENDING_MODES[\n            DEFAULT_JSON_MATERIAL_PROPERTIES.blending\n          ],\n      };\n    };\n\n    return new BodySprite(\n      THREE,\n      texture,\n      withDefaults(\n        DEFAULT_JSON_MATERIAL_PROPERTIES,\n        ensureMappedBlendingMode(materialProperties)\n      ),\n      isEnabled\n    );\n  }\n}\n","import { Euler } from '../core/three/';\n\nconst particleEuler = new Euler();\n\nexport default {\n  particleEuler: null,\n  /**\n   * Loops through the initializers array and calls each initializer's initialize method\n   * on the supplied particle. This sets the particle's initial properties.\n   *\n   * @see {@link '../emitter/Emitter'} setupParticle\n   * @param {Emitter} emitter - The emitter that has called this method\n   * @param {Particle} particle - The particle that has just been created\n   * @param {array<Initializer>} initializers - All of the emitter's initializers\n   * @return void\n   */\n  initialize: function(emitter, particle, initializers) {\n    let i = initializers.length;\n\n    while (i--) {\n      initializers[i].init(emitter, particle);\n    }\n\n    emitter.bindEmitter && this.bindEmitter(emitter, particle);\n  },\n\n  /**\n   * Ensures that the emitter's position, velocity and accleration are added\n   * to each created particle.\n   *\n   * @param {Emitter} emitter - The emitter that is emitting the particles\n   * @param {Particle} particle - The newly created particle\n   * @return void\n   */\n  bindEmitter: function(emitter, particle) {\n    const {\n      rotation: { x, y, z },\n    } = emitter;\n\n    particle.position.add(emitter.position);\n    particle.velocity.add(emitter.velocity);\n    particle.acceleration.add(emitter.acceleration);\n    particle.velocity.applyEuler(particleEuler.set(x, y, z));\n  },\n};\n","import Initializer from './Initializer';\nimport { createSpan } from '../math';\nimport { INITIALIZER_TYPE_LIFE as type } from './types';\n\n/**\n * Sets the life property on initialized particles.\n *\n */\nexport default class Life extends Initializer {\n  /**\n   * Constructs a Life property instance.\n   *\n   * @param {number} min - The minimum life\n   * @param {number} max - The maximum life\n   * @param {boolean} [center] - Determines whether to average the life value\n   * @param {boolean} [isEnabled=true] - Determines if the initializer should be enabled or not\n   * @return void\n   */\n  constructor(min, max, center, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc The life span of the particle.\n     * @type {Span}\n     */\n    this.lifePan = createSpan(min, max, center);\n  }\n\n  /**\n   * Sets the particle's initial life.\n   *\n   * @param {Particle} particle - the particle to initialize the property on\n   * @return void\n   */\n  initialize(particle) {\n    if (this.lifePan.a == Infinity || this.lifePan.a == 'infi') {\n      particle.life = Infinity;\n    } else {\n      particle.life = this.lifePan.getValue();\n    }\n  }\n\n  /**\n   * Creates a Life initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @param {number} json.min - The minimum life time\n   * @param {number} json.max - The maximum life time\n   * @param {number} json.center - The center of the life time\n   * @param {boolean} [json.isEnabled=true] - Determines if the initializer should be enabled or not\n   * @return {Life}\n   */\n  static fromJSON(json) {\n    const { min, max, center = false, isEnabled = true } = json;\n\n    return new Life(min, max, center, isEnabled);\n  }\n}\n","import Initializer from './Initializer';\nimport { createSpan } from '../math';\nimport { INITIALIZER_TYPE_MASS as type } from './types';\n\n/**\n * Sets the mass property on initialized particles.\n *\n */\nexport default class Mass extends Initializer {\n  /**\n   * Constructs a Mass initializer instance.\n   *\n   * @param {number} min - The minumum mass for the particle\n   * @param {number} max - The maximum mass for the particle\n   * @param {boolean} [center] - Determines whether to average the mass value\n   * @return void\n   */\n  constructor(min, max, center = false, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc The mass span which is used to set the particle mass value.\n     * @type {Span}\n     */\n    this.massPan = createSpan(min, max, center);\n  }\n\n  /**\n   * Sets the particle's initial mass.\n   *\n   * @param {Particle} particle - the particle to initialize the property on\n   * @return void\n   */\n  initialize(particle) {\n    particle.mass = this.massPan.getValue();\n  }\n\n  /**\n   * Creates a Mass initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.min - The minimum mass\n   * @property {number} json.max - The maximum mass\n   * @property {number} json.center - The center of the mass\n   * @return {Mass}\n   */\n  static fromJSON(json) {\n    const { min, max, center = false, isEnabled = true } = json;\n\n    return new Mass(min, max, center, isEnabled);\n  }\n}\n","import Vector3D from '../math/Vector3D';\nimport { ZONE_TYPE_ABSTRACT } from './types';\n\n/**\n * A Zone determines the area in 3D space where an emitter's particles can position\n * themselves. They are supplied to both the Position initializer\n * and the CrossZone behaviour.\n *\n * @see {@link '../initialize/Position.js'}\n * @see {@link '../behaviour/CrossZone.js'}\n * @abstract\n */\nexport default class Zone {\n  /**\n   * Constructs a Zone instance.\n   *\n   * @param {string} type - The zone type\n   * @return void\n   */\n  constructor(type = ZONE_TYPE_ABSTRACT) {\n    this.type = type;\n    this.vector = new Vector3D(0, 0, 0);\n    this.random = 0;\n    this.crossType = 'dead';\n    this.log = true;\n    this.supportsCrossing = true;\n  }\n\n  getPosition() {\n    return null;\n  }\n\n  crossing(particle) {\n    if (!this.supportsCrossing) {\n      return console.warn(\n        `${this.constructor.name} does not support the crossing method`\n      );\n    }\n\n    switch (this.crossType) {\n      case 'bound':\n        this._bound(particle);\n        break;\n\n      case 'cross':\n        this._cross(particle);\n        break;\n\n      case 'dead':\n        this._dead(particle);\n        break;\n    }\n  }\n\n  /**\n   * Determines if this zone is a BoxZone.\n   *\n   * @return {boolean}\n   */\n  isBoxZone() {\n    return false;\n  }\n\n  /**\n   * Determines if this zone is a LineZone.\n   *\n   * @return {boolean}\n   */\n  isLineZone() {\n    return false;\n  }\n\n  /**\n   * Determines if this zone is a MeshZone.\n   *\n   * @return {boolean}\n   */\n  isMeshZone() {\n    return false;\n  }\n\n  /**\n   * Determines if this zone is a PointZone.\n   *\n   * @return {boolean}\n   */\n  isPointZone() {\n    return false;\n  }\n\n  /**\n   * Determines if this zone is a ScreenZone.\n   *\n   * @return {boolean}\n   */\n  isScreenZone() {\n    return false;\n  }\n\n  /**\n   * Determines if this zone is a SphereZone.\n   *\n   * @return {boolean}\n   */\n  isSphereZone() {\n    return false;\n  }\n\n  /**\n   * Sets the particle's dead property to true if required.\n   *\n   * @param {Particle} particle\n   * @abstract\n   */\n  _dead(particle) {} //eslint-disable-line\n\n  /**\n   * @abstract\n   */\n  _bound(particle) {} //eslint-disable-line\n\n  /**\n   * @abstract\n   */\n  _cross(particle) {} //eslint-disable-line\n}\n","import MathUtils from '../math/MathUtils';\nimport Util from '../utils/Util';\nimport Zone from './Zone';\nimport { ZONE_TYPE_BOX as type } from './types';\n\nexport default class BoxZone extends Zone {\n  /**\n   * BoxZone is a box zone\n   * @param {Number|Vector3D} x - the position's x value or a Vector3D Object\n   * @param {Number} y - the position's y value\n   * @param {Number} z - the position's z value\n   * @param {Number} w - the Box's width\n   * @param {Number} h - the Box's height\n   * @param {Number} d - the Box's depth\n   * @example\n   * var boxZone = new BoxZone(0,0,0,50,50,50);\n   * or\n   * var boxZone = new BoxZone(new Vector3D(0,0,0), 50, 50, 50);\n   * @extends {Zone}\n   * @constructor\n   */\n  constructor(a, b, c, d, e, f) {\n    super(type);\n\n    // TODO this reassigning of arguments is pretty dangerous, need to fix it.\n    // eslint-disable-next-line\n    var x, y, z, w, h, d;\n\n    if (Util.isUndefined(b, c, d, e, f)) {\n      x = y = z = 0;\n      w = h = d = a || 100;\n    } else if (Util.isUndefined(d, e, f)) {\n      x = y = z = 0;\n      w = a;\n      h = b;\n      d = c;\n    } else {\n      x = a;\n      y = b;\n      z = c;\n      w = d;\n      h = e;\n      d = f;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.width = w;\n    this.height = h;\n    this.depth = d;\n    // TODO Set this via an argument to the constructor\n    this.friction = 0.85;\n    // TODO Set this via an argument to the constructor\n    this.max = 6;\n  }\n\n  /**\n   * Returns true to indicate this is a BoxZone.\n   *\n   * @return {boolean}\n   */\n  isBoxZone() {\n    return true;\n  }\n\n  getPosition() {\n    this.vector.x = this.x + MathUtils.randomAToB(-0.5, 0.5) * this.width;\n    this.vector.y = this.y + MathUtils.randomAToB(-0.5, 0.5) * this.height;\n    this.vector.z = this.z + MathUtils.randomAToB(-0.5, 0.5) * this.depth;\n\n    return this.vector;\n  }\n\n  _dead(particle) {\n    if (particle.position.x + particle.radius < this.x - this.width / 2)\n      particle.dead = true;\n    else if (particle.position.x - particle.radius > this.x + this.width / 2)\n      particle.dead = true;\n\n    if (particle.position.y + particle.radius < this.y - this.height / 2)\n      particle.dead = true;\n    else if (particle.position.y - particle.radius > this.y + this.height / 2)\n      particle.dead = true;\n\n    if (particle.position.z + particle.radius < this.z - this.depth / 2)\n      particle.dead = true;\n    else if (particle.position.z - particle.radius > this.z + this.depth / 2)\n      particle.dead = true;\n  }\n\n  _bound(particle) {\n    if (particle.position.x - particle.radius < this.x - this.width / 2) {\n      particle.position.x = this.x - this.width / 2 + particle.radius;\n      particle.velocity.x *= -this.friction;\n      this._static(particle, 'x');\n    } else if (particle.position.x + particle.radius > this.x + this.width / 2) {\n      particle.position.x = this.x + this.width / 2 - particle.radius;\n      particle.velocity.x *= -this.friction;\n      this._static(particle, 'x');\n    }\n\n    if (particle.position.y - particle.radius < this.y - this.height / 2) {\n      particle.position.y = this.y - this.height / 2 + particle.radius;\n      particle.velocity.y *= -this.friction;\n      this._static(particle, 'y');\n    } else if (particle.position.y + particle.radius > this.y + this.height / 2) {\n      particle.position.y = this.y + this.height / 2 - particle.radius;\n      particle.velocity.y *= -this.friction;\n      this._static(particle, 'y');\n    }\n\n    if (particle.position.z - particle.radius < this.z - this.depth / 2) {\n      particle.position.z = this.z - this.depth / 2 + particle.radius;\n      particle.velocity.z *= -this.friction;\n      this._static(particle, 'z');\n    } else if (particle.position.z + particle.radius > this.z + this.depth / 2) {\n      particle.position.z = this.z + this.depth / 2 - particle.radius;\n      particle.velocity.z *= -this.friction;\n      this._static(particle, 'z');\n    }\n  }\n\n  _static(particle, axis) {\n    if (particle.velocity[axis] * particle.acceleration[axis] > 0) return;\n    if (\n      Math.abs(particle.velocity[axis]) <\n      Math.abs(particle.acceleration[axis]) * 0.0167 * this.max\n    ) {\n      particle.velocity[axis] = 0;\n      particle.acceleration[axis] = 0;\n    }\n  }\n\n  _cross(particle) {\n    if (\n      particle.position.x + particle.radius < this.x - this.width / 2 &&\n      particle.velocity.x <= 0\n    )\n      particle.position.x = this.x + this.width / 2 + particle.radius;\n    else if (\n      particle.position.x - particle.radius > this.x + this.width / 2 &&\n      particle.velocity.x >= 0\n    )\n      particle.position.x = this.x - this.width / 2 - particle.radius;\n\n    if (\n      particle.position.y + particle.radius < this.y - this.height / 2 &&\n      particle.velocity.y <= 0\n    )\n      particle.position.y = this.y + this.height / 2 + particle.radius;\n    else if (\n      particle.position.y - particle.radius > this.y + this.height / 2 &&\n      particle.velocity.y >= 0\n    )\n      particle.position.y = this.y - this.height / 2 - particle.radius;\n\n    if (\n      particle.position.z + particle.radius < this.z - this.depth / 2 &&\n      particle.velocity.z <= 0\n    )\n      particle.position.z = this.z + this.depth / 2 + particle.radius;\n    else if (\n      particle.position.z - particle.radius > this.z + this.depth / 2 &&\n      particle.velocity.z >= 0\n    )\n      particle.position.z = this.z - this.depth / 2 - particle.radius;\n  }\n}\n","import Vector3D from '../math/Vector3D';\nimport Zone from './Zone';\nimport { ZONE_TYPE_LINE as type } from './types';\n\nexport default class LineZone extends Zone {\n  /**\n   * LineZone is a 3d line zone\n   * @param {Number|Vector3D} x1 - the line's start point of x value or a Vector3D Object\n   * @param {Number|Vector3D} y1 - the line's start point of y value or a Vector3D Object\n   * @param {Number} z1 - the line's start point of z value\n   * @param {Number} x2 - the line's end point of x value\n   * @param {Number} y2 - the line's end point of y value\n   * @param {Number} z2 - the line's end point of z value\n   * @example\n   * var lineZone = new System.LineZone(0,0,0,100,100,0);\n   * or\n   * var lineZone = new System.LineZone(new System.Vector3D(0,0,0),new System.Vector3D(100,100,0));\n   * @extends {Zone}\n   * @constructor\n   */\n  constructor(x1, y1, z1, x2, y2, z2) {\n    super(type);\n\n    if (x1 instanceof Vector3D) {\n      this.x1 = x1.x;\n      this.y1 = x1.y;\n      this.z1 = x1.z;\n\n      this.x2 = x2.x;\n      this.y2 = x2.y;\n      this.z2 = x2.z;\n    } else {\n      this.x1 = x1;\n      this.y1 = y1;\n      this.z1 = z1;\n\n      this.x2 = x2;\n      this.y2 = y2;\n      this.z2 = z2;\n    }\n\n    this.supportsCrossing = false;\n  }\n\n  /**\n   * Returns true to indicate this is a LineZone.\n   *\n   * @return {boolean}\n   */\n  isLineZone() {\n    return true;\n  }\n\n  getPosition() {\n    this.random = Math.random();\n    this.vector.x = this.x1 + this.random * (this.x2 - this.x1);\n    this.vector.y = this.y1 + this.random * (this.y2 - this.y1);\n    this.vector.z = this.z1 + this.random * (this.z2 - this.z1);\n\n    return this.vector;\n  }\n}\n","import Zone from './Zone';\nimport { ZONE_TYPE_MESH as type } from './types';\n\n/**\n * Uses a three THREE.Geometry to determine the zone parameters.\n *\n */\nexport default class MeshZone extends Zone {\n  /**\n   * @constructs {MeshZone}\n   *\n   * @param {THREE.Geometry|Mesh} bounds - the geometry or mesh that will determine the zone bounds\n   * @param {number} scale - the zone scale\n   * @param {THREE.Geometry} ThreeGeometry - the three geometry class\n   * @return void\n   */\n  constructor(bounds, scale = 1, ThreeGeometry) {\n    super(type);\n\n    this.geometry = null;\n    this.scale = scale;\n    this.supportsCrossing = false;\n\n    if (bounds.type && bounds.type === 'Geometry') {\n      this.geometry = bounds;\n    }\n\n    if (bounds.geometry) {\n      this.geometry = bounds.geometry;\n    }\n\n    if (!this.geometry) {\n      throw new Error(\n        'MeshZone unable to set geometry from the supplied bounds'\n      );\n    }\n\n    if (this.geometry.isBufferGeometry) {\n      this.geometry = new ThreeGeometry().fromBufferGeometry(this.geometry);\n    }\n  }\n\n  /**\n   * Returns true to indicate this is a MeshZone.\n   *\n   * @return {boolean}\n   */\n  isMeshZone() {\n    return true;\n  }\n\n  getPosition() {\n    const vertices = this.geometry.vertices;\n    const rVector = vertices[(vertices.length * Math.random()) >> 0];\n\n    this.vector.x = rVector.x * this.scale;\n    this.vector.y = rVector.y * this.scale;\n    this.vector.z = rVector.z * this.scale;\n\n    return this.vector;\n  }\n}\n","import Util from '../utils/Util';\nimport Zone from './Zone';\nimport { ZONE_TYPE_POINT as type } from './types';\n\nexport default class PointZone extends Zone {\n  /**\n   * PointZone is a point zone\n   * @param {Number|Vector3D} x - the center's x value or a Vector3D Object\n   * @param {Number} y - the center's y value\n   * @param {Number} z - the center's z value\n   * @example\n   * var pointZone = new System.PointZone(0,30,10);\n   * or\n   * var pointZone = new System.PointZone(new System.Vector3D(0,30,10));\n   * @extends {Zone}\n   * @constructor\n   */\n  constructor(a, b, c) {\n    super(type);\n\n    // TODO see below, these should probably be assigned properly\n    // eslint-disable-next-line\n    var x, y, z;\n\n    if (Util.isUndefined(a, b, c)) {\n      x = y = z = 0;\n    } else {\n      x = a;\n      // eslint-disable-next-line\n      y = b;\n      // eslint-disable-next-line\n      z = c;\n    }\n\n    this.x = x;\n\n    // TODO shouldn't this be set to y?\n    this.y = x;\n\n    // TODO shouldn't this be set to z?\n    this.z = x;\n    this.supportsCrossing = false;\n  }\n\n  /**\n   * Returns true to indicate this is a PointZone.\n   *\n   * @return {boolean}\n   */\n  isPointZone() {\n    return true;\n  }\n\n  getPosition() {\n    this.vector.x = this.x;\n    this.vector.y = this.y;\n    this.vector.z = this.z;\n\n    return this.vector;\n  }\n}\n","import THREEUtil from '../utils/THREEUtil';\nimport Vector3D from '../math/Vector3D';\nimport Zone from './Zone';\nimport { ZONE_TYPE_SCREEN as type } from './types';\n\nexport default class ScreenZone extends Zone {\n  /**\n   * ScreenZone is a 3d line zone\n   * @param {Number|Vector3D} x1 - the line's start point of x value or a Vector3D Object\n   * @param {Number|Vector3D} y1 - the line's start point of y value or a Vector3D Object\n   * @param {Number} z1 - the line's start point of z value\n   * @param {Number} x2 - the line's end point of x value\n   * @param {Number} y2 - the line's end point of y value\n   * @param {Number} z2 - the line's end point of z value\n   * @example\n   * var lineZone = new ScreenZone(0,0,0,100,100,0);\n   * or\n   * var lineZone = new ScreenZone(new Vector3D(0,0,0),new Vector3D(100,100,0));\n   * @extends {Zone}\n   * @constructor\n   */\n  constructor(camera, renderer, dis, dir) {\n    super(type);\n\n    this.camera = camera;\n    this.renderer = renderer;\n    this.dis = dis || 20;\n    dir = dir || '1234';\n\n    for (var i = 1; i < 5; i++) this['d' + i] = dir.indexOf(i + '') >= 0;\n  }\n\n  /**\n   * Returns true to indicate this is a ScreenZone.\n   *\n   * @return {boolean}\n   */\n  isScreenZone() {\n    return true;\n  }\n\n  _dead(particle) {\n    var pos = THREEUtil.toScreenPos(\n      particle.position,\n      this.camera,\n      this.renderer.domElement\n    );\n    var canvas = this.renderer.domElement;\n\n    if (pos.y + particle.radius < -this.dis && this.d1) {\n      particle.dead = true;\n    } else if (pos.y - particle.radius > canvas.height + this.dis && this.d3) {\n      particle.dead = true;\n    }\n\n    if (pos.x + particle.radius < -this.dis && this.d4) {\n      particle.dead = true;\n    } else if (pos.x - particle.radius > canvas.width + this.dis && this.d2) {\n      particle.dead = true;\n    }\n  }\n\n  _bound(particle) {\n    var pos = THREEUtil.toScreenPos(\n      particle.position,\n      this.camera,\n      this.renderer.domElement\n    );\n    var canvas = this.renderer.domElement;\n\n    if (pos.y + particle.radius < -this.dis) {\n      particle.velocity.y *= -1;\n    } else if (pos.y - particle.radius > canvas.height + this.dis) {\n      particle.velocity.y *= -1;\n    }\n\n    if (pos.x + particle.radius < -this.dis) {\n      particle.velocity.y *= -1;\n    } else if (pos.x - particle.radius > canvas.width + this.dis) {\n      particle.velocity.y *= -1;\n    }\n  }\n}\n\nScreenZone.prototype.getPosition = (function() {\n  var vec2 = new Vector3D(),\n    canvas;\n\n  return function() {\n    canvas = this.renderer.domElement;\n    vec2.x = Math.random() * canvas.width;\n    vec2.y = Math.random() * canvas.height;\n    this.vector.copy(THREEUtil.toSpacePos(vec2, this.camera, canvas));\n\n    return this.vector;\n  };\n})();\n\nScreenZone.prototype._cross = (function() {\n  var vec2 = new Vector3D();\n\n  return function(particle) {\n    var pos = THREEUtil.toScreenPos(\n      particle.position,\n      this.camera,\n      this.renderer.domElement\n    );\n    var canvas = this.renderer.domElement;\n\n    if (pos.y + particle.radius < -this.dis) {\n      vec2.x = pos.x;\n      vec2.y = canvas.height + this.dis + particle.radius;\n      particle.position.y = THREEUtil.toSpacePos(vec2, this.camera, canvas).y;\n    } else if (pos.y - particle.radius > canvas.height + this.dis) {\n      vec2.x = pos.x;\n      vec2.y = -this.dis - particle.radius;\n      particle.position.y = THREEUtil.toSpacePos(vec2, this.camera, canvas).y;\n    }\n\n    if (pos.x + particle.radius < -this.dis) {\n      vec2.y = pos.y;\n      vec2.x = canvas.width + this.dis + particle.radius;\n      particle.position.x = THREEUtil.toSpacePos(vec2, this.camera, canvas).x;\n    } else if (pos.x - particle.radius > canvas.width + this.dis) {\n      vec2.y = pos.y;\n      vec2.x = -this.dis - particle.radius;\n      particle.position.x = THREEUtil.toSpacePos(vec2, this.camera, canvas).x;\n    }\n  };\n})();\n","import { PI } from '../constants';\nimport Util from '../utils/Util';\nimport Vector3D from '../math/Vector3D';\nimport Zone from './Zone';\nimport { ZONE_TYPE_SPHERE as type } from './types';\n\n/**\n * A spherical zone for particles to be emitted within.\n *\n */\nexport default class SphereZone extends Zone {\n  /**\n   * @constructs {SphereZone}\n   *\n   * @param {number} centerX - the sphere's center x coordinate\n   * @param {number} centerY - the sphere's center y coordinate\n   * @param {number} centerZ - the sphere's center z coordinate\n   * @param {number} radius - the sphere's radius value\n   * @return void\n   */\n  constructor(centerX, centerY, centerZ, radius) {\n    super(type);\n\n    // TODO see below, these should probably be assigned properly\n    // eslint-disable-next-line\n    let x, y, z, r;\n\n    if (Util.isUndefined(centerY, centerZ, radius)) {\n      x = y = z = 0;\n      r = centerX || 100;\n    } else {\n      x = centerX;\n      // eslint-disable-next-line\n      y = centerY;\n      // eslint-disable-next-line\n      z = centerZ;\n      r = radius;\n    }\n\n    this.x = x;\n\n    // TODO shouldn't this be set to y?\n    this.y = x;\n\n    // TODO shouldn't this be set to z?\n    this.z = x;\n    this.radius = r;\n    this.the = this.phi = 0;\n  }\n\n  /**\n   * Returns true to indicate this is a SphereZone.\n   *\n   * @return {boolean}\n   */\n  isSphereZone() {\n    return true;\n  }\n\n  /**\n   * Sets the particle to dead if the particle collides with the sphere.\n   *\n   * @param {object} particle\n   * @return void\n   */\n  _dead(particle) {\n    var d = particle.position.distanceTo(this);\n\n    if (d - particle.radius > this.radius) particle.dead = true;\n  }\n\n  /**\n   * Warns that this zone does not support the _cross method.\n   *\n   * @return void\n   */\n  _cross() {\n    console.warn(`${this.constructor.name} does not support the _cross method`);\n  }\n}\n\nSphereZone.prototype.getPosition = (function() {\n  var tha, phi, r;\n\n  return function() {\n    this.random = Math.random();\n\n    r = this.random * this.radius;\n    tha = PI * Math.random(); //[0-pi]\n    phi = PI * 2 * Math.random(); //[0-2pi]\n\n    this.vector.x = this.x + r * Math.sin(tha) * Math.cos(phi);\n    this.vector.y = this.y + r * Math.sin(phi) * Math.sin(tha);\n    this.vector.z = this.z + r * Math.cos(tha);\n\n    return this.vector;\n  };\n})();\n\nSphereZone.prototype._bound = (function() {\n  var normal = new Vector3D(),\n    v = new Vector3D(),\n    k;\n\n  return function(particle) {\n    var d = particle.position.distanceTo(this);\n\n    if (d + particle.radius >= this.radius) {\n      normal\n        .copy(particle.position)\n        .sub(this)\n        .normalize();\n      v.copy(particle.velocity);\n      k = 2 * v.dot(normal);\n      particle.velocity.sub(normal.scalar(k));\n    }\n  };\n})();\n","import * as Zone from '../zone';\n\nimport Initializer from './Initializer';\nimport { SUPPORTED_JSON_ZONE_TYPES } from '../core/constants';\nimport { INITIALIZER_TYPE_POSITION as type } from './types';\n\n/**\n * Sets the starting position property for initialized particles.\n * This is derived from a zone randomly chosen from those supplied to the constructor.\n *\n */\nexport default class Position extends Initializer {\n  /**\n   * Constructs a Position initializer instance.\n   *\n   * @param {Zone|array<Zone>}\n   * @return void\n   */\n  constructor() {\n    super(type);\n\n    this.reset.apply(this, arguments);\n  }\n\n  /**\n   * Resets the initializer properties.\n   * Clears all previously set zones and resets the zones according to args passed.\n   *\n   * @param {Zone|array<Zone>}\n   * @return void\n   */\n  reset() {\n    if (!this.zones) {\n      this.zones = [];\n    } else {\n      this.zones.length = 0;\n    }\n\n    /**\n     * @desc The zones to use as bounds for calculating the particle's starting position.\n     * @type {array<Zone>}\n     */\n    this.zones = this.zones.concat(Array.prototype.slice.call(arguments));\n  }\n\n  /**\n   * Adds a zone or zones to this.zones.\n   *\n   * @param {Zone|array<Zone>}\n   * @return void\n   */\n  addZone() {\n    this.zones = this.zones.concat(Array.prototype.slice.call(arguments));\n  }\n\n  /**\n   * Creates a Position initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @param {string} json.zoneType - The type of zone to use for initial position\n   * @return {Position}\n   */\n  static fromJSON(json) {\n    const { zoneType, ...params } = json;\n\n    if (!SUPPORTED_JSON_ZONE_TYPES.includes(zoneType)) {\n      throw new Error(\n        `The zone type ${zoneType} is invalid or not yet supported`\n      );\n    }\n\n    return new Position(new Zone[zoneType](...Object.values(params)));\n  }\n}\n\n/**\n * Sets the particle's initial position.\n *\n * @param {Particle} particle - the particle to initialize the property on\n * @return void\n */\nPosition.prototype.initialize = (function() {\n  let zone;\n\n  return function(target) {\n    zone = this.zones[(Math.random() * this.zones.length) >> 0];\n\n    zone.getPosition();\n\n    target.position.x = zone.vector.x;\n    target.position.y = zone.vector.y;\n    target.position.z = zone.vector.z;\n  };\n})();\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import Initializer from './Initializer';\nimport { createSpan } from '../math';\nimport { INITIALIZER_TYPE_RADIUS as type } from './types';\n/**\n * Sets the radius property on initialized particles.\n *\n */\nexport default class Radius extends Initializer {\n  /**\n   * Constructs a Radius initializer instance.\n   *\n   * @param {number} width - The width of the particle radius\n   * @param {number} height - The height of the particle radius\n   * @param {boolean} [center=false] - Determines whether to average the radius value\n   * @return void\n   */\n  constructor(width, height, center = false, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc The radius span which is used to set the particle radius value.\n     * @type {Span}\n     */\n    this.radius = createSpan(width, height, center);\n  }\n\n  /**\n   * Resets the initializer properties.\n   * Clears all previously set zones and resets the zones according to args passed.\n   *\n   * @param {number} width - The width of the particle radius\n   * @param {number} height - The height of the particle radius\n   * @param {boolean} [center=false] - Determines whether to average the radius value\n   * @return void\n   */\n  reset(width, height, center = false) {\n    this.radius = createSpan(width, height, center);\n  }\n\n  /**\n   * Sets the particle's initial radius.\n   *\n   * @param {Particle} particle - the particle to initialize the property on\n   * @return void\n   */\n  initialize(particle) {\n    particle.radius = this.radius.getValue();\n    particle.transform.oldRadius = particle.radius;\n  }\n\n  /**\n   * Creates a Radius initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.width - The width of the particle radius\n   * @property {number} json.height - The height of the particle radius\n   * @property {number} json.center - The center of the particle radius\n   * @return {Radius}\n   */\n  static fromJSON(json) {\n    const { width, height, center = false, isEnabled = true } = json;\n\n    return new Radius(width, height, center, isEnabled);\n  }\n}\n","import { DEFAULT_RATE_NUM_PAN, DEFAULT_RATE_TIME_PAN } from './constants';\nimport { Span, createSpan } from '../math';\n\nimport Initializer from './Initializer';\nimport { INITIALIZER_TYPE_RATE as type } from './types';\n\n/**\n * Calculates the rate of particle emission.\n *\n * NOTE This doesn't need to be an initializer, it doesn't have an initialize\n * method, it overrides the base init method and it is only relevent to the Emitter class.\n * It would be better to move this to the Emitter module itself as a standalone class.\n *\n */\nexport default class Rate extends Initializer {\n  /**\n   * Constructs a Rate instance.\n   *\n   * @param {number|array|Span} numPan - The number of particles to emit\n   * @param {number|array|Span} timePan - The time between each particle emission\n   * @return void\n   */\n  constructor(numPan = DEFAULT_RATE_NUM_PAN, timePan = DEFAULT_RATE_TIME_PAN) {\n    super(type);\n\n    /**\n     * @desc Sets the number of particles to emit.\n     * @type {Span}\n     */\n    this.numPan = createSpan(numPan);\n\n    /**\n     * @desc Sets the time between each particle emission.\n     * @type {Span}\n     */\n    this.timePan = createSpan(timePan);\n\n    /**\n     * @desc The rate's start time.\n     * @type {number}\n     */\n    this.startTime = 0;\n\n    /**\n     * @desc The rate's next time.\n     * @type {number}\n     */\n    this.nextTime = 0;\n\n    this.init();\n  }\n\n  /**\n   * Sets the startTime and nextTime properties.\n   *\n   * @return void\n   */\n  init() {\n    this.startTime = 0;\n    this.nextTime = this.timePan.getValue();\n  }\n\n  /**\n   * Gets the number of particles to emit.\n   *\n   * @param {number} time - Current particle engine time\n   * @return {number}\n   */\n  getValue(time) {\n    this.startTime += time;\n\n    if (this.startTime >= this.nextTime) {\n      this.init();\n\n      if (this.numPan.b == 1) {\n        if (this.numPan.getValue('Float') > 0.5) return 1;\n        else return 0;\n      } else {\n        return this.numPan.getValue('Int');\n      }\n    }\n\n    return 0;\n  }\n\n  /**\n   * Creates a Rate initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.particlesMin - The minimum number of particles to emit\n   * @property {number} json.particlesMax - The maximum number of particles to emit\n   * @property {number} json.perSecondMin - The minimum per second emit rate\n   * @property {number} json.perSecondMax - The maximum per second emit rate\n   * @return {Rate}\n   */\n  static fromJSON(json) {\n    const { particlesMin, particlesMax, perSecondMin, perSecondMax } = json;\n\n    return new Rate(\n      new Span(particlesMin, particlesMax),\n      new Span(perSecondMin, perSecondMax)\n    );\n  }\n}\n","import {\n  DEFAULT_JSON_MATERIAL_PROPERTIES,\n  DEFAULT_MATERIAL_PROPERTIES,\n  SUPPORTED_MATERIAL_BLENDING_MODES,\n} from './constants';\n\nimport Initializer from './Initializer';\nimport { INITIALIZER_TYPE_TEXTURE as type } from './types';\nimport { withDefaults } from '../utils';\n\n/**\n * Sets the body property to be a THREE.Sprite with a texture map on initialized particles.\n *\n */\nexport default class Texture extends Initializer {\n  /**\n   * Constructs an Texture initializer.\n   *\n   * @param {object} THREE - The Web GL API we are using eg., THREE\n   * @param {string} texture - The sprite texture\n   * @param {object|undefined} materialProperties - The sprite material properties\n   * @param {?Texture} loadedTexture - Preloaded THREE.Texture instance\n   */\n  constructor(\n    THREE,\n    loadedTexture,\n    materialProperties = DEFAULT_MATERIAL_PROPERTIES,\n    isEnabled = true\n  ) {\n    super(type, isEnabled);\n\n    const { Sprite, SpriteMaterial } = THREE;\n\n    /**\n     * @desc The material properties for this object's SpriteMaterial\n     * NOTE This is required for testing purposes\n     * @type {object}\n     */\n    this.materialProperties = withDefaults(\n      DEFAULT_MATERIAL_PROPERTIES,\n      materialProperties\n    );\n\n    /**\n     * @desc The texture for the THREE.SpriteMaterial map.\n     * @type {Texture}\n     */\n    this.texture = loadedTexture;\n\n    /**\n     * @desc THREE.SpriteMaterial instance.\n     * @type {SpriteMaterial}\n     */\n    this.material = new SpriteMaterial({\n      ...{ map: loadedTexture },\n      ...this.materialProperties,\n    });\n\n    /**\n     * @desc THREE.Sprite instance.\n     * @type {Sprite}\n     */\n    this.sprite = new Sprite(this.material);\n  }\n\n  /**\n   * Sets the particle body to the sprite.\n   *\n   * @param {Particle} particle - The particle to set the body of\n   * @return void\n   */\n  initialize(particle) {\n    particle.body = this.sprite;\n  }\n\n  /**\n   * Creates a Texture initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from\n   * @param {object} THREE - The Web GL API we are using eg., THREE\n   * @param {Texture} json.loadedTexture - The loaded sprite texture\n   * @param {object} json.materialProperties - The sprite material properties\n   * @return {BodySprite}\n   */\n  static fromJSON(json, THREE) {\n    const {\n      loadedTexture,\n      materialProperties = DEFAULT_JSON_MATERIAL_PROPERTIES,\n      isEnabled = true,\n    } = json;\n\n    const ensureMappedBlendingMode = properties => {\n      const { blending } = properties;\n\n      return {\n        ...properties,\n        blending: blending\n          ? SUPPORTED_MATERIAL_BLENDING_MODES[blending]\n          : SUPPORTED_MATERIAL_BLENDING_MODES[\n            DEFAULT_JSON_MATERIAL_PROPERTIES.blending\n          ],\n      };\n    };\n\n    return new Texture(\n      THREE,\n      loadedTexture,\n      withDefaults(\n        DEFAULT_JSON_MATERIAL_PROPERTIES,\n        ensureMappedBlendingMode(materialProperties)\n      ),\n      isEnabled\n    );\n  }\n}\n","import { MEASURE, PI } from '../../constants';\nimport { MathUtils, Vector3D } from '../../math';\n\nimport Initializer from '../Initializer';\n\n/**\n * Abstract class for Velocity initializers.\n *\n */\nexport default class Velocity extends Initializer {\n  /**\n   * Constructs a Velocity intitializer instance.\n   *\n   * @return void\n   */\n  constructor(type, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc Directional vector\n     * @type {Vector3D}\n     */\n    this.dirVec = new Vector3D(0, 0, 0);\n  }\n\n  normalize(vr) {\n    return vr * MEASURE;\n  }\n}\n\n/**\n * Sets the particle's initial velocity.\n *\n * @singleton\n * @param {Particle} particle - the particle to initialize the property on\n * @return void\n */\nVelocity.prototype.initialize = (function() {\n  var tha;\n  var normal = new Vector3D(0, 0, 1);\n  var v = new Vector3D(0, 0, 0);\n\n  return function initialize(particle) {\n    tha = this.tha * Math.random();\n    this._useV && this.dirVec.copy(this.dir).scalar(this.radiusPan.getValue());\n\n    MathUtils.getNormal(this.dirVec, normal);\n    v.copy(this.dirVec).applyAxisAngle(normal, tha);\n    v.applyAxisAngle(this.dirVec.normalize(), Math.random() * PI * 2);\n\n    particle.velocity.copy(v);\n\n    return this;\n  };\n})();\n","import { DR } from '../../constants';\nimport { Polar3D } from '../../math';\nimport Velocity from './Velocity';\nimport { INITIALIZER_TYPE_POLAR_VELOCITY as type } from '../types';\n\n/**\n * Sets the velocity property on initialized particles.\n *\n */\nexport default class PolarVelocity extends Velocity {\n  /**\n   * Constructs a PolarVelocity initializer.\n   *\n   * @param {Polar3D} polar3d - The polar vector for the velocity\n   * @param {number} theta - The theta angle to use\n   * @return void\n   */\n  constructor(polar3d, theta, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc Theta.\n     * @type {number}\n     */\n    this.tha = theta * DR;\n\n    /**\n     * @desc Directional vector\n     * @type {Vector3D}\n     */\n    this.dirVec = polar3d.toVector3D();\n\n    /**\n     * @desc Determines whether to use the directional vector or not.\n     * @type {boolean}\n     */\n    this._useV = false;\n  }\n\n  /**\n   * Creates a PolarVelocity initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @param {number} json.polarRadius - The Polar3D radius\n   * @param {number} json.polarTheta - The Polar3D theta\n   * @param {number} json.polarPhi - The Polar3D phi\n   * @param {number} json.velocityTheta - The velocity theta\n   * @return {PolarVelocity}\n   */\n  static fromJSON(json) {\n    const {\n      polarRadius,\n      polarTheta,\n      polarPhi,\n      velocityTheta,\n      isEnabled = true,\n    } = json;\n\n    return new PolarVelocity(\n      new Polar3D(polarRadius, polarTheta, polarPhi),\n      velocityTheta,\n      isEnabled\n    );\n  }\n}\n","import { Vector3D, createSpan } from '../../math';\n\nimport { DR } from '../../constants';\nimport Velocity from './Velocity';\nimport { INITIALIZER_TYPE_RADIAL_VELOCITY as type } from '../types';\n\n/**\n * Sets the velocity property on initialized particles.\n *\n */\nexport default class RadialVelocity extends Velocity {\n  /**\n   * Constructs a RadialVelocity initializer.\n   *\n   * @param {number|Span} radius - The velocity radius\n   * @param {Vector3D} vector3d - The directional vector for the velocity\n   * @param {number} theta - The theta angle to use\n   * @return void\n   */\n  constructor(radius, vector3d, theta, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc Velocity radius span.\n     * @type {Span}\n     */\n    this.radiusPan = createSpan(radius);\n\n    /**\n     * @desc Direction vector.\n     * @type {Vector3D}\n     */\n    this.dir = vector3d.clone().normalize();\n\n    /**\n     * @desc Theta.\n     * @type {number}\n     */\n    this.tha = theta * DR;\n\n    /**\n     * @desc Determines whether to use the directional vector or not.\n     * @type {boolean}\n     */\n    this._useV = true;\n  }\n\n  /**\n   * Creates a RadialVelocity initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @param {number} json.radius - The velocity radius\n   * @param {number} json.x - The velocity x axis direction\n   * @param {number} json.y - The velocity y axis direction\n   * @param {number} json.z - The velocity z axis direction\n   * @param {number} json.theta - The velocity theta\n   * @return {RadialVelocity}\n   */\n  static fromJSON(json) {\n    const { radius, x, y, z, theta, isEnabled = true } = json;\n\n    return new RadialVelocity(radius, new Vector3D(x, y, z), theta, isEnabled);\n  }\n}\n","import { Vector3D, createSpan } from '../../math';\n\nimport { DR } from '../../constants';\nimport Velocity from './Velocity';\nimport { INITIALIZER_TYPE_VECTOR_VELOCITY as type } from '../types';\n\n/**\n * Sets the velocity property on initialized particles.\n *\n */\nexport default class VectorVelocity extends Velocity {\n  /**\n   * Constructs a VectorVelocity initializer.\n   *\n   * @param {Vector3D} vector3d - The directional vector for the velocity\n   * @param {number} theta - The theta angle to use\n   * @return void\n   */\n  constructor(vector3d, theta, isEnabled = true) {\n    super(type, isEnabled);\n\n    /**\n     * @desc Velocity radius span.\n     * @type {Span}\n     */\n    this.radiusPan = createSpan(1);\n\n    /**\n     * @desc Direction vector.\n     * @type {Vector3D}\n     */\n    this.dir = vector3d.clone();\n\n    /**\n     * @desc Theta.\n     * @type {number}\n     */\n    this.tha = theta * DR;\n\n    /**\n     * @desc Determines whether to use the directional vector or not.\n     * @type {boolean}\n     */\n    this._useV = true;\n  }\n\n  /**\n   * Creates a VectorVelocity initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @param {number} json.x - The velocity x axis direction\n   * @param {number} json.y - The velocity y axis direction\n   * @param {number} json.z - The velocity z axis direction\n   * @param {number} json.theta - The velocity theta\n   * @return {VectorVelocity}\n   */\n  static fromJSON(json) {\n    const { x, y, z, theta, isEnabled = true } = json;\n\n    return new VectorVelocity(new Vector3D(x, y, z), theta, isEnabled);\n  }\n}\n","import { Rate } from '../initializer';\n\nexport const DEFAULT_DAMPING = 0.006;\nexport const DEFAULT_BIND_EMITTER = true;\nexport const DEFAULT_EMITTER_RATE = new Rate(1, 0.1);\nexport const DEFAULT_BIND_EMITTER_EVENT = false;\nexport const DEFAULT_EMITTER_INDEX = undefined;\n","import {\n  DEFAULT_BIND_EMITTER,\n  DEFAULT_BIND_EMITTER_EVENT,\n  DEFAULT_DAMPING,\n  DEFAULT_EMITTER_INDEX,\n  DEFAULT_EMITTER_RATE,\n} from './constants';\nimport EventDispatcher, {\n  EMITTER_DEAD,\n  PARTICLE_CREATED,\n  PARTICLE_DEAD,\n  PARTICLE_UPDATE,\n} from '../events';\nimport { INTEGRATION_TYPE_EULER, integrate } from '../math';\nimport { Util, uid } from '../utils';\n\nimport { InitializerUtil } from '../initializer';\nimport Particle from '../core/Particle';\nimport isNumber from 'lodash/isNumber';\nimport { EMITTER_TYPE_EMITTER as type } from './types';\n\n/**\n * Emitters are the System engine's particle factories. They cause particles to\n * be rendered by emitting them, and store all particle initializers and behaviours.\n *\n */\nexport default class Emitter extends Particle {\n  /**\n   * Constructs an Emitter instance.\n   *\n   * @param {object} properties - The properties to instantiate the emitter with\n   * @return void\n   */\n  constructor(properties) {\n    super(properties);\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n\n    /**\n     * @desc The particles emitted by this emitter.\n     * @type {array}\n     */\n    this.particles = [];\n\n    /**\n     * @desc The initializers for particles emitted by this emitter.\n     * @type {array}\n     */\n    this.initializers = [];\n\n    /**\n     * @desc The behaviours for particles emitted by this emitter.\n     * @type {array}\n     */\n    this.behaviours = [];\n\n    /**\n     * @desc The behaviours for the emitter.\n     * @type {array}\n     */\n    this.emitterBehaviours = [];\n\n    /**\n     * @desc The current emit iteration.\n     * @type {integer}\n     */\n    this.currentEmitTime = 0;\n\n    /**\n     * @desc The total number of times the emitter should emit particles.\n     * @type {integer}\n     */\n    this.totalEmitTimes = -1;\n\n    /**\n     * @desc The friction coefficient for all particle to emit by.\n     * @type {number}\n     */\n    this.damping = DEFAULT_DAMPING;\n\n    /**\n     * @desc Ensures that particles emitted by this emitter are positioned\n     * according to the emitter's properties.\n     * @type {boolean}\n     */\n    this.bindEmitter = DEFAULT_BIND_EMITTER;\n\n    /**\n     * @desc Determines if the emitter will dispatch internal events. Defaults\n     * to false\n     * @type {boolean}\n     */\n    this.bindEmitterEvent = DEFAULT_BIND_EMITTER_EVENT;\n\n    /**\n     * @desc The number of particles to emit per second (a [particle]/b [s])\n     * @type {Rate}\n     */\n    this.rate = DEFAULT_EMITTER_RATE;\n\n    /**\n     * @desc Determines if the emitter is emitting particles or not.\n     * @type {boolean}\n     */\n    this.isEmitting = false;\n\n    /**\n     * @desc The emitter's id.\n     * @type {string}\n     */\n    this.id = `emitter-${uid()}`;\n    this.cID = 0;\n    this.name = 'Emitter';\n\n    /**\n     * @desc The index of the emitter as it is added to the system.\n     * @type {number|undefined}\n     */\n    this.index = DEFAULT_EMITTER_INDEX;\n\n    /**\n     * @desc The emitter's internal event dispatcher.\n     * @type {EventDispatcher}\n     */\n    this.eventDispatcher = new EventDispatcher();\n  }\n\n  /**\n   * Proxy method for the internal event dispatcher's dispatchEvent method.\n   *\n   * @param {string} event - The event to dispatch\n   * @param {object<Particle>} [target=this] - The event target\n   */\n  dispatch(event, target = this) {\n    this.eventDispatcher.dispatchEvent(event, target);\n  }\n\n  /**\n   * Sets the emitter rate.\n   *\n   * @param {Rate} rate - a rate initializer object\n   * @return {Emitter}\n   */\n  setRate(rate) {\n    this.rate = rate;\n\n    return this;\n  }\n\n  /**\n   * Sets the position of the emitter.\n   *\n   * @param {object} newPosition - an object the new x, y and z props\n   * @return {Emitter}\n   */\n  setPosition(newPosition = {}) {\n    const { position } = this;\n    const { x = position.x, y = position.y, z = position.z } = newPosition;\n\n    this.position.set(x, y, z);\n\n    return this;\n  }\n\n  /**\n   * Sets the rotation of the emitter.\n   *\n   * @param {object} newRotation - an object the new x, y and z props\n   * @return {Emitter}\n   */\n  setRotation(newRotation = {}) {\n    const { rotation } = this;\n    const { x = rotation.x, y = rotation.y, z = rotation.z } = newRotation;\n\n    this.rotation.set(x, y, z);\n\n    return this;\n  }\n\n  /**\n   * Sets the total number of times the emitter should emit particles as well as\n   * the emitter's life. Also intializes the emitter rate.\n   * This enables the emitter to emit particles.\n   *\n   * @param {number} [totalEmitTimes=Infinity] - the total number of times to emit particles\n   * @param {number} [life=Infinity] - the life of this emitter in milliseconds\n   * @return {Emitter}\n   */\n  emit(totalEmitTimes = Infinity, life = Infinity) {\n    this.currentEmitTime = 0;\n    this.totalEmitTimes = isNumber(totalEmitTimes) ? totalEmitTimes : Infinity;\n\n    if (totalEmitTimes === 1) {\n      this.life = totalEmitTimes;\n    } else {\n      this.life = isNumber(life) ? life : Infinity;\n    }\n\n    this.rate.init();\n    this.isEmitting = true;\n\n    return this;\n  }\n\n  /**\n   * Experimental emit method that is designed to be called from the System.emit method.\n   *\n   * @return {Emitter}\n   */\n  experimental_emit() {\n    const { isEmitting, totalEmitTimes, life } = this;\n\n    if (!isEmitting) {\n      this.currentEmitTime = 0;\n\n      if (!totalEmitTimes) {\n        this.setTotalEmitTimes(Infinity);\n      }\n\n      if (!life) {\n        this.setLife(Infinity);\n      }\n\n      this.rate.init();\n      this.isEmitting = true;\n    }\n\n    return this;\n  }\n\n  /**\n   * Sets the total emit times for the emitter.\n   *\n   * @param {number} [totalEmitTimes=Infinity] - the total number of times to emit particles\n   * @return {Emitter}\n   */\n  setTotalEmitTimes(totalEmitTimes = Infinity) {\n    this.totalEmitTimes = isNumber(totalEmitTimes) ? totalEmitTimes : Infinity;\n\n    return this;\n  }\n\n  /**\n   * Sets the life of the emitter.\n   *\n   * @param {number} [life=Infinity] - the life of this emitter in milliseconds\n   * @return {Emitter}\n   */\n  setLife(life = Infinity) {\n    if (this.totalEmitTimes === 1) {\n      this.life = this.totalEmitTimes;\n    } else {\n      this.life = isNumber(life) ? life : Infinity;\n    }\n\n    return this;\n  }\n\n  /**\n   * Stops the emitter from emitting particles.\n   *\n   * @return void\n   */\n  stopEmit() {\n    this.totalEmitTimes = -1;\n    this.currentEmitTime = 0;\n    this.isEmitting = false;\n  }\n\n  /**\n   * Kills all of the emitter's particles.\n   *\n   * @return void\n   */\n  removeAllParticles() {\n    let i = this.particles.length;\n\n    while (i--) {\n      this.particles[i].dead = true;\n    }\n  }\n\n  /**\n   * Adds a particle initializer to the emitter.\n   * Each initializer is run on each particle when they are created.\n   *\n   * @param {Initializer} initializer - The initializer to add\n   * @return {Emitter}\n   */\n  addInitializer(initializer) {\n    this.initializers.push(initializer);\n\n    return this;\n  }\n\n  /**\n   * Adds multiple particle initializers to the emitter.\n   *\n   * @param {array<Initializer>} initializers - an array of particle initializers\n   * @return {Emitter}\n   */\n  addInitializers(initializers) {\n    let i = initializers.length;\n\n    while (i--) {\n      this.addInitializer(initializers[i]);\n    }\n\n    return this;\n  }\n\n  /**\n   * Sets the emitter's particle initializers.\n   *\n   * @param {array<Initializer>} initializers - an array of particle initializers\n   * @return {Emitter}\n   */\n  setInitializers(initializers) {\n    this.initializers = initializers;\n\n    return this;\n  }\n\n  /**\n   * Removes an initializer from the emitter's initializers array.\n   *\n   * @param {Initializer} initializer - The initializer to remove\n   * @return {Emitter}\n   */\n  removeInitializer(initializer) {\n    const index = this.initializers.indexOf(initializer);\n\n    if (index > -1) {\n      this.initializers.splice(index, 1);\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes all initializers.\n   *\n   * @return {Emitter}\n   */\n  removeAllInitializers() {\n    Util.destroyArray(this.initializers);\n\n    return this;\n  }\n\n  /**\n   * Adds a behaviour to the emitter. All emitter behaviours are added to each particle when\n   * they are emitted.\n   *\n   * @param {Behaviour} behaviour - The behaviour to add to the emitter\n   * @return {Emitter}\n   */\n  addBehaviour(behaviour) {\n    this.behaviours.push(behaviour);\n\n    return this;\n  }\n\n  /**\n   * Adds multiple behaviours to the emitter.\n   *\n   * @param {array<Behaviour>} behaviours - an array of emitter behaviours\n   * @return {Emitter}\n   */\n  addBehaviours(behaviours) {\n    let i = behaviours.length;\n\n    while (i--) {\n      this.addBehaviour(behaviours[i]);\n    }\n\n    return this;\n  }\n\n  /**\n   * Sets the emitter's behaviours.\n   *\n   * @param {array<Behaviour>} behaviours - an array of emitter behaviours\n   * @return {Emitter}\n   */\n  setBehaviours(behaviours) {\n    this.behaviours = behaviours;\n\n    return this;\n  }\n\n  /**\n   * Removes the behaviour from the emitter's behaviours array.\n   *\n   * @param {Behaviour} behaviour - The behaviour to remove\n   * @return {Emitter}\n   */\n  removeBehaviour(behaviour) {\n    const index = this.behaviours.indexOf(behaviour);\n\n    if (index > -1) {\n      this.behaviours.splice(index, 1);\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes all behaviours from the emitter.\n   *\n   * @return {Emitter}\n   */\n  removeAllBehaviours() {\n    Util.destroyArray(this.behaviours);\n\n    return this;\n  }\n\n  /**\n   * Adds an emitter behaviour to the emitter.\n   *\n   * @param {Behaviour} behaviour - The behaviour to add to the emitter\n   * @return {Emitter}\n   */\n  addEmitterBehaviour(behaviour) {\n    this.emitterBehaviours.push(behaviour);\n\n    behaviour.initialize(this);\n\n    return this;\n  }\n\n  /**\n   * Adds multiple behaviours to the emitter.\n   *\n   * @param {array<Behaviour>} behaviours - an array of emitter behaviours\n   * @return {Emitter}\n   */\n  addEmitterBehaviours(behaviours) {\n    let i = behaviours.length;\n\n    while (i--) {\n      this.addEmitterBehaviour(behaviours[i]);\n    }\n\n    return this;\n  }\n\n  /**\n   * Sets the emitter's behaviours.\n   *\n   * @param {array<Behaviour>} behaviours - an array of emitter behaviours\n   * @return {Emitter}\n   */\n  setEmitterBehaviours(behaviours) {\n    const length = behaviours.length;\n\n    this.emitterBehaviours = behaviours;\n\n    for (let i = 0; i < length; i++) {\n      this.emitterBehaviours[i].initialize(this);\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes the behaviour from the emitter's behaviours array.\n   *\n   * @param {Behaviour} behaviour - The behaviour to remove\n   * @return {Emitter}\n   */\n  removeEmitterBehaviour(behaviour) {\n    const index = this.emitterBehaviours.indexOf(behaviour);\n\n    if (index > -1) {\n      this.emitterBehaviours.splice(index, 1);\n    }\n\n    return this;\n  }\n\n  /**\n   * Removes all behaviours from the emitter.\n   *\n   * @return {Emitter}\n   */\n  removeAllEmitterBehaviours() {\n    Util.destroyArray(this.emitterBehaviours);\n\n    return this;\n  }\n\n  /**\n   * Adds the event listener for the EMITTER_DEAD event.\n   *\n   * @param {onEmitterDead} - The function to call when the EMITTER_DEAD is dispatched.\n   * @return {Emitter}\n   */\n  addOnEmitterDeadEventListener(onEmitterDead) {\n    this.eventDispatcher.addEventListener(`${this.id}_${EMITTER_DEAD}`, () =>\n      onEmitterDead()\n    );\n\n    return this;\n  }\n\n  /**\n   * Creates a particle by retreiving one from the pool and setting it up with\n   * the supplied initializer and behaviour.\n   *\n   * @return {Emitter}\n   */\n  createParticle() {\n    const particle = this.parent.pool.get(Particle);\n    const index = this.particles.length;\n\n    this.setupParticle(particle, index);\n    this.parent && this.parent.dispatch(PARTICLE_CREATED, particle);\n    this.bindEmitterEvent && this.dispatch(PARTICLE_CREATED, particle);\n\n    return particle;\n  }\n\n  /**\n   * Sets up a particle by running all initializers on it and setting its behaviours.\n   * Also adds the particle to this.particles.\n   *\n   * @param {Particle} particle - The particle to setup\n   * @return void\n   */\n  setupParticle(particle, index) {\n    const { initializers, behaviours } = this;\n\n    InitializerUtil.initialize(this, particle, initializers);\n\n    particle.addBehaviours(behaviours);\n    particle.parent = this;\n    particle.index = index;\n\n    this.particles.push(particle);\n  }\n\n  /**\n   * Updates the emitter according to the time passed by calling the generate\n   * and integrate methods. The generate method creates particles, the integrate\n   * method updates existing particles.\n   *\n   * If the emitter age is greater than time, the emitter is killed.\n   *\n   * This method also indexes/deindexes particles.\n   *\n   * @param {number} time - System engine time\n   * @return void\n   */\n  update(time) {\n    if (!this.isEmitting) {\n      return;\n    }\n\n    this.age += time;\n\n    if (this.dead || this.age >= this.life) {\n      this.destroy();\n    }\n\n    this.generate(time);\n    this.integrate(time);\n\n    let i = this.particles.length;\n\n    while (i--) {\n      const particle = this.particles[i];\n\n      if (particle.dead) {\n        this.parent && this.parent.dispatch(PARTICLE_DEAD, particle);\n        this.bindEmitterEvent && this.dispatch(PARTICLE_DEAD, particle);\n        this.parent.pool.expire(particle.reset());\n        this.particles.splice(i, 1);\n      }\n    }\n\n    this.updateEmitterBehaviours(time);\n  }\n\n  /**\n   * Updates the emitter's emitter behaviours.\n   *\n   * @param {number} time - System engine time\n   * @return void\n   */\n  updateEmitterBehaviours(time) {\n    if (this.sleep) {\n      return;\n    }\n\n    const length = this.emitterBehaviours.length;\n\n    for (let i = 0; i < length; i++) {\n      this.emitterBehaviours[i].applyBehaviour(this, time, i);\n    }\n  }\n\n  /**\n   * Runs the integration algorithm on the emitter and all particles.\n   * Updates the particles with the timstamp passed.\n   *\n   * @param {number} time - System engine time\n   * @return void\n   */\n  integrate(time) {\n    const integrationType = this.parent\n      ? this.parent.integrationType\n      : INTEGRATION_TYPE_EULER;\n    const damping = 1 - this.damping;\n\n    integrate(this, time, damping, integrationType);\n\n    let index = this.particles.length;\n\n    while (index--) {\n      const particle = this.particles[index];\n\n      particle.update(time, index);\n      integrate(particle, time, damping, integrationType);\n\n      this.parent && this.parent.dispatch(PARTICLE_UPDATE, particle);\n      this.bindEmitterEvent && this.dispatch(PARTICLE_UPDATE, particle);\n    }\n  }\n\n  /**\n   * Generates new particles.\n   *\n   * @param {number} time - System engine time\n   * @return void\n   */\n  generate(time) {\n    if (this.totalEmitTimes === 1) {\n      let i = this.rate.getValue(99999);\n\n      if (i > 0) {\n        this.cID = i;\n      }\n\n      while (i--) {\n        this.createParticle();\n      }\n\n      this.totalEmitTimes = 0;\n\n      return;\n    }\n\n    this.currentEmitTime += time;\n\n    if (this.currentEmitTime < this.totalEmitTimes) {\n      let i = this.rate.getValue(time);\n\n      if (i > 0) {\n        this.cID = i;\n      }\n\n      while (i--) {\n        this.createParticle();\n      }\n    }\n  }\n\n  /**\n   * Kills the emitter.\n   *\n   * @return void\n   */\n  destroy() {\n    this.dead = true;\n    this.energy = 0;\n    this.totalEmitTimes = -1;\n\n    if (this.particles.length == 0) {\n      this.isEmitting = false;\n      this.removeAllInitializers();\n      this.removeAllBehaviours();\n      this.dispatch(`${this.id}_${EMITTER_DEAD}`);\n\n      this.parent && this.parent.removeEmitter(this);\n    }\n  }\n}\n","export const EMITTER_TYPE_EMITTER = 'Emitter';\nexport const EMITTER_TYPE_FOLLOW = 'FollowEmitter';\n","import { easeLinear } from '../ease';\n\nexport const DEFAULT_LIFE = Infinity;\nexport const DEFAULT_ATTRACITON_RADIUS = 1000;\nexport const DEFAULT_ATTRACTION_FORCE_SCALAR = 100;\nexport const DEFAULT_BEHAVIOUR_EASING = easeLinear;\nexport const DEFAULT_BEHAVIOUR_EASING_TYPE = 'easeLinear';\nexport const DEFAULT_RANDOM_DRIFT_DELAY = 0.03;\nexport const PARTICLE_ALPHA_THRESHOLD = 0.002;\nexport const PARTICLE_LENGTH_SQ_THRESHOLD = 0.000004;\nexport const DEFAULT_CROSS_TYPE = 'dead';\n","import { DEFAULT_BEHAVIOUR_EASING, DEFAULT_LIFE } from './constants';\n\nimport { BEHAVIOUR_TYPE_ABSTRACT } from './types';\nimport { MEASURE } from '../constants';\nimport isNumber from 'lodash/isNumber';\nimport { uid } from '../utils';\n\n/**\n * The base behaviour class.\n * Behaviours manage a particle's behaviour after they have been emitted.\n *\n */\nexport default class Behaviour {\n  /**\n   * Constructs a Behaviour instance.\n   *\n   * @param {number} [life=Infinity] - The life of the behaviour\n   * @param {function} [easing=DEFAULT_BEHAVIOUR_EASING] - The behaviour's decaying trend\n   * @param {string} [type=BEHAVIOUR_TYPE_ABSTRACT] - The behaviour type\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(\n    life = Infinity,\n    easing = DEFAULT_BEHAVIOUR_EASING,\n    type = BEHAVIOUR_TYPE_ABSTRACT,\n    isEnabled = true\n  ) {\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n\n    /**\n     * @desc Determines if the behaviour will be applied or not\n     * @type {boolean}\n     */\n    this.isEnabled = isEnabled;\n\n    /**\n     * @desc The behaviour's id\n     * @type {string} id\n     */\n    this.id = `behaviour-${uid()}`;\n\n    /**\n     * @desc The life of the behaviour\n     * @type {number}\n     */\n    this.life = life;\n\n    /**\n     * @desc The behaviour's decaying trend\n     * @type {function}\n     */\n    this.easing = easing;\n\n    /**\n     * @desc The age of the behaviour\n     * @type {number}\n     */\n    this.age = 0;\n\n    /**\n     * @desc The energy of the behaviour\n     * @type {number}\n     */\n    this.energy = 1;\n\n    /**\n     * Determines if the behaviour is dead or not\n     * @type {boolean}\n     */\n    this.dead = false;\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @param {number} [life=DEFAULT_LIFE] - The life of the behaviour\n   * @param {function} [easing=DEFAULT_BEHAVIOUR_EASING] - The behaviour's decaying trend\n   */\n  reset(life = DEFAULT_LIFE, easing = DEFAULT_BEHAVIOUR_EASING) {\n    this.life = life;\n    this.easing = easing || DEFAULT_BEHAVIOUR_EASING;\n  }\n\n  /**\n   * Ensures that life is infinity if an invalid value is supplied.\n   *\n   * @return void\n   */\n  set life(life) {\n    this._life = isNumber(life) ? life : DEFAULT_LIFE;\n  }\n\n  /**\n   * Gets the behaviour's life.\n   *\n   * @return {Number}\n   */\n  get life() {\n    return this._life;\n  }\n\n  /**\n   * Normalize a force by 1:100;\n   *\n   * @param {Vector3D} force - The force to normalize.\n   * @return {Vector3D}\n   */\n  normalizeForce(force) {\n    return force.scalar(MEASURE);\n  }\n\n  /**\n   * Normalize a value by 1:100;\n   *\n   * @param {number} value - The value to normalize\n   * @return {number}\n   */\n  normalizeValue(value) {\n    return value * MEASURE;\n  }\n\n  /**\n   * Set the behaviour's initial properties on the particle.\n   *\n   * @param {Particle} particle\n   * @abstract\n   */\n  initialize(particle) {} // eslint-disable-line\n\n  /**\n   * Apply behaviour to the target as a factor of time.\n   * Internally calls the mutate method to change properties on the target\n   * Will not do so if the behaviour is disabled\n   *\n   * @abstract\n   * @param {Particle|Emitter} target - The particle or emitter to apply the behaviour to\n   * @param {Number} time - the system integration time\n   * @param {integer} index - the target index\n   * @return mixed\n   */\n  applyBehaviour(target, time, index) {\n    if (!this.isEnabled) {\n      return;\n    }\n\n    this.mutate(target, time, index);\n  }\n\n  /**\n   * Change the target's properties according to specific behaviour logic.\n   *\n   * @abstract\n   * @param {Particle|Emitter} target - The particle or emitter to apply the behaviour to\n   * @param {Number} time - the system integration time\n   * @return mixed\n   */\n  mutate(target, time, index) {} // eslint-disable-line\n\n  /**\n   * Compares the age of the behaviour vs integration time and determines\n   * if the behaviour should be set to dead or not.\n   * Sets the behaviour energy as a factor of particle age and life.\n   *\n   * @param {Particle} particle - The particle to apply the behaviour to\n   * @param {Number} time - the system integration time\n   * @return void\n   */\n  energize(particle, time) {\n    if (this.dead) {\n      return;\n    }\n\n    this.age += time;\n\n    if (this.age >= this.life) {\n      this.energy = 0;\n      this.dead = true;\n\n      return;\n    }\n\n    const scale = this.easing(particle.age / particle.life);\n\n    this.energy = Math.max(1 - scale, 0);\n  }\n\n  /**\n   * Destory this behaviour.\n   *\n   * @abstract\n   */\n  destroy() {}\n\n  /**\n   * Returns a new instance of the behaviour from the JSON object passed.\n   *\n   * @abstract\n   * @param {object} json - JSON object containing the required constructor properties\n   * @return {Behaviour}\n   */\n  fromJSON(json) {} // eslint-disable-line\n}\n","import { MathUtils, createSpan } from '../math';\n\nimport Behaviour from './Behaviour';\nimport { PARTICLE_ALPHA_THRESHOLD } from './constants';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_ALPHA as type } from './types';\n\n/**\n * Behaviour that applies an alpha transition effect to particles.\n *\n */\nexport default class Alpha extends Behaviour {\n  /**\n   * Constructs an Alpha behaviour instance.\n   *\n   * @param {number} alphaA - The starting alpha value\n   * @param {?number} alphaB - The ending alpha value\n   * @param {number} life - The life of the behaviour\n   * @param {function} easing - The easing equation to use for transforms\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(alphaA = 1, alphaB = null, life, easing, isEnabled = true) {\n    super(life, easing, type, isEnabled);\n\n    /**\n     * @desc The starting alpha value\n     * @type {number|Span}\n     */\n    this.alphaA = alphaA;\n\n    /**\n     * @desc The ending alpha value\n     * @type {number|Span}\n     */\n    this.alphaB = alphaB;\n\n    this.reset(alphaA, alphaB);\n  }\n\n  /**\n   * Gets the _same property which determines if the alpha are the same.\n   *\n   * @return {boolean}\n   */\n  get same() {\n    return this._same;\n  }\n\n  /**\n   * Sets the _same property which determines if the alpha are the same.\n   *\n   * @param {boolean} same\n   * @return {boolean}\n   */\n  set same(same) {\n    /**\n     * @type {boolean}\n     */\n    this._same = same;\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {number} alphaA - the starting alpha value\n   * @param {?number} alphaB - the ending alpha value\n   * @param {number} life - the life of the behaviour\n   * @param {function} easing - the easing equation to use for transforms\n   * @return void\n   */\n  reset(alphaA = 1, alphaB = null, life, easing) {\n    this.same = alphaB === null || alphaB === undefined ? true : false;\n    this.alphaA = createSpan(alphaA);\n    this.alphaB = createSpan(alphaB);\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initializes the behaviour on a particle.\n   *\n   * @param {object} particle - the particle to initialize the behaviour on\n   * @return void\n   */\n  initialize(particle) {\n    particle.useAlpha = true;\n    particle.transform.alphaA = this.alphaA.getValue();\n\n    particle.transform.alphaB = this.same\n      ? particle.transform.alphaA\n      : this.alphaB.getValue();\n  }\n\n  /**\n   * Mutates the target's alpha/opacity property.\n   *\n   * @param {object} particle - the particle to apply the behaviour to\n   * @param {number} time - engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    particle.alpha = MathUtils.lerp(\n      particle.transform.alphaA,\n      particle.transform.alphaB,\n      this.energy\n    );\n\n    if (particle.alpha < PARTICLE_ALPHA_THRESHOLD) {\n      particle.alpha = 0;\n    }\n  }\n\n  /**\n   * Creates a Body initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.alphaA - The starting alpha value\n   * @property {number} json.alphaB - The ending alpha value\n   * @property {number} json.life - The life of the behaviour\n   * @property {string} json.easing - The easing equation to use for transforms\n   * @return {Body}\n   */\n  static fromJSON(json) {\n    const { alphaA, alphaB, life, easing, isEnabled = true } = json;\n\n    return new Alpha(alphaA, alphaB, life, getEasingByName(easing), isEnabled);\n  }\n}\n","import {\n  DEFAULT_ATTRACITON_RADIUS,\n  DEFAULT_ATTRACTION_FORCE_SCALAR,\n  DEFAULT_BEHAVIOUR_EASING,\n  DEFAULT_LIFE,\n  PARTICLE_LENGTH_SQ_THRESHOLD,\n} from './constants';\n\nimport Behaviour from './Behaviour';\nimport { Vector3D } from '../math';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_ATTRACTION as type } from './types';\n\n/**\n * Behaviour that causes particles to be attracted to a target position.\n *\n */\nexport default class Attraction extends Behaviour {\n  /**\n   * Constructs an Attraction behaviour instance.\n   *\n   * @param {Vector3D} targetPosition - The position the particles will be attracted to\n   * @param {number} force - The attraction force scalar multiplier\n   * @param {number} radius - The attraction radius\n   * @param {number} [life=DEFAULT_LIFE] - The life of the particle\n   * @param {function} [easing=DEFAULT_BEHAVIOUR_EASING] - The behaviour's decaying trend\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(\n    targetPosition = new Vector3D(),\n    force = DEFAULT_ATTRACTION_FORCE_SCALAR,\n    radius = DEFAULT_ATTRACITON_RADIUS,\n    life = DEFAULT_LIFE,\n    easing = DEFAULT_BEHAVIOUR_EASING,\n    isEnabled = true\n  ) {\n    super(life, easing, type, isEnabled);\n\n    /**\n     * @desc The position the particles will be attracted to\n     * @type {Vector3D}\n     */\n    this.targetPosition = targetPosition;\n\n    /**\n     * @desc The attraction radius\n     * @type {number} - the attraction radius\n     */\n    this.radius = radius;\n\n    /**\n     * @desc The attraction force scalar multiplier\n     * @type {number}\n     */\n    this.force = this.normalizeValue(force);\n\n    /**\n     * @desc The radius of the attraction squared\n     * @type {number}\n     */\n    this.radiusSq = this.radius * this.radius;\n\n    /**\n     * @desc The attraction force in 3D space\n     * @type {Vector3D}\n     */\n    this.attractionForce = new Vector3D();\n\n    /**\n     * @desc The linear attraction force\n     * @type {number}\n     */\n    this.lengthSq = 0;\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {Vector3D} targetPosition - the position the particles will be attracted to\n   * @param {number} force - the attraction force multiplier\n   * @param {number} radius - the attraction radius\n   * @param {number} life - the life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @return void\n   */\n  reset(\n    targetPosition = new Vector3D(),\n    force = DEFAULT_ATTRACTION_FORCE_SCALAR,\n    radius = DEFAULT_ATTRACITON_RADIUS,\n    life,\n    easing\n  ) {\n    this.targetPosition = targetPosition;\n    this.radius = radius;\n    this.force = this.normalizeValue(force);\n    this.radiusSq = this.radius * this.radius;\n    this.attractionForce = new Vector3D();\n    this.lengthSq = 0;\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Mutates particle acceleration.\n   *\n   * @param {Particle} particle - the particle to apply the behaviour to\n   * @param {number} time - particle engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    this.attractionForce.copy(this.targetPosition);\n    this.attractionForce.sub(particle.position);\n\n    this.lengthSq = this.attractionForce.lengthSq();\n\n    if (\n      this.lengthSq > PARTICLE_LENGTH_SQ_THRESHOLD &&\n      this.lengthSq < this.radiusSq\n    ) {\n      this.attractionForce.normalize();\n      this.attractionForce.scalar(1 - this.lengthSq / this.radiusSq);\n      this.attractionForce.scalar(this.force);\n\n      particle.acceleration.add(this.attractionForce);\n    }\n  }\n\n  /**\n   * Creates a Body initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.x - The target position x value\n   * @property {number} json.y - The target position y value\n   * @property {number} json.z - The target position z value\n   * @property {number} json.force - The attraction force scalar multiplier\n   * @property {number} json.life - The life of the particle\n   * @property {string} json.easing - The behaviour's decaying trend\n   * @return {Body}\n   */\n  static fromJSON(json) {\n    const { x, y, z, force, radius, life, easing, isEnabled = true } = json;\n\n    return new Attraction(\n      new Vector3D(x, y, z),\n      force,\n      radius,\n      life,\n      getEasingByName(easing),\n      isEnabled\n    );\n  }\n}\n","import Behaviour from './Behaviour';\nimport { Vector3D } from '../math';\nimport { BEHAVIOUR_TYPE_COLLISION as type } from './types';\n\n/**\n * Behaviour that causes particles to move away from other particles they collide with.\n */\nexport default class Collision extends Behaviour {\n  /**\n   * Constructs a Collision behaviour instance.\n   *\n   * @param {Emitter} emitter - The emitter containing the particles to detect collisions against\n   * @param {boolean} useMass - Determiens whether to use mass or not\n   * @param {function} onCollide - Function to call when particles collide\n   * @param {number} life - The life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(emitter, useMass, onCollide, life, easing, isEnabled = true) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(emitter, useMass, onCollide);\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {Emitter} emitter - The emitter containing the particles to detect collisions against\n   * @param {boolean} useMass - Determiens whether to use mass or not\n   * @param {function} onCollide - Function to call when particles collide\n   * @param {number} life - The life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @return void\n   */\n  reset(emitter, useMass, onCollide, life, easing) {\n    this.emitter = emitter;\n    this.useMass = useMass;\n    this.onCollide = onCollide;\n    this.particles = [];\n    this.delta = new Vector3D();\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Detects collisions with other particles and calls the\n   * onCollide function on colliding particles.\n   *\n   * @param {Particle} particle - the particle to apply the behaviour to\n   * @param {number} time - particle engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    const particles = this.emitter\n      ? this.emitter.particles.slice(index)\n      : this.particles.slice(index);\n\n    let otherParticle, lengthSq, overlap, distance, averageMass1, averageMass2;\n\n    let i = particles.length;\n\n    while (i--) {\n      otherParticle = particles[i];\n\n      if (otherParticle == particle) {\n        continue;\n      }\n\n      this.delta.copy(otherParticle.position).sub(particle.position);\n\n      lengthSq = this.delta.lengthSq();\n      distance = particle.radius + otherParticle.radius;\n\n      if (lengthSq <= distance * distance) {\n        overlap = distance - Math.sqrt(lengthSq);\n        overlap += 0.5;\n\n        averageMass1 = this._getAverageMass(particle, otherParticle);\n        averageMass2 = this._getAverageMass(otherParticle, particle);\n\n        particle.position.add(\n          this.delta\n            .clone()\n            .normalize()\n            .scalar(overlap * -averageMass1)\n        );\n\n        otherParticle.position.add(\n          this.delta.normalize().scalar(overlap * averageMass2)\n        );\n\n        this.onCollide && this.onCollide(particle, otherParticle);\n      }\n    }\n  }\n\n  /**\n   * Gets the average mass of both particles.\n   *\n   * @param {Particle} particleA - The first particle\n   * @param {Particle} particleB - The second particle\n   * @return {number}\n   */\n  _getAverageMass(particleA, particleB) {\n    return this.useMass\n      ? particleB.mass / (particleA.mass + particleB.mass)\n      : 0.5;\n  }\n\n  // TODO\n  fromJSON(json) {} // eslint-disable-line\n}\n","import { MathUtils, createColorSpan } from '../math';\n\nimport Behaviour from './Behaviour';\nimport { ColorUtil } from '../utils';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_COLOR as type } from './types';\n\n/**\n * A behaviour which mutates the color of a particle over time.\n *\n */\nexport default class Color extends Behaviour {\n  /**\n   * Constructs a Color behaviour instance.\n   *\n   * @param {number|string} colorA - the starting color\n   * @param {number|string} colorB - the ending color\n   * @param {number} life - the life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(colorA, colorB, life, easing, isEnabled = true) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(colorA, colorB);\n  }\n\n  /**\n   * Gets the _same property which determines if the alpha are the same.\n   *\n   * @return {boolean}\n   */\n  get same() {\n    return this._same;\n  }\n\n  /**\n   * Sets the _same property which determines if the alpha are the same.\n   *\n   * @param {boolean} same\n   * @return {boolean}\n   */\n  set same(same) {\n    /**\n     * @type {boolean}\n     */\n    this._same = same;\n  }\n\n  reset(colorA, colorB, life, easing) {\n    this.same = colorB === null || colorB === undefined ? true : false;\n\n    this.colorA = createColorSpan(colorA);\n    this.colorB = createColorSpan(colorB);\n    life && super.reset(life, easing);\n  }\n\n  initialize(particle) {\n    particle.transform.colorA = ColorUtil.getRGB(this.colorA.getValue());\n\n    particle.useColor = true;\n    particle.transform.colorB = this.same\n      ? particle.transform.colorA\n      : ColorUtil.getRGB(this.colorB.getValue());\n  }\n\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    if (!this._same) {\n      particle.color.r = MathUtils.lerp(\n        particle.transform.colorA.r,\n        particle.transform.colorB.r,\n        this.energy\n      );\n      particle.color.g = MathUtils.lerp(\n        particle.transform.colorA.g,\n        particle.transform.colorB.g,\n        this.energy\n      );\n      particle.color.b = MathUtils.lerp(\n        particle.transform.colorA.b,\n        particle.transform.colorB.b,\n        this.energy\n      );\n    } else {\n      particle.color.r = particle.transform.colorA.r;\n      particle.color.g = particle.transform.colorA.g;\n      particle.color.b = particle.transform.colorA.b;\n    }\n  }\n\n  /**\n   * Creates a Color initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.colorA - The starting color\n   * @property {number} json.colorB - The ending color\n   * @property {number} json.life - The life of the particle\n   * @property {string} json.easing - The behaviour's decaying trend\n   * @return {Color}\n   */\n  static fromJSON(json) {\n    const { colorA, colorB, life, easing, isEnabled = true } = json;\n\n    return new Color(colorA, colorB, life, getEasingByName(easing), isEnabled);\n  }\n}\n","import * as Zone from '../zone';\n\nimport Behaviour from './Behaviour';\nimport { DEFAULT_CROSS_TYPE } from './constants';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_CROSS_ZONE as type } from './types';\n\n/**\n * Behaviour that allows for specific functions to be called on particles when\n * they interact with a zone.\n *\n */\nexport default class CrossZone extends Behaviour {\n  /**\n   * Constructs a CrossZone behaviour instance.\n   *\n   * @param {Zone} zone - the zone used to apply to particles with this behaviour\n   * @param {string} [crossType=DEFAULT_CROSS_TYPE] - enum of cross types, valid strings include 'dead', 'bound', 'cross'\n   * @param {number} life - The life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   */\n  constructor(zone, crossType, life, easing, isEnabled) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(zone, crossType);\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {Zone} zone - the zone used to apply to particles with this behaviour\n   * @param {string} [crossType=DEFAULT_CROSS_TYPE] - enum of cross types, valid strings include 'dead', 'bound', 'cross'\n   * @param {number} life - The life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   */\n  reset(zone, crossType = DEFAULT_CROSS_TYPE, life, easing) {\n    /**\n     * @desc The zone used to apply to particles with this behaviour\n     * @type {Zone}\n     */\n    this.zone = zone;\n    this.zone.crossType = crossType;\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Applies the behaviour to the particle.\n   *\n   * @see {@link '../zone/Zone.js'} crossing\n   * @param {object} particle - the particle to apply the behaviour to\n   * @param {number} time - engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    this.zone.crossing.call(this.zone, particle);\n  }\n\n  /**\n   * Creates a CrossZone initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @return {CrossZone}\n   */\n  static fromJSON(json) {\n    const {\n      zoneType,\n      zoneParams,\n      crossType,\n      life,\n      easing,\n      isEnabled = true,\n    } = json;\n\n    const zone = new Zone[zoneType](...Object.values(zoneParams));\n\n    return new CrossZone(\n      zone,\n      crossType,\n      life,\n      getEasingByName(easing),\n      isEnabled\n    );\n  }\n}\n","import Behaviour from './Behaviour';\nimport { Vector3D } from '../math';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_FORCE as type } from './types';\n/**\n * Behaviour that forces particles along a specific axis.\n *\n */\nexport default class Force extends Behaviour {\n  /**\n   * Constructs a Force behaviour instance.\n   *\n   * @param {number} fx - the x axis force\n   * @param {number} fy - the y axis force\n   * @param {number} fz - the z axis force\n   * @param {number} life - the life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(fx, fy, fz, life, easing, isEnabled = true) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(fx, fy, fz);\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {number} fx - the x axis force\n   * @param {number} fy - the y axis force\n   * @param {number} fz - the z axis force\n   */\n  reset(fx, fy, fz) {\n    /**\n     * @desc The normalized force to exert on the particle in\n     * @type {Vector3D}\n     */\n    this.force = this.normalizeForce(new Vector3D(fx, fy, fz));\n\n    /**\n     * @desc The id of the force vector\n     * @property {number} this.force.id\n     */\n    this.force.id = Math.random();\n  }\n\n  /**\n   * Mutates the particle.acceleration property.\n   *\n   * @param {object} particle - the particle to apply the behaviour to\n   * @param {number} time - engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    particle.acceleration.add(this.force);\n  }\n\n  /**\n   * Creates a Force initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @return {Force}\n   */\n  static fromJSON(json) {\n    const { fx, fy, fz, life, easing, isEnabled = true } = json;\n\n    return new Force(fx, fy, fz, life, getEasingByName(easing), isEnabled);\n  }\n}\n","import Force from './Force';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_GRAVITY as type } from './types';\n\n/**\n * Behaviour that forces particles down the y axis.\n *\n */\nexport default class Gravity extends Force {\n  /**\n   * Constructs a Gravity behaviour instance.\n   *\n   * @param {number} gravity - the force to pull the particle down the y axis\n   * @param {number} life - the life of the particle\n   * @param {string} easing - the easing equation to use\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(gravity, life, easing, isEnabled = true) {\n    super(0, -gravity, 0, life, easing, isEnabled);\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n  }\n\n  static fromJSON(json) {\n    const { gravity, life, easing, isEnabled = true } = json;\n\n    return new Gravity(gravity, life, getEasingByName(easing), isEnabled);\n  }\n}\n","import { MathUtils, Vector3D, createSpan } from '../math';\n\nimport Behaviour from './Behaviour';\nimport { DEFAULT_RANDOM_DRIFT_DELAY } from './constants';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_RANDOM_DRIFT as type } from './types';\n\n/**\n * Behaviour that causes particles to drift to random coordinates in 3D space.\n *\n */\nexport default class RandomDrift extends Behaviour {\n  /**\n   * Constructs a RandomDrift behaviour instance.\n   *\n   * @param {number} driftX - x axis drift\n   * @param {number} driftY - y axis drift\n   * @param {number} driftZ - z axis drift\n   * @param {number} [delay=DEFAULT_RANDOM_DRIFT_DELAY] - drift delay\n   * @param {number} life - The life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @return void\n   */\n  constructor(\n    driftX,\n    driftY,\n    driftZ,\n    delay = DEFAULT_RANDOM_DRIFT_DELAY,\n    life,\n    easing,\n    isEnabled = true\n  ) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(driftX, driftY, driftZ, delay);\n\n    /**\n     * @desc Internal time used for calculating drift vs internal delay.\n     * @type {number}\n     */\n    this.time = 0;\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {number} driftX - x axis drift\n   * @param {number} driftY - y axis drift\n   * @param {number} driftZ - z axis drift\n   * @param {number} [delay=DEFAULT_RANDOM_DRIFT_DELAY] - drift delay\n   * @param {number} life - The life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   */\n  reset(\n    driftX,\n    driftY,\n    driftZ,\n    delay = DEFAULT_RANDOM_DRIFT_DELAY,\n    life,\n    easing\n  ) {\n    /**\n     * @desc A Vector3D that stores the drift properties.\n     * @type {Vector3D}\n     */\n    this.randomForce = this.normalizeForce(\n      new Vector3D(driftX, driftY, driftZ)\n    );\n    /**\n     * @desc A Span containing the delay supplied.\n     * @type {Span}\n     */\n    this.delayPan = createSpan(delay);\n    this.time = 0;\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Mutates the particle.acceleration property.\n   *\n   * @param {object} particle - the particle to apply the behaviour to\n   * @param {number} time - engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    this.time += time;\n\n    if (this.time >= this.delayPan.getValue()) {\n      const ax = MathUtils.randomAToB(-this.randomForce.x, this.randomForce.x);\n      const ay = MathUtils.randomAToB(-this.randomForce.y, this.randomForce.y);\n      const az = MathUtils.randomAToB(-this.randomForce.z, this.randomForce.z);\n\n      particle.acceleration.addValue(ax, ay, az);\n\n      this.time = 0;\n    }\n  }\n\n  static fromJSON(json) {\n    const { x, y, z, delay, life, easing, isEnabled = true } = json;\n\n    return new RandomDrift(\n      x,\n      y,\n      z,\n      delay,\n      life,\n      getEasingByName(easing),\n      isEnabled\n    );\n  }\n}\n","import Attraction from './Attraction';\nimport { Vector3D } from '../math';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_REPULSION as type } from './types';\n/**\n * Behaviour that causes particles to be repelled from a target position.\n *\n */\nexport default class Repulsion extends Attraction {\n  /**\n   * Constructs an Repulsion behaviour instance.\n   *\n   * @param {Vector3D} targetPosition - The position the particles will be repelled from\n   * @param {number} force - The repulsion force scalar multiplier\n   * @param {number} radius - The repulsion radius\n   * @param {number} life - The life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @return void\n   */\n  constructor(targetPosition, force, radius, life, easing, isEnabled = true) {\n    super(targetPosition, force, radius, life, easing, isEnabled);\n\n    /**\n     * @desc Repulsion is attraction with negative force.\n     * @type {number}\n     */\n    this.force *= -1;\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {Vector3D} targetPosition - the position the particles will be attracted to\n   * @param {number} force - the attraction force multiplier\n   * @param {number} radius - the attraction radius\n   * @param {number} life - the life of the particle\n   * @param {function} easing - The behaviour's decaying trend\n   * @return void\n   */\n  reset(targetPosition, force, radius, life, easing) {\n    super.reset(targetPosition, force, radius, life, easing);\n    this.force *= -1;\n  }\n\n  /**\n   * Creates a Body initializer from JSON.\n   *\n   * @param {object} json - The JSON to construct the instance from.\n   * @property {number} json.x - The target position x value\n   * @property {number} json.y - The target position y value\n   * @property {number} json.z - The target position z value\n   * @property {number} json.force - The attraction force scalar multiplier\n   * @property {number} json.life - The life of the particle\n   * @property {string} json.easing - The behaviour's decaying trend\n   * @return {Body}\n   */\n  static fromJSON(json) {\n    const { x, y, z, force, radius, life, easing, isEnabled = true } = json;\n\n    return new Repulsion(\n      new Vector3D(x, y, z),\n      force,\n      radius,\n      life,\n      getEasingByName(easing),\n      isEnabled\n    );\n  }\n}\n","import { DR, PI } from '../constants';\nimport { MathUtils, Vector3D, createSpan } from '../math';\n\nimport Behaviour from './Behaviour';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_ROTATE as type } from './types';\n\n/**\n * Behaviour that rotates particles.\n */\nexport default class Rotate extends Behaviour {\n  /**\n   * Constructs a Rotate behaviour instance.\n   *\n   * @param {number} x - X axis rotation\n   * @param {number} y - Y axis rotation\n   * @param {number} z - Z axis rotation\n   * @param {number} life - The life of the behaviour\n   * @param {function} easing - The easing equation to use for transforms\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(x, y, z, life, easing, isEnabled = true) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(x, y, z);\n  }\n\n  /**\n   * Gets the rotation type.\n   *\n   * @return {string}\n   */\n  get rotationType() {\n    return this._rotationType;\n  }\n\n  /**\n   * Sets the rotation type.\n   *\n   * @param {string}\n   * @return void\n   */\n  set rotationType(rotationType) {\n    /**\n     * @desc The rotation type. ENUM of ['same', 'set', 'to', 'add'].\n     * @type {string}\n     */\n    this._rotationType = rotationType;\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {number} x - X axis rotation\n   * @param {number} y - Y axis rotation\n   * @param {number} z - Z axis rotation\n   * @param {number} life - the life of the behaviour\n   * @param {function} easing - the easing equation to use for transforms\n   * @return void\n   */\n  reset(x, y, z, life, easing) {\n    /**\n     * @desc X axis rotation.\n     * @type {number|Span}\n     */\n    this.x = x || 0;\n\n    /**\n     * @desc Y axis rotation.\n     * @type {number|Span}\n     */\n    this.y = y || 0;\n\n    /**\n     * @desc Z axis rotation.\n     * @type {number|Span}\n     */\n    this.z = z || 0;\n\n    if (x === undefined || x == 'same') {\n      this.rotationType = 'same';\n    } else if (y == undefined) {\n      this.rotationType = 'set';\n    } else if (z === undefined) {\n      this.rotationType = 'to';\n    } else {\n      this.rotationType = 'add';\n      this.x = createSpan(this.x * DR);\n      this.y = createSpan(this.y * DR);\n      this.z = createSpan(this.z * DR);\n    }\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initializes the behaviour on a particle.\n   *\n   * @param {object} particle - the particle to initialize the behaviour on\n   * @return void\n   */\n  initialize(particle) {\n    switch (this.rotationType) {\n      case 'same':\n        break;\n\n      case 'set':\n        this._setRotation(particle.rotation, this.x);\n        break;\n\n      case 'to':\n        particle.transform.fR = particle.transform.fR || new Vector3D();\n        particle.transform.tR = particle.transform.tR || new Vector3D();\n        this._setRotation(particle.transform.fR, this.x);\n        this._setRotation(particle.transform.tR, this.y);\n        break;\n\n      case 'add':\n        particle.transform.addR = new Vector3D(\n          this.x.getValue(),\n          this.y.getValue(),\n          this.z.getValue()\n        );\n        break;\n    }\n  }\n\n  /**\n   * Sets the particle's rotation prior to the behaviour being applied.\n   *\n   * NOTE It's hard to see here, but this is mutating the particle's rotation\n   * even though the particle is not being passed in directly.\n   *\n   * NOTE the else if below will never be reached because the value being passed in\n   * will never be of type Vector3D.\n   *\n   * @param {Vector3D} particleRotation - the particle's rotation vector\n   * @param {string|number} value - the value to set the rotation value to, if 'random'\n   * rotation is randomised\n   * @return void\n   */\n  _setRotation(particleRotation, value) {\n    particleRotation = particleRotation || new Vector3D();\n    if (value == 'random') {\n      var x = MathUtils.randomAToB(-PI, PI);\n      var y = MathUtils.randomAToB(-PI, PI);\n      var z = MathUtils.randomAToB(-PI, PI);\n\n      particleRotation.set(x, y, z);\n    }\n    // we can't ever get here because value will never be a Vector3D!\n    // consider refactoring to\n    //  if (value instance of Span) { vec3.add(value.getValue()); }\n    else if (value instanceof Vector3D) {\n      particleRotation.copy(value);\n    }\n  }\n\n  /**\n   * Mutates the particle.rotation property.\n   *\n   * @see http://stackoverflow.com/questions/21622956/how-to-convert-direction-vector-to-euler-angles\n   * @param {object} particle - the particle to apply the behaviour to\n   * @param {number} time - engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    switch (this.rotationType) {\n      // orients the particle in the direction it is moving\n      case 'same':\n        if (!particle.rotation) {\n          particle.rotation = new Vector3D();\n        }\n\n        particle.rotation.eulerFromDir(particle.velocity);\n        break;\n\n      case 'set':\n        //\n        break;\n\n      case 'to':\n        particle.rotation.x = MathUtils.lerp(\n          particle.transform.fR.x,\n          particle.transform.tR.x,\n          this.energy\n        );\n        particle.rotation.y = MathUtils.lerp(\n          particle.transform.fR.y,\n          particle.transform.tR.y,\n          this.energy\n        );\n        particle.rotation.z = MathUtils.lerp(\n          particle.transform.fR.z,\n          particle.transform.tR.z,\n          this.energy\n        );\n        break;\n\n      case 'add':\n        particle.rotation.add(particle.transform.addR);\n        break;\n    }\n  }\n\n  static fromJSON(json) {\n    const { x, y, z, life, easing, isEnabled = true } = json;\n\n    return new Rotate(x, y, z, life, getEasingByName(easing), isEnabled);\n  }\n}\n","import { MathUtils, createSpan } from '../math';\n\nimport Behaviour from './Behaviour';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_SCALE as type } from './types';\n\n/**\n * Behaviour that scales particles.\n *\n */\nexport default class Scale extends Behaviour {\n  /**\n   * Constructs a Scale behaviour instance.\n   *\n   * @param {number} scaleA - the starting scale value\n   * @param {?number} scaleB - the ending scale value\n   * @param {number} life - the life of the behaviour\n   * @param {function} easing - the easing equation to use for transforms\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(scaleA, scaleB, life, easing, isEnabled = true) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(scaleA, scaleB);\n  }\n\n  /**\n   * Gets the _same property which determines if the scale props are the same.\n   *\n   * @return {boolean}\n   */\n  get same() {\n    return this._same;\n  }\n\n  /**\n   * Sets the _same property which determines if the scale props are the same.\n   *\n   * @param {boolean} same\n   * @return {boolean}\n   */\n  set same(same) {\n    /**\n     * @type {boolean}\n     */\n    this._same = same;\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {number} scaleA - the starting scale value\n   * @param {?number} scaleB - the ending scale value\n   * @param {number} life - the life of the behaviour\n   * @param {function} easing - the easing equation to use for transforms\n   * @return void\n   */\n  reset(scaleA, scaleB, life, easing) {\n    this.same = scaleB === null || scaleB === undefined ? true : false;\n\n    /**\n     * @desc The starting scale.\n     * @type {Span}\n     */\n    this.scaleA = createSpan(scaleA || 1);\n\n    /**\n     * @desc The ending scale.\n     * @type {Span}\n     */\n    this.scaleB = createSpan(scaleB);\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initializes the behaviour on a particle.\n   * Stores initial values for comparison and mutation in the applyBehaviour method.\n   *\n   * @param {object} particle - the particle to initialize the behaviour on\n   * @return void\n   */\n  initialize(particle) {\n    particle.transform.scaleA = this.scaleA.getValue();\n    particle.transform.oldRadius = particle.radius;\n\n    particle.transform.scaleB = this.same\n      ? particle.transform.scaleA\n      : this.scaleB.getValue();\n  }\n\n  /**\n   * Applies the behaviour to the particle.\n   * Mutates the particle's scale and its radius according to this scale.\n   *\n   * @param {object} particle - the particle to apply the behaviour to\n   * @param {number} time - engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    particle.scale = MathUtils.lerp(\n      particle.transform.scaleA,\n      particle.transform.scaleB,\n      this.energy\n    );\n\n    if (particle.scale < 0.0005) {\n      particle.scale = 0;\n    }\n\n    particle.radius = particle.transform.oldRadius * particle.scale;\n  }\n\n  /**\n   * Returns a new instance of the behaviour from the JSON object passed.\n   *\n   * @param {object} json - JSON object containing the required constructor properties\n   * @return {Spring}\n   */\n  static fromJSON(json) {\n    const { scaleA, scaleB, life, easing, isEnabled = true } = json;\n\n    return new Scale(scaleA, scaleB, life, getEasingByName(easing), isEnabled);\n  }\n}\n","import Behaviour from './Behaviour';\nimport { Vector3D } from '../math';\nimport { getEasingByName } from '../ease';\nimport { BEHAVIOUR_TYPE_SPRING as type } from './types';\n\n/**\n * Behaviour that causes particles to spring.\n *\n */\nexport default class Spring extends Behaviour {\n  /**\n   * Constructs a Spring behaviour instance.\n   *\n   * @param {number} x - X axis spring\n   * @param {number} y - Y axis spring\n   * @param {number} z - Z axis spring\n   * @param {number} spring - Spring factor\n   * @param {number} friction - Spring friction\n   * @param {number} life - The life of the behaviour\n   * @param {function} easing - The easing equation to use for transforms\n   * @param {boolean} [isEnabled=true] - Determines if the behaviour will be applied or not\n   * @return void\n   */\n  constructor(x, y, z, spring, friction, life, easing, isEnabled = true) {\n    super(life, easing, type, isEnabled);\n\n    this.reset(x, y, z, spring, friction);\n  }\n\n  /**\n   * Resets the behaviour properties.\n   *\n   * @param {number} x - X axis spring\n   * @param {number} y - Y axis spring\n   * @param {number} z - Z axis spring\n   * @param {number} spring - Spring factor\n   * @param {number} friction - Spring friction\n   * @return void\n   */\n  reset(x, y, z, spring, friction) {\n    if (!this.pos) {\n      this.pos = new Vector3D(x, y, z);\n    } else {\n      this.pos.set(x, y, z);\n    }\n\n    this.spring = spring || 0.1;\n    this.friction = friction || 0.98;\n  }\n\n  /**\n   * Applies the behaviour to the particle.\n   * Mutates the particle's velocity according to this.pos and this.spring.\n   *\n   * @param {object} particle - the particle to apply the behaviour to\n   * @param {number} time - engine time\n   * @param {integer} index - the particle index\n   * @return void\n   */\n  mutate(particle, time, index) {\n    this.energize(particle, time, index);\n\n    particle.velocity.x += (this.pos.x - particle.position.x) * this.spring;\n    particle.velocity.y += (this.pos.y - particle.position.y) * this.spring;\n    particle.velocity.z += (this.pos.z - particle.position.z) * this.spring;\n  }\n\n  /**\n   * Returns a new instance of the behaviour from the JSON object passed.\n   *\n   * @param {object} json - JSON object containing the required constructor properties\n   * @return {Spring}\n   */\n  static fromJSON(json) {\n    const { x, y, z, spring, friction, life, easing, isEnabled = true } = json;\n\n    return new Spring(\n      x,\n      y,\n      z,\n      spring,\n      friction,\n      life,\n      getEasingByName(easing),\n      isEnabled\n    );\n  }\n}\n","import * as Behaviour from '../behaviour';\nimport * as Initializer from '../initializer';\n\nimport { EULER, POOL_MAX } from '../constants';\nimport {\n  INITIALIZER_TYPES_THAT_REQUIRE_THREE,\n  SUPPORTED_JSON_BEHAVIOUR_TYPES,\n  SUPPORTED_JSON_INITIALIZER_TYPES,\n} from './constants';\n\nimport Rate from '../initializer/Rate';\n\n/**\n * Makes a rate instance.\n *\n * @param {object} json - The data required to construct a Rate instance\n * @return {Rate}\n */\nconst makeRate = json => Rate.fromJSON(json);\n\n/**\n * Makes initializers from json items.\n *\n * @param {array<object>} items - An array of objects which provide initializer constructor params\n * @param {object} THREE - The Web GL Api to use\n * @return {array<Initializer>}\n */\nconst makeInitializers = (items, THREE) => {\n  const initializers = [];\n\n  items.forEach(data => {\n    const { type, properties } = data;\n\n    if (!SUPPORTED_JSON_INITIALIZER_TYPES.includes(type)) {\n      throw new Error(\n        `The initializer type ${type} is invalid or not yet supported`\n      );\n    }\n\n    if (INITIALIZER_TYPES_THAT_REQUIRE_THREE.includes(type)) {\n      initializers.push(Initializer[type].fromJSON(properties, THREE));\n    } else {\n      initializers.push(Initializer[type].fromJSON(properties));\n    }\n  });\n\n  return initializers;\n};\n\n/**\n * Makes behaviours from json items.\n *\n * @param {array<object>} items - An array of objects which provide behaviour constructor params\n * @return {array<Behaviour>}\n */\nconst makeBehaviours = items => {\n  const behaviours = [];\n\n  items.forEach(data => {\n    const { type, properties } = data;\n\n    if (!SUPPORTED_JSON_BEHAVIOUR_TYPES.includes(type)) {\n      throw new Error(\n        `The behaviour type ${type} is invalid or not yet supported`\n      );\n    }\n\n    behaviours.push(Behaviour[type].fromJSON(properties));\n  });\n\n  return behaviours;\n};\n\n/**\n * Creates a System instance from a JSON object.\n *\n * @deprecated Use fromJSONAsync instead.\n *\n * @param {object} json - The JSON to create the System instance from\n * @param {object} THREE - The Web GL Api to use\n * @param {function} System - The system class\n * @param {function} Emitter - The emitter class\n * @param {number} json.preParticles - The predetermined number of particles\n * @param {string} json.integrationType - The integration algorithm to use\n * @param {array<object>} json.emitters - The emitters for the system instance\n * @return {System}\n */\nexport default (json, THREE, System, Emitter) => {\n  const {\n    preParticles = POOL_MAX,\n    integrationType = EULER,\n    emitters = [],\n  } = json;\n  const system = new System(THREE, preParticles, integrationType);\n\n  emitters.forEach(data => {\n    const emitter = new Emitter();\n    const {\n      rate,\n      rotation,\n      initializers,\n      behaviours,\n      emitterBehaviours = [],\n      position,\n      totalEmitTimes = Infinity,\n      life = Infinity,\n    } = data;\n\n    emitter\n      .setRate(makeRate(rate))\n      .setRotation(rotation)\n      .setInitializers(makeInitializers(initializers, THREE))\n      .setBehaviours(makeBehaviours(behaviours))\n      .setEmitterBehaviours(makeBehaviours(emitterBehaviours))\n      .setPosition(position)\n      .emit(totalEmitTimes, life);\n\n    system.addEmitter(emitter);\n  });\n\n  return system;\n};\n","import * as Behaviour from '../behaviour';\nimport * as Initializer from '../initializer';\n\nimport { EULER, POOL_MAX } from '../constants';\nimport {\n  INITIALIZER_TYPES_THAT_REQUIRE_THREE,\n  SUPPORTED_JSON_BEHAVIOUR_TYPES,\n  SUPPORTED_JSON_INITIALIZER_TYPES,\n} from './constants';\n\nimport Rate from '../initializer/Rate';\nimport TextureInitializer from '../initializer/Texture';\n\nconst DEFAULT_OPTIONS = { shouldAutoEmit: true };\n\n/**\n * Makes a rate instance.\n *\n * @param {object} json - The data required to construct a Rate instance\n * @return {Rate}\n */\nconst makeRate = json => Rate.fromJSON(json);\n\n/**\n * Makes initializers from json items.\n *\n * @param {array<object>} items - An array of objects which provide initializer constructor params\n * @param {object} THREE - The Web GL Api to use\n * @return {array<Initializer>}\n */\nconst makeInitializers = (items, THREE) =>\n  new Promise((resolve, reject) => {\n    if (!items.length) {\n      return resolve([]);\n    }\n\n    const numberOfInitializers = items.length;\n    const madeInitializers = [];\n    const doNotRequireTextureLoading = items.filter(\n      ({ properties }) => !properties.texture\n    );\n    const doRequireTextureLoading = items.filter(\n      ({ properties }) => properties.texture\n    );\n\n    doNotRequireTextureLoading.forEach(data => {\n      const { type, properties } = data;\n\n      if (!SUPPORTED_JSON_INITIALIZER_TYPES.includes(type)) {\n        return reject(\n          `The initializer type ${type} is invalid or not yet supported`\n        );\n      }\n\n      if (INITIALIZER_TYPES_THAT_REQUIRE_THREE.includes(type)) {\n        madeInitializers.push(Initializer[type].fromJSON(properties, THREE));\n      } else {\n        madeInitializers.push(Initializer[type].fromJSON(properties));\n      }\n\n      if (madeInitializers.length === numberOfInitializers) {\n        return resolve(madeInitializers);\n      }\n    });\n\n    doRequireTextureLoading.forEach(data => {\n      const {\n        type,\n        properties,\n        properties: { texture },\n      } = data;\n      const textureLoader = new THREE.TextureLoader();\n\n      if (!SUPPORTED_JSON_INITIALIZER_TYPES.includes(type)) {\n        return reject(\n          `The initializer type ${type} is invalid or not yet supported`\n        );\n      }\n\n      textureLoader.load(\n        texture,\n        loadedTexture => {\n          madeInitializers.push(\n            TextureInitializer.fromJSON(\n              {\n                ...properties,\n                loadedTexture,\n              },\n              THREE\n            )\n          );\n\n          if (madeInitializers.length === numberOfInitializers) {\n            return resolve(madeInitializers);\n          }\n        },\n        undefined,\n        reject\n      );\n    });\n  });\n\n/**\n * Makes behaviours from json items.\n *\n * @param {array<object>} items - An array of objects which provide behaviour constructor params\n * @return {Promise<array>}\n */\nconst makeBehaviours = items =>\n  new Promise((resolve, reject) => {\n    if (!items.length) {\n      return resolve([]);\n    }\n\n    const numberOfBehaviours = items.length;\n    const madeBehaviours = [];\n\n    items.forEach(data => {\n      const { type, properties } = data;\n\n      if (!SUPPORTED_JSON_BEHAVIOUR_TYPES.includes(type)) {\n        return reject(\n          `The behaviour type ${type} is invalid or not yet supported`\n        );\n      }\n\n      madeBehaviours.push(Behaviour[type].fromJSON(properties));\n\n      if (madeBehaviours.length === numberOfBehaviours) {\n        return resolve(madeBehaviours);\n      }\n    });\n  });\n\nconst makeEmitters = (emitters, Emitter, THREE, shouldAutoEmit) =>\n  new Promise((resolve, reject) => {\n    if (!emitters.length) {\n      return resolve([]);\n    }\n\n    const madeEmitters = [];\n    const numberOfEmitters = emitters.length;\n\n    if (!numberOfEmitters) {\n      return resolve(madeEmitters);\n    }\n\n    emitters.forEach(data => {\n      const emitter = new Emitter();\n      const {\n        rate,\n        rotation,\n        initializers,\n        behaviours,\n        emitterBehaviours = [],\n        position,\n        totalEmitTimes = Infinity,\n        life = Infinity,\n      } = data;\n\n      emitter\n        .setRate(makeRate(rate))\n        .setRotation(rotation)\n        .setPosition(position);\n\n      makeInitializers(initializers, THREE)\n        .then(madeInitializers => {\n          emitter.setInitializers(madeInitializers);\n\n          return makeBehaviours(behaviours);\n        })\n        .then(madeBehaviours => {\n          emitter.setBehaviours(madeBehaviours);\n\n          return makeBehaviours(emitterBehaviours);\n        })\n        .then(madeEmitterBehaviours => {\n          emitter.setEmitterBehaviours(madeEmitterBehaviours);\n\n          return Promise.resolve(emitter);\n        })\n        .then(emitter => {\n          madeEmitters.push(\n            shouldAutoEmit\n              ? emitter.emit(totalEmitTimes, life)\n              : emitter.setTotalEmitTimes(totalEmitTimes).setLife(life)\n          );\n\n          if (madeEmitters.length === numberOfEmitters) {\n            return resolve(madeEmitters);\n          }\n        })\n        .catch(reject);\n    });\n  });\n\n/**\n * Creates a System instance from a JSON object.\n *\n * @param {object} json - The JSON to create the System instance from\n * @param {number} json.preParticles - The predetermined number of particles\n * @param {string} json.integrationType - The integration algorithm to use\n * @param {array<object>} json.emitters - The emitters for the system instance\n * @param {object} THREE - The Web GL Api to use\n * @param {function} System - The system class\n * @param {function} Emitter - The emitter class\n * @param {object} [options={}] - Optional config options\n * @return {Promise<System>}\n */\nexport default (json, THREE, System, Emitter, options = {}) =>\n  new Promise((resolve, reject) => {\n    const {\n      preParticles = POOL_MAX,\n      integrationType = EULER,\n      emitters = [],\n    } = json;\n    const system = new System(preParticles, integrationType);\n    const { shouldAutoEmit } = { ...DEFAULT_OPTIONS, ...options };\n\n    makeEmitters(emitters, Emitter, THREE, shouldAutoEmit)\n      .then(madeEmitters => {\n        const numberOfEmitters = madeEmitters.length;\n\n        if (!numberOfEmitters) {\n          return resolve(system);\n        }\n\n        madeEmitters.forEach(madeEmitter => {\n          system.addEmitter(madeEmitter);\n\n          if (system.emitters.length === numberOfEmitters) {\n            resolve(system);\n          }\n        });\n      })\n      .catch(reject);\n  });\n","import EventDispatcher, {\n  EMITTER_ADDED,\n  EMITTER_REMOVED,\n  SYSTEM_UPDATE,\n  SYSTEM_UPDATE_AFTER,\n} from '../events';\n\nimport { DEFAULT_SYSTEM_DELTA } from './constants';\nimport Emitter from '../emitter/Emitter';\nimport { INTEGRATION_TYPE_EULER } from '../math/constants';\nimport { POOL_MAX } from '../constants';\nimport Pool from './Pool';\nimport fromJSON from './fromJSON';\nimport fromJSONAsync from './fromJSONAsync';\nimport { CORE_TYPE_SYSTEM as type } from './types';\n\n/**\n * The core of the three-system particle engine.\n * A System instance can contain multiple emitters, each with their own initializers\n * and behaviours.\n *\n */\nexport default class System {\n  /**\n   * Constructs a System instance.\n   *\n   * @param {object} THREE - ThreeJs\n   * @param {number} [preParticles=POOL_MAX] - The number of particles to start with\n   * @param {string} [integrationType=INTEGRATION_TYPE_EULER] - The integration type to use\n   * @return void\n   */\n  constructor(\n    preParticles = POOL_MAX,\n    integrationType = INTEGRATION_TYPE_EULER\n  ) {\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n\n    /**\n     * @desc Determines if the system can update or not. Set to false when destroying\n     * to ensure that external calls to update do not throw errors.\n     * @type {boolean}\n     */\n    this.canUpdate = true;\n\n    /**\n     * @desc The number of particles to start with.\n     * @type {number}\n     */\n    this.preParticles = preParticles;\n\n    /**\n     * @desc The integration algorithm type to use.\n     * @param {string}\n     */\n    this.integrationType = integrationType;\n\n    /**\n     * @desc The emitters in the particle system.\n     * @type {array<Emitter>}\n     */\n    this.emitters = [];\n\n    /**\n     * @desc The renderers for the system.\n     * @type {array<Renderer>}\n     */\n    this.renderers = [];\n\n    /**\n     * @desc A pool used to manage the internal system cache of objects\n     * @type {Pool}\n     */\n    this.pool = new Pool();\n\n    /**\n     * @desc Internal event dispatcher\n     * @type {EventDispatcher}\n     */\n    this.eventDispatcher = new EventDispatcher();\n  }\n\n  /**\n   * Creates a System instance from a JSON object.\n   *\n   * @param {object} json - The JSON to create the System instance from\n   * @param {object} THREE - The Web GL Api to use eg., THREE\n   * @return {System}\n   *\n   * @deprecated use fromJSONAsync instead\n   */\n  static fromJSON(json, THREE) {\n    return fromJSON(json, THREE, System, Emitter);\n  }\n\n  /**\n   * Loads a System instance from JSON asynchronously. Ensures all textures are\n   * fully loaded before resolving with the instantiated System instance.\n   *\n   * @param {object} json - The JSON to create the System instance from\n   * @param {object} THREE - The Web GL Api to use eg., THREE\n   * @param {?object} options - Optional config options\n   * @return {Promise<System>}\n   */\n  static fromJSONAsync(json, THREE, options) {\n    return fromJSONAsync(json, THREE, System, Emitter, options);\n  }\n\n  /**\n   * Proxy method for the internal event dispatcher's dispatchEvent method.\n   *\n   * @param {string} event - The event to dispatch\n   * @param {object<System|Emitter|Particle>} [target=this] - The event target\n   */\n  dispatch(event, target = this) {\n    this.eventDispatcher.dispatchEvent(event, target);\n  }\n\n  /**\n   * Adds a renderer to the System instance and initializes it.\n   *\n   * @param {Renderer} renderer - The renderer to add\n   * @return {System}\n   */\n  addRenderer(renderer) {\n    this.renderers.push(renderer);\n    renderer.init(this);\n\n    return this;\n  }\n\n  /**\n   * Removes a renderer from the System instance.\n   *\n   * @param {Renderer} renderer\n   * @return {System}\n   */\n  removeRenderer(renderer) {\n    this.renderers.splice(this.renderers.indexOf(renderer), 1);\n    renderer.remove(this);\n\n    return this;\n  }\n\n  /**\n   * Adds an emitter to the System instance.\n   * Dispatches the EMITTER_ADDED event.\n   *\n   * @param {Emitter} emitter - The emitter to add\n   * @return {System}\n   */\n  addEmitter(emitter) {\n    const index = this.emitters.length;\n\n    emitter.parent = this;\n    emitter.index = index;\n\n    this.emitters.push(emitter);\n    this.dispatch(EMITTER_ADDED, emitter);\n\n    return this;\n  }\n\n  /**\n   * Removes an emitter from the System instance.\n   * Dispatches the EMITTER_REMOVED event.\n   *\n   * @param {Emitter} emitter - The emitter to remove\n   * @return {System}\n   */\n  removeEmitter(emitter) {\n    if (emitter.parent !== this) {\n      return this;\n    }\n\n    emitter.parent = null;\n    emitter.index = undefined;\n\n    this.emitters.splice(this.emitters.indexOf(emitter), 1);\n    this.dispatch(EMITTER_REMOVED, emitter);\n\n    return this;\n  }\n\n  /**\n   * Wires up life cycle methods and causes a system's emitters to emit particles.\n   * Expects emitters to have their totalEmitTimes and life set already.\n   * Inifnite systems will resolve immediately.\n   *\n   * @param {object} hooks - Functions to hook into the life cycle API\n   * @param {function} hooks.onStart - Called when the system starts to emit particles\n   * @param {function} hooks.onUpdate - Called each time the system updates\n   * @param {function} hooks.onEnd - Called when the system's emitters have all died\n   * @return {Promise}\n   */\n  emit({ onStart, onUpdate, onEnd }) {\n    if (onStart) {\n      onStart();\n    }\n\n    if (onUpdate) {\n      this.eventDispatcher.addEventListener(SYSTEM_UPDATE, onUpdate);\n    }\n\n    const emitters = this.emitters.map(emitter => {\n      const { life } = emitter;\n\n      if (life === Infinity) {\n        if (onEnd) {\n          onEnd();\n        }\n\n        emitter.experimental_emit();\n\n        return Promise.resolve();\n      }\n\n      return new Promise(resolve => {\n        emitter.addOnEmitterDeadEventListener(() => {\n          if (onEnd) {\n            onEnd();\n          }\n\n          resolve();\n        });\n\n        emitter.experimental_emit();\n      });\n    });\n\n    try {\n      return Promise.all(emitters);\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  /**\n   * Updates the particle system based on the delta passed.\n   *\n   * @example\n   * animate = () => {\n   *   threeRenderer.render(threeScene, threeCamera);\n   *   system.update();\n   *   requestAnimationFrame(animate);\n   * }\n   * animate();\n   *\n   * @param {number} delta - Delta time\n   * @return {Promise}\n   */\n  update(delta = DEFAULT_SYSTEM_DELTA) {\n    const d = delta || DEFAULT_SYSTEM_DELTA;\n\n    if (this.canUpdate) {\n      if (d > 0) {\n        let i = this.emitters.length;\n\n        while (i--) {\n          const emitter = this.emitters[i];\n\n          emitter.update(d);\n          emitter.isEmitting && this.dispatch(SYSTEM_UPDATE);\n        }\n      }\n\n      this.dispatch(SYSTEM_UPDATE_AFTER);\n    }\n\n    return Promise.resolve();\n  }\n\n  /**\n   * Gets a count of the total number of particles in the system.\n   *\n   * @return {integer}\n   */\n  getCount() {\n    const length = this.emitters.length;\n\n    let total = 0;\n\n    let i;\n\n    for (i = 0; i < length; i++) {\n      total += this.emitters[i].particles.length;\n    }\n\n    return total;\n  }\n\n  /**\n   * Destroys all emitters, renderers and the Nebula pool.\n   * Ensures that this.update will not perform any operations while the system\n   * is being destroyed.\n   *\n   * @return void\n   */\n  destroy() {\n    const length = this.emitters.length;\n\n    this.canUpdate = false;\n\n    for (let e = 0; e < length; e++) {\n      this.emitters[e] && this.emitters[e].destroy();\n      delete this.emitters[e];\n    }\n\n    for (let r = 0; r < length; r++) {\n      if (this.renderers[r] && this.renderers[r].destroy) {\n        this.renderers[r].destroy();\n        delete this.renderers[r];\n      }\n    }\n\n    this.emitters.length = 0;\n    this.pool.destroy();\n    this.canUpdate = true;\n  }\n}\n","export const DEFAULT_WIDTH = 10;\nexport const DEFAULT_HEIGHT = 10;\nexport const DEFAULT_DEPTH = 10;\nexport const DEFAULT_RADIUS = 15;\nexport const DEFAULT_SIZE = 15;\nexport const DEFAULT_POSITION = 0;\n","import { DEFAULT_POSITION, DEFAULT_SIZE as size } from './constants';\n\n/**\n * @exports Debug - methods and helpers for debugging System emitters, zones and particles.\n * @requires THREE - { SphereGeometry, BoxGeometry, MeshBasicMaterial, OctahedronGeometry, Mesh }\n */\nexport default {\n  /**\n   * Adds an event listener to the system instance's SYSTEM_UPDATE event.\n   *\n   * @param {System} system - the system instance\n   * @param {function} onSystemUpdated - the function to call when system has been updated\n   * @return {Debug}\n   */\n  addEventListener: function(system, onSystemUpdated) {\n    system.eventDispatcher.addEventListener('SYSTEM_UPDATE', onSystemUpdated);\n\n    return this;\n  },\n\n  /**\n   * Draws a wireframe mesh around the zone for debugging purposes.\n   *\n   * @param {System} system - the system instance\n   * @param {object} container - a three Object3D (usually the scene)\n   * @param {Zone} zone - a Zone instance\n   * @return void\n   */\n  drawZone: function(THREE, system, container, zone = {}) {\n    const color = '#2194ce';\n    const wireframe = true;\n    const {\n      width = size,\n      height = size,\n      depth = size,\n      radius = size,\n      x = DEFAULT_POSITION,\n      y = DEFAULT_POSITION,\n      z = DEFAULT_POSITION,\n    } = zone;\n\n    let geometry;\n\n    if (zone.isPointZone()) {\n      geometry = new THREE.SphereGeometry(15);\n    }\n\n    if (zone.isLineZone()) {\n      // TODO\n    }\n\n    if (zone.isBoxZone()) {\n      geometry = new THREE.BoxGeometry(width, height, depth);\n    }\n\n    if (zone.isSphereZone()) {\n      geometry = new THREE.SphereGeometry(radius, size, size);\n    }\n\n    if (zone.isMeshZone()) {\n      geometry = zone.geometry.geometry\n        ? zone.geometry.geometry.clone()\n        : zone.geometry.clone();\n    }\n\n    if (!geometry) {\n      geometry = new THREE.BoxGeometry(width, height, depth);\n    }\n\n    const material = new THREE.MeshBasicMaterial({ color, wireframe });\n    // NOTE! geometry.clone is required for UNKNOWN reasons,\n    // three does not render the mesh correctly without doing this since r88\n    const mesh = new THREE.Mesh(geometry.clone(), material);\n\n    container.add(mesh);\n\n    this.addEventListener(system, function() {\n      mesh.position.set(x, y, z);\n    });\n  },\n\n  /**\n   * Draws a mesh for each particle emitted in order to help debug particles.\n   *\n   * @param {object} system - the system instance\n   * @param {object} container - a three Object3D (usually the scene)\n   * @param {object} emitter - the emitter to debug\n   * @param {string} color - the color for the debug mesh material\n   * @return void\n   */\n  drawEmitter: function(THREE, system, container, emitter, color) {\n    const geometry = new THREE.OctahedronGeometry(size);\n    const material = new THREE.MeshBasicMaterial({\n      color: color || '#aaa',\n      wireframe: true,\n    });\n    // NOTE! geometry.clone is required for UNKNOWN reasons,\n    // three does not render the mesh correctly without doing this since r88\n    const mesh = new THREE.Mesh(geometry.clone(), material);\n\n    container.add(mesh);\n\n    this.addEventListener(system, function() {\n      mesh.position.copy(emitter.position);\n      mesh.rotation.set(\n        emitter.rotation.x,\n        emitter.rotation.y,\n        emitter.rotation.z\n      );\n    });\n  },\n\n  /**\n   * Renders emitter / particle information into the info element.\n   *\n   * @param {object} system - the system instance\n   * @param {integer} style - style to apply (see the addInfo method's switch statement)\n   * @return void\n   */\n  renderInfo: (function() {\n    function getCreatedNumber(type, system) {\n      var pool = type == 'material' ? '_materialPool' : '_targetPool';\n      var renderer = system.renderers[0];\n\n      return renderer[pool].cID;\n    }\n\n    function getEmitterPos(system) {\n      var e = system.emitters[0];\n\n      return (\n        Math.round(e.p.x) + ',' + Math.round(e.p.y) + ',' + Math.round(e.p.z)\n      );\n    }\n\n    return function(system, style) {\n      this.addInfo(style);\n      var str = '';\n\n      switch (this._infoType) {\n        case 2:\n          str += 'emitter:' + system.emitters.length + '<br>';\n          str += 'em speed:' + system.emitters[0].cID + '<br>';\n          str += 'pos:' + getEmitterPos(system);\n          break;\n\n        case 3:\n          str += system.renderers[0].name + '<br>';\n          str += 'target:' + getCreatedNumber('target') + '<br>';\n          str += 'material:' + getCreatedNumber('material');\n          break;\n\n        default:\n          str += 'particles:' + system.getCount() + '<br>';\n          str += 'pool:' + system.pool.getCount() + '<br>';\n          str += 'total:' + (system.getCount() + system.pool.getCount());\n      }\n      this._infoCon.innerHTML = str;\n    };\n  })(),\n\n  /**\n   * Appends the info element into the dom.\n   *\n   * @param {integer} style - the style type to apply\n   * @return void\n   */\n  addInfo: (function() {\n    return function(style) {\n      var self = this;\n\n      if (!this._infoCon) {\n        this._infoCon = document.createElement('div');\n        this._infoCon.style.cssText = [\n          'position:fixed;bottom:0px;left:0;cursor:pointer;',\n          'opacity:0.9;z-index:10000;padding:10px;font-size:12px;',\n          'width:120px;height:50px;background-color:#002;color:#0ff;',\n        ].join('');\n\n        this._infoType = 1;\n        this._infoCon.addEventListener(\n          'click',\n          function() {\n            self._infoType++;\n            if (self._infoType > 3) self._infoType = 1;\n          },\n          false\n        );\n\n        var bg, color;\n\n        switch (style) {\n          case 2:\n            bg = '#201';\n            color = '#f08';\n            break;\n\n          case 3:\n            bg = '#020';\n            color = '#0f0';\n            break;\n\n          default:\n            bg = '#002';\n            color = '#0ff';\n        }\n\n        this._infoCon.style['background-color'] = bg;\n        this._infoCon.style['color'] = color;\n      }\n\n      if (!this._infoCon.parentNode) document.body.appendChild(this._infoCon);\n    };\n  })(),\n};\n","/**\n * You can use this emit particles.\n *\n * This method will console.log the fixed number of your info  in updata or requestAnimationFrame\n *\n * use like this log('+12',mc); log 12 times\n *\n * @return void\n */\nexport default function() {\n  let once = 0;\n\n  if (window.console && window.console.trace) {\n    var arg = Array.prototype.slice.call(arguments);\n    var s1 = arguments[0] + '';\n\n    if (s1.indexOf('+') == 0) {\n      var n = parseInt(arguments[0]);\n\n      if (once < n) {\n        arg.shift();\n        console.trace.apply(console, arg);\n        once++;\n      }\n    } else {\n      arg.unshift('+15');\n      this.apply(console, arg);\n    }\n  }\n}\n","import Emitter from './Emitter';\nimport THREEUtil from '../utils/THREEUtil';\nimport Util from '../utils/Util';\nimport { EMITTER_TYPE_FOLLOW as type } from './types';\n\nexport default class FollowEmitter extends Emitter {\n  /**\n   * The FollowEmitter class inherits from System.Emitter\n   *\n   * use the FollowEmitter will emit particle when mousemoving\n   *\n   * @class System.FollowEmitter\n   * @constructor\n   * @param {Element} mouseTarget mouseevent's target;\n   * @param {Number} ease the easing of following speed;\n   * @default 0.7\n   * @param {Object} pObj the parameters object;\n   */\n  constructor(mouseTarget, ease, pObj) {\n    super(pObj);\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n    this.mouseTarget = Util.initValue(mouseTarget, window);\n    this.ease = Util.initValue(ease, 0.7);\n    this._allowEmitting = false;\n    this.initEventHandler();\n  }\n\n  initEventHandler() {\n    var self = this;\n\n    this.mousemoveHandler = function(e) {\n      self.mousemove.call(self, e);\n    };\n\n    this.mousedownHandler = function(e) {\n      self.mousedown.call(self, e);\n    };\n\n    this.mouseupHandler = function(e) {\n      self.mouseup.call(self, e);\n    };\n\n    this.mouseTarget.addEventListener(\n      'mousemove',\n      this.mousemoveHandler,\n      false\n    );\n  }\n\n  /**\n   * start emit particle\n   * @method emit\n   */\n  emit() {\n    this._allowEmitting = true;\n  }\n\n  /**\n   * stop emiting\n   * @method stopEmit\n   */\n  stopEmit() {\n    this._allowEmitting = false;\n  }\n\n  setCameraAndCanvas(camera, canvas) {\n    this.camera = camera;\n    this.canvas = canvas;\n  }\n\n  mousemove(e) {\n    if (e.layerX || e.layerX == 0) {\n      this.position.x += (e.layerX - this.position.x) * this.ease;\n      this.position.y += (e.layerY - this.position.y) * this.ease;\n    } else if (e.offsetX || e.offsetX == 0) {\n      this.position.x += (e.offsetX - this.position.x) * this.ease;\n      this.position.y += (e.offsetY - this.position.y) * this.ease;\n    }\n\n    this.position.copy(\n      THREEUtil.toSpacePos(this.position, this.camera, this.canvas)\n    );\n\n    if (this._allowEmitting) super.emit('once');\n  }\n\n  /**\n   * Destory this Emitter\n   * @method destroy\n   */\n  destroy() {\n    super.destroy();\n    this.mouseTarget.removeEventListener(\n      'mousemove',\n      this.mousemoveHandler,\n      false\n    );\n  }\n}\n","import {\n  PARTICLE_CREATED,\n  PARTICLE_DEAD,\n  PARTICLE_UPDATE,\n  SYSTEM_UPDATE,\n} from '../events/constants';\n\nimport { RENDERER_TYPE_BASE } from './types';\nimport { __DEV__ } from '../constants';\n\nexport default class BaseRenderer {\n  constructor(type = RENDERER_TYPE_BASE) {\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n  }\n\n  init(system) {\n    var self = this;\n\n    this.system = system;\n\n    this.system.eventDispatcher.addEventListener(SYSTEM_UPDATE, function(\n      system\n    ) {\n      self.onSystemUpdate.call(self, system);\n    });\n\n    this.system.eventDispatcher.addEventListener(PARTICLE_CREATED, function(\n      particle\n    ) {\n      self.onParticleCreated.call(self, particle);\n    });\n\n    this.system.eventDispatcher.addEventListener(PARTICLE_UPDATE, function(\n      particle\n    ) {\n      self.onParticleUpdate.call(self, particle);\n    });\n\n    this.system.eventDispatcher.addEventListener(PARTICLE_DEAD, function(\n      particle\n    ) {\n      self.onParticleDead.call(self, particle);\n    });\n\n    this.logRendererType();\n  }\n\n  remove() {\n    this.system = null;\n  }\n\n  /**\n   * @abstract\n   */\n  onParticleCreated(particle) {} // eslint-disable-line\n\n  /**\n   * @abstract\n   */\n  onParticleUpdate(particle) {} // eslint-disable-line\n\n  /**\n   * @abstract\n   */\n  onParticleDead(particle) {} // eslint-disable-line\n\n  /**\n   * @abstract\n   */\n  onSystemUpdate(system) {} // eslint-disable-line\n\n  /**\n   * Logs the renderer type being used when in development mode.\n   *\n   * @return void\n   */\n  logRendererType() {\n    if (!__DEV__) {\n      return;\n    }\n\n    console.log(`${this.type}`);\n  }\n}\n","import BaseRenderer from './BaseRenderer';\nimport { Pool } from '../core';\nimport { RENDERER_TYPE_CUSTOM as type } from './types';\n\nexport default class CustomRenderer extends BaseRenderer {\n  constructor() {\n    super(type);\n\n    this.targetPool = new Pool();\n    this.materialPool = new Pool();\n  }\n\n  onSystemUpdate() {}\n\n  onParticleCreated(particle) {} // eslint-disable-line\n\n  onParticleUpdate(particle) {} // eslint-disable-line\n\n  onParticleDead(particle) {} // eslint-disable-line\n}\n","import BaseRenderer from './BaseRenderer';\nimport { PUID } from '../utils';\nimport { Pool } from '../core';\nimport { RENDERER_TYPE_MESH as type } from './types';\n\n/**\n * @requires THREE - { Mesh, BoxGeometry, MeshLambertMaterial }\n */\nexport default class MeshRenderer extends BaseRenderer {\n  /**\n   * @param {object} container - An Object3D container, usually a THREE.Scene\n   * @param {object} THREE - THREE Api\n   */\n  constructor(container, THREE) {\n    super(type);\n\n    this.container = container;\n    this._targetPool = new Pool();\n    this._materialPool = new Pool();\n    this._body = new THREE.Mesh(\n      new THREE.BoxGeometry(50, 50, 50),\n      new THREE.MeshLambertMaterial({ color: '#ff0000' })\n    );\n  }\n\n  isThreeSprite(particle) {\n    return particle.target.isSprite;\n  }\n\n  onSystemUpdate() {}\n\n  onParticleCreated(particle) {\n    if (!particle.target) {\n      //set target\n      if (!particle.body) particle.body = this._body;\n      particle.target = this._targetPool.get(particle.body);\n\n      //set material\n      if (particle.useAlpha || particle.useColor) {\n        particle.target.material.__puid = PUID.id(particle.body.material);\n        particle.target.material = this._materialPool.get(\n          particle.target.material\n        );\n      }\n    }\n\n    if (particle.target) {\n      particle.target.position.copy(particle.position);\n      this.container.add(particle.target);\n    }\n  }\n\n  onParticleUpdate(particle) {\n    const { target, useAlpha, useColor, rotation } = particle;\n\n    if (!target) {\n      return;\n    }\n\n    target.position.copy(particle.position);\n\n    if (!this.isThreeSprite(particle)) {\n      target.rotation.set(rotation.x, rotation.y, rotation.z);\n    }\n\n    this.scale(particle);\n\n    if (useAlpha) {\n      target.material.opacity = particle.alpha;\n      target.material.transparent = true;\n    }\n\n    if (useColor) {\n      target.material.color.copy(particle.color);\n    }\n  }\n\n  scale(particle) {\n    particle.target.scale.set(particle.scale, particle.scale, particle.scale);\n  }\n\n  onParticleDead(particle) {\n    if (particle.target) {\n      if (particle.useAlpha || particle.useColor)\n        this._materialPool.expire(particle.target.material);\n\n      this._targetPool.expire(particle.target);\n      this.container.remove(particle.target);\n      particle.target = null;\n    }\n  }\n}\n","import MeshRenderer from './MeshRenderer';\nimport { RENDERER_TYPE_SPRITE as type } from './types';\n\n/**\n * @requires THREE - { Mesh, BoxGeometry, MeshLambertMaterial, Sprite, SpriteMaterial }\n */\nexport default class SpriteRenderer extends MeshRenderer {\n  constructor(container, THREE) {\n    super(container, THREE);\n\n    /**\n     * @desc The class type.\n     * @type {string}\n     */\n    this.type = type;\n    this._body = new THREE.Sprite(\n      new THREE.SpriteMaterial({ color: 0xffffff })\n    );\n  }\n\n  scale(particle) {\n    particle.target.scale.set(\n      particle.scale * particle.radius,\n      particle.scale * particle.radius,\n      1\n    );\n  }\n}\n","// Primitives\nexport const DEFAULT_MAX_PARTICLES = 10000;\nexport const VECTOR_3_SIZE = ['x', 'y', 'z'].length;\nexport const RGBA_SIZE = ['r', 'g', 'b', 'a'].length;\nexport const FLOAT_BYTE_SIZE = 4;\n\n// Byte sizes\nexport const POSITION_BYTE_SIZE = VECTOR_3_SIZE * FLOAT_BYTE_SIZE;\nexport const SIZE_BYTE_SIZE = FLOAT_BYTE_SIZE;\nexport const RGBA_BYTE_SIZE = RGBA_SIZE * FLOAT_BYTE_SIZE;\nexport const ALL_BYTE_SIZES = [\n  POSITION_BYTE_SIZE,\n  SIZE_BYTE_SIZE,\n  RGBA_BYTE_SIZE,\n];\nexport const PARTICLE_BYTE_SIZE = ALL_BYTE_SIZES.reduce(\n  (cur, acc) => cur + acc\n);\n\n// Attributes\nexport const POSITION_ATTRIBUTE_BUFFER_SIZE = VECTOR_3_SIZE;\nexport const SIZE_ATTRIBUTE_BUFFER_SIZE = 1;\nexport const RGBA_ATTRIBUTE_BUFFER_SIZE = RGBA_SIZE;\nexport const ALPHA_ATTRIBUTE_BUFFER_SIZE = 1;\nexport const TEXID_ATTRIBUTE_BUFFER_SIZE = 2;\n\nexport const ATTRIBUTE_TO_SIZE_MAP = {\n  position: POSITION_ATTRIBUTE_BUFFER_SIZE,\n  size: SIZE_ATTRIBUTE_BUFFER_SIZE,\n  // THREE.Color does not contain alpha, so we will have separate attributes for these\n  color: RGBA_ATTRIBUTE_BUFFER_SIZE,\n  alpha: ALPHA_ATTRIBUTE_BUFFER_SIZE,\n  texID: TEXID_ATTRIBUTE_BUFFER_SIZE,\n};\n\nexport const PARTICLE_STRIDE = [\n  POSITION_ATTRIBUTE_BUFFER_SIZE,\n  SIZE_ATTRIBUTE_BUFFER_SIZE,\n  RGBA_ATTRIBUTE_BUFFER_SIZE,\n  ALPHA_ATTRIBUTE_BUFFER_SIZE,\n  TEXID_ATTRIBUTE_BUFFER_SIZE,\n].reduce((cur, acc) => cur + acc);\n","import { DEFAULT_MAX_PARTICLES } from './ParticleBuffer/constants';\n\nexport const DEFAULT_RENDERER_OPTIONS = {\n  blending: 'AdditiveBlending',\n  baseColor: 0xffffff,\n  depthTest: true,\n  depthWrite: false,\n  transparent: true,\n  maxParticles: DEFAULT_MAX_PARTICLES,\n  shouldDebugTextureAtlas: false,\n  shouldForceDesktopRenderer: false,\n  shouldForceMobileRenderer: false,\n};\n","/**\n * Simple class that stores the particle's \"target\" or \"next\" state.\n *\n */\nexport class Target {\n  constructor(THREE) {\n    this.position = new THREE.Vector3();\n    this.size = 0;\n    this.color = new THREE.Color();\n    this.alpha = 0;\n    this.texture = null;\n    this.index = 0;\n  }\n\n  reset() {\n    this.position.set(0, 0, 0);\n    this.size = 0;\n    this.color.setRGB(0, 0, 0);\n    this.alpha = 0;\n    this.texture = null;\n  }\n}\n","/**\n * Map of particle IDs to integer ids\n */\nexport class UniqueList {\n  constructor(max = Infinity) {\n    this.max = max;\n    this.count = 0;\n    this._items = {};\n  }\n\n  add(item) {\n    if (this._items[item] !== undefined) {\n      return;\n    }\n\n    this._items[item] = this.count++;\n  }\n\n  find(item) {\n    return this._items[item];\n  }\n\n  destroy() {\n    this._items = {};\n    this.count = 0;\n  }\n}\n","import {\n  ATTRIBUTE_TO_SIZE_MAP,\n  DEFAULT_MAX_PARTICLES,\n  PARTICLE_BYTE_SIZE,\n} from './constants';\n\nlet THREE;\n\n/**\n * Creates and provides performant buffers for mapping particle properties to geometry vertices.\n *\n * @author thrax <manthrax@gmail.com>\n * @author rohan-deshpande <rohan@creativelifeform.com>\n * @see https://threejs.org/examples/?q=buffe#webgl_buffergeometry_points_interleaved\n * @see https://threejs.org/examples/?q=points#webgl_custom_attributes_points\n */\nexport default class ParticleBuffer {\n  constructor(maxParticles = DEFAULT_MAX_PARTICLES, three) {\n    THREE = three;\n    this.maxParticles = maxParticles;\n\n    this.createInterleavedBuffer().createBufferGeometry();\n  }\n\n  /**\n   * Creates the interleaved buffer that will be used to write data to the GPU.\n   *\n   * @return {ParticleBuffer}\n   */\n  createInterleavedBuffer() {\n    const arrayBuffer = new ArrayBuffer(this.maxParticles * PARTICLE_BYTE_SIZE);\n\n    this.interleavedBuffer = new THREE.InterleavedBuffer(\n      new Float32Array(arrayBuffer),\n      PARTICLE_BYTE_SIZE\n    );\n    // this.interleavedBuffer.usage = THREE.DynamicDrawUsage;\n    \n    return this;\n  }\n\n  /**\n   * Sets the geometry's buffer attributes.\n   *\n   * NOTE Each attribute needs to be set at the right index in the buffer right after the previous\n   * attribute that occupies a set amount of size in the buffer.\n   *\n   * @return {ParticleBufferGeometry}\n   */\n  createBufferGeometry() {\n    this.geometry = new THREE.BufferGeometry();\n\n    const { interleavedBuffer, geometry } = this;\n\n    Object.keys(ATTRIBUTE_TO_SIZE_MAP).reduce((offset, attribute) => {\n      const size = ATTRIBUTE_TO_SIZE_MAP[attribute];\n\n      geometry.setAttribute(\n        attribute,\n        new THREE.InterleavedBufferAttribute(interleavedBuffer, size, offset)\n      );\n\n      return (offset += size);\n    }, 0);\n\n    return this;\n  }\n\n  /**\n   * Gets the publicly accessible interleaved buffer.\n   *\n   * @return {THREE.InterleavedBuffer} buffers - The interleaved buffer\n   */\n  get buffer() {\n    return this.interleavedBuffer;\n  }\n\n  get stride() {\n    return PARTICLE_BYTE_SIZE;\n  }\n}\n","import {\n  RENDERER_TYPE_GPU_DESKTOP,\n  RENDERER_TYPE_GPU_MOBILE,\n} from '../../../types';\n\nimport { DATA_TEXTURE_SIZE } from './constants';\nimport { __DEV__ } from '../../../../constants';\nimport potpack from 'potpack';\n\n/**\n * Dynamic texture atlas for performant support of systems with multiple emitters and textures.\n *\n */\nexport default class TextureAtlas {\n  constructor(renderer, shouldDebug) {\n    const { three: THREE, type: rendererType } = renderer;\n    const data = new Float32Array(DATA_TEXTURE_SIZE * 4);\n    const ctx = (this.ctx = document.createElement('canvas').getContext('2d'));\n    const { canvas } = ctx;\n\n    this.shouldDebug = shouldDebug;\n    this.rendererType = rendererType;\n    this.indexData = data;\n    this.canvas = canvas;\n    this.entries = [];\n\n    if (rendererType === RENDERER_TYPE_GPU_DESKTOP) {\n      this.atlasIndex = new THREE.DataTexture(\n        data,\n        DATA_TEXTURE_SIZE,\n        1,\n        THREE.RGBAFormat,\n        THREE.FloatType\n      );\n    }\n\n    canvas.width = canvas.height = DATA_TEXTURE_SIZE;\n\n    if (shouldDebug) {\n      this.debug(canvas, ctx);\n    }\n\n    this.atlasTexture = new THREE.CanvasTexture(canvas);\n    this.atlasTexture.flipY = false;\n\n    renderer.material.uniforms.uTexture.value = this.atlasTexture;\n\n    if (rendererType === RENDERER_TYPE_GPU_DESKTOP) {\n      renderer.material.uniforms.atlasIndex.value = this.atlasIndex;\n    }\n\n    renderer.material.uniformsNeedUpdate = true;\n  }\n\n  /**\n   * Logs to the console when in dev mode.\n   *\n   */\n  log(...args) {\n    if (!__DEV__) {\n      return;\n    }\n\n    console.log(...args);\n  }\n\n  /**\n   * Debugs the texture atlas by rendering it to a canvas in the DOM.\n   *\n   */\n  debug() {\n    const { canvas, ctx } = this;\n    const halfmax = canvas.width;\n\n    ctx.fillStyle = 'purple';\n    ctx.fillRect(0, 0, halfmax, halfmax);\n    ctx.fillStyle = 'green';\n    ctx.fillRect(0, halfmax, halfmax, halfmax);\n    ctx.fillStyle = 'blue';\n    ctx.fillRect(halfmax, 0, halfmax, halfmax);\n    ctx.fillStyle = 'orange';\n    ctx.fillRect(halfmax, halfmax, halfmax, halfmax);\n    ctx.fillStyle = 'yellow';\n    ctx.font = canvas.width + 'px Verdana';\n    ctx.fillText('top row', 100, 500);\n    ctx.fillStyle = 'pink';\n    ctx.fillText('bottom row', 100, 1500);\n\n    canvas.style.position = 'absolute';\n    canvas.style.width = canvas.style.height = '300px';\n    canvas.style.left = canvas.style.top = '0px';\n    canvas.style.zIndex = 100;\n\n    document.body.appendChild(canvas);\n  }\n\n  /**\n   * Adds a texture to the texture atlas and flags that the atlas needs to be updated.\n   *\n   */\n  addTexture(texture) {\n    this.log('Adding texture to atlas:', texture.uuid);\n\n    texture.textureIndex = this.entries.length;\n    this.entries.push({ texture: texture });\n    this.needsUpdate = true;\n  }\n\n  /**\n   * Updates the texture atlas. Will only rebuild the atlas if all images are loaded.\n   *\n   */\n  update() {\n    if (!this.needsUpdate) {\n      return;\n    }\n\n    const {\n      entries,\n      canvas,\n      indexData,\n      ctx,\n      atlasIndex,\n      atlasTexture,\n      rendererType,\n    } = this;\n\n    for (let i = 0; i < entries.length; i++) {\n      if (!entries[i].texture.image) {\n        return;\n      }\n    }\n\n    this.needsUpdate = false;\n\n    for (let i = 0; i < entries.length; i++) {\n      const e = entries[i];\n      const { texture } = e;\n      const { width, height } = texture.image;\n\n      e.w = width;\n      e.h = height;\n    }\n\n    const stats = potpack(entries);\n\n    this.log('Rebuilt atlas:', stats);\n\n    if (canvas.width != stats.w || canvas.height != stats.h) {\n      canvas.width = stats.w;\n      canvas.height = stats.h;\n    }\n\n    for (let i = 0; i < entries.length; i++) {\n      const e = this.entries[i];\n      const ii = e.texture.textureIndex * 4;\n\n      if (rendererType === RENDERER_TYPE_GPU_DESKTOP) {\n        indexData[ii + 0] = e.x / canvas.width;\n        indexData[ii + 1] = e.y / canvas.height;\n        indexData[ii + 2] = (e.x + e.w) / canvas.width;\n        indexData[ii + 3] = (e.y + e.h) / canvas.height;\n      }\n\n      if (rendererType === RENDERER_TYPE_GPU_MOBILE) {\n        indexData[ii + 0] = e.x / (canvas.width + 1);\n        indexData[ii + 1] = e.y / (canvas.height + 1);\n        indexData[ii + 2] = (e.x + e.w) / (canvas.width + 1);\n        indexData[ii + 3] = (e.y + e.h) / (canvas.height + 1);\n      }\n\n      ctx.drawImage(e.texture.image, e.x, e.y, e.w, e.h);\n    }\n\n    if (rendererType === RENDERER_TYPE_GPU_DESKTOP) {\n      atlasIndex.needsUpdate = true;\n    }\n\n    atlasTexture.needsUpdate = true;\n  }\n\n  /**\n   * Disposes of the textures used by the texture atlas.\n   *\n   * @return void\n   */\n  destroy() {\n    const { atlasIndex, atlasTexture, canvas } = this;\n\n    atlasTexture.dispose();\n    atlasIndex && atlasIndex.dispose();\n\n    if (this.shouldDebug) {\n      canvas.remove();\n    }\n\n    this.entries = [];\n  }\n}\n","export const DATA_TEXTURE_SIZE = 256;\n","\nexport default function potpack(boxes) {\n\n    // calculate total box area and maximum box width\n    let area = 0;\n    let maxWidth = 0;\n\n    for (const box of boxes) {\n        area += box.w * box.h;\n        maxWidth = Math.max(maxWidth, box.w);\n    }\n\n    // sort the boxes for insertion by height, descending\n    boxes.sort((a, b) => b.h - a.h);\n\n    // aim for a squarish resulting container,\n    // slightly adjusted for sub-100% space utilization\n    const startWidth = Math.max(Math.ceil(Math.sqrt(area / 0.95)), maxWidth);\n\n    // start with a single empty space, unbounded at the bottom\n    const spaces = [{x: 0, y: 0, w: startWidth, h: Infinity}];\n\n    let width = 0;\n    let height = 0;\n\n    for (const box of boxes) {\n        // look through spaces backwards so that we check smaller spaces first\n        for (let i = spaces.length - 1; i >= 0; i--) {\n            const space = spaces[i];\n\n            // look for empty spaces that can accommodate the current box\n            if (box.w > space.w || box.h > space.h) continue;\n\n            // found the space; add the box to its top-left corner\n            // |-------|-------|\n            // |  box  |       |\n            // |_______|       |\n            // |         space |\n            // |_______________|\n            box.x = space.x;\n            box.y = space.y;\n\n            height = Math.max(height, box.y + box.h);\n            width = Math.max(width, box.x + box.w);\n\n            if (box.w === space.w && box.h === space.h) {\n                // space matches the box exactly; remove it\n                const last = spaces.pop();\n                if (i < spaces.length) spaces[i] = last;\n\n            } else if (box.h === space.h) {\n                // space matches the box height; update it accordingly\n                // |-------|---------------|\n                // |  box  | updated space |\n                // |_______|_______________|\n                space.x += box.w;\n                space.w -= box.w;\n\n            } else if (box.w === space.w) {\n                // space matches the box width; update it accordingly\n                // |---------------|\n                // |      box      |\n                // |_______________|\n                // | updated space |\n                // |_______________|\n                space.y += box.h;\n                space.h -= box.h;\n\n            } else {\n                // otherwise the box splits the space into two spaces\n                // |-------|-----------|\n                // |  box  | new space |\n                // |_______|___________|\n                // | updated space     |\n                // |___________________|\n                spaces.push({\n                    x: space.x + box.w,\n                    y: space.y,\n                    w: space.w - box.w,\n                    h: box.h\n                });\n                space.y += box.h;\n                space.h -= box.h;\n            }\n            break;\n        }\n    }\n\n    return {\n        w: width, // container width\n        h: height, // container height\n        fill: (area / (width * height)) || 0 // space utilization\n    };\n}\n","import { ParticleBuffer, Target, TextureAtlas, UniqueList } from '../common';\nimport { fragmentShader, vertexShader } from './shaders';\n\nimport BaseRenderer from '../../BaseRenderer';\nimport { DEFAULT_RENDERER_OPTIONS } from '../common/constants';\nimport { Pool } from '../../../core';\nimport { RENDERER_TYPE_GPU_DESKTOP } from '../../types';\n\nlet THREE;\n\n/**\n * GPURenderer for devices that support floating point textures.\n *\n * @author thrax <manthrax@gmail.com>\n * @author rohan-deshpande <rohan@creativelifeform.com>\n */\nexport default class DesktopGPURenderer extends BaseRenderer {\n  constructor(container, three, options = DEFAULT_RENDERER_OPTIONS) {\n    super(RENDERER_TYPE_GPU_DESKTOP);\n\n    THREE = this.three = three;\n    const props = { ...DEFAULT_RENDERER_OPTIONS, ...options };\n    const {\n      camera,\n      maxParticles,\n      baseColor,\n      blending,\n      depthTest,\n      depthWrite,\n      transparent,\n      shouldDebugTextureAtlas,\n    } = props;\n    const particleBuffer = new ParticleBuffer(maxParticles, THREE);\n    const material = new THREE.ShaderMaterial({\n      uniforms: {\n        baseColor: { value: new THREE.Color(baseColor) },\n        uTexture: { value: null },\n        atlasIndex: { value: null },\n      },\n      vertexShader: vertexShader(),\n      fragmentShader: fragmentShader(),\n      blending: THREE[blending],\n      depthTest,\n      depthWrite,\n      transparent,\n    });\n\n    this.container = container;\n    this.camera = camera;\n    this.targetPool = new Pool();\n    this.uniqueList = new UniqueList(maxParticles);\n    this.particleBuffer = particleBuffer;\n    this.buffer = particleBuffer.buffer;\n    this.stride = particleBuffer.stride;\n    this.geometry = particleBuffer.geometry;\n    this.material = material;\n    this.points = new THREE.Points(this.geometry, this.material);\n    this.points.frustumCulled = false;\n    this.shouldDebugTextureAtlas = shouldDebugTextureAtlas;\n\n    this.container.add(this.points);\n  }\n\n  onSystemUpdate(system) {\n    super.onSystemUpdate(system);\n\n    this.buffer.needsUpdate = true;\n\n    this.textureAtlas && this.textureAtlas.update();\n  }\n\n  /**\n   * Pools the particle target if it does not exist.\n   * Updates the target and maps particle properties to the point.\n   *\n   * @param {Particle}\n   */\n  onParticleCreated(particle) {\n    if (!particle.target) {\n      particle.target = this.targetPool.get(Target, THREE);\n      this.uniqueList.add(particle.id);\n    }\n\n    this.updateTarget(particle).mapParticleTargetPropsToPoint(particle);\n  }\n\n  /**\n   * Maps particle properties to the point if the particle has a target.\n   *\n   * @param {Particle}\n   */\n  onParticleUpdate(particle) {\n    if (!particle.target) {\n      return;\n    }\n\n    this.updateTarget(particle).mapParticleTargetPropsToPoint(particle);\n  }\n\n  /**\n   * Resets and clears the particle target.\n   *\n   * @param {Particle}\n   */\n  onParticleDead(particle) {\n    if (!particle.target) {\n      return;\n    }\n\n    particle.target.reset();\n    this.mapParticleTargetPropsToPoint(particle);\n\n    particle.target = null;\n  }\n\n  /**\n   * Maps all mutable properties from the particle to the target.\n   *\n   * @param {Particle}\n   * @return {DesktopGPURenderer}\n   */\n  updateTarget(particle) {\n    const { position, scale, radius, color, alpha, body, id } = particle;\n    const { r, g, b } = color;\n\n    particle.target.position.copy(position);\n    particle.target.size = scale * radius;\n    particle.target.color.setRGB(r, g, b);\n    particle.target.alpha = alpha;\n    particle.target.index = this.uniqueList.find(id);\n\n    if (body && body instanceof THREE.Sprite) {\n      const { map } = body.material;\n\n      particle.target.texture = map;\n      particle.target.textureIndex = this.getTextureID(\n        map,\n        this.shouldDebugTextureAtlas\n      );\n    }\n\n    return this;\n  }\n\n  /**\n   * Entry point for mapping particle properties to buffer geometry points.\n   *\n   * @param {Particle} particle - The particle containing the properties to map\n   * @return {DesktopGPURenderer}\n   */\n  mapParticleTargetPropsToPoint(particle) {\n    this.updatePointPosition(particle)\n      .updatePointSize(particle)\n      .updatePointColor(particle)\n      .updatePointAlpha(particle)\n      .updatePointTextureIndex(particle);\n\n    return this;\n  }\n\n  /**\n   * Updates the point's position according to the particle's target position.\n   *\n   * @param {Particle} particle - The particle containing the target position.\n   * @return {DesktopGPURenderer}\n   */\n  updatePointPosition(particle) {\n    const attribute = 'position';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.position.x;\n    buffer.array[target.index * stride + offset + 1] = target.position.y;\n    buffer.array[target.index * stride + offset + 2] = target.position.z;\n\n    return this;\n  }\n\n  /**\n   * Updates the point's size relative to the particle's target scale and radius.\n   *\n   * @param {Particle} particle - The particle containing the target scale.\n   * @return {DesktopGPURenderer}\n   */\n  updatePointSize(particle) {\n    const attribute = 'size';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.size;\n\n    return this;\n  }\n\n  /**\n   * Updates the point's color attribute according with the particle's target color.\n   *\n   * @param {Particle} particle - The particle containing the target color and alpha.\n   * @return {DesktopGPURenderer}\n   */\n  updatePointColor(particle) {\n    const attribute = 'color';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.color.r;\n    buffer.array[target.index * stride + offset + 1] = target.color.g;\n    buffer.array[target.index * stride + offset + 2] = target.color.b;\n\n    return this;\n  }\n\n  /**\n   * Updates the point alpha attribute with the particle's target alpha.\n   *\n   * @param {Particle} particle - The particle containing the target alpha.\n   * @return {DesktopGPURenderer}\n   */\n  updatePointAlpha(particle) {\n    const attribute = 'alpha';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.alpha;\n\n    return this;\n  }\n\n  /**\n   * Updates the point texture attribute with the particle's target texture.\n   *\n   * @param {Particle} particle - The particle containing the target texture.\n   * @return {DesktopGPURenderer}\n   */\n  updatePointTextureIndex(particle) {\n    const attribute = 'texID';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.textureIndex;\n\n    return this;\n  }\n\n  getTextureID(texture, debug) {\n    if (texture.textureIndex === undefined) {\n      if (!this.textureAtlas) {\n        this.textureAtlas = new TextureAtlas(this, debug);\n      }\n\n      this.textureAtlas.addTexture(texture);\n    }\n\n    return texture.textureIndex;\n  }\n\n  /**\n   * Tears down the GPURenderer.\n   *\n   * @return void\n   */\n  destroy() {\n    const { container, points, textureAtlas, uniqueList } = this;\n\n    container.remove(points);\n    uniqueList.destroy();\n    textureAtlas && textureAtlas.destroy();\n  }\n}\n","import { ParticleBuffer, Target, TextureAtlas, UniqueList } from '../common';\nimport { fragmentShader, vertexShader } from './shaders';\n\nimport BaseRenderer from '../../BaseRenderer';\nimport { DEFAULT_RENDERER_OPTIONS } from '../common/constants';\nimport { Pool } from '../../../core';\nimport { RENDERER_TYPE_GPU_MOBILE } from '../../types';\n\nlet THREE;\n\n/**\n * GPURenderer for mobile devices that do not support floating point textures.\n *\n * @author thrax <manthrax@gmail.com>\n * @author rohan-deshpande <rohan@creativelifeform.com>\n */\nexport default class MobileGPURenderer extends BaseRenderer {\n  constructor(container, three, options = DEFAULT_RENDERER_OPTIONS) {\n    super(RENDERER_TYPE_GPU_MOBILE);\n\n    THREE = this.three = three;\n    const props = { ...DEFAULT_RENDERER_OPTIONS, ...options };\n    const {\n      camera,\n      maxParticles,\n      baseColor,\n      blending,\n      depthTest,\n      depthWrite,\n      transparent,\n      shouldDebugTextureAtlas,\n    } = props;\n    const particleBuffer = new ParticleBuffer(maxParticles, THREE);\n    const material = new THREE.ShaderMaterial({\n      uniforms: {\n        baseColor: { value: new THREE.Color(baseColor) },\n        uTexture: { value: null },\n        FFatlasIndex: { value: null },\n        atlasDim: { value: new THREE.Vector2() },\n      },\n      vertexShader: vertexShader(),\n      fragmentShader: fragmentShader(),\n      blending: THREE[blending],\n      depthTest,\n      depthWrite,\n      transparent,\n    });\n\n    this.camera = camera;\n    this.targetPool = new Pool();\n    this.uniqueList = new UniqueList(maxParticles);\n    this.particleBuffer = particleBuffer;\n    this.buffer = particleBuffer.buffer;\n    this.stride = particleBuffer.stride;\n    this.geometry = particleBuffer.geometry;\n    this.material = material;\n    this.points = new THREE.Points(this.geometry, this.material);\n    this.points.frustumCulled = false;\n    this.shouldDebugTextureAtlas = shouldDebugTextureAtlas;\n\n    container.add(this.points);\n  }\n\n  onSystemUpdate(system) {\n    super.onSystemUpdate(system);\n\n    this.buffer.needsUpdate = true;\n\n    const { textureAtlas } = this;\n\n    if (textureAtlas) {\n      textureAtlas.update();\n      this.material.uniforms.atlasDim.value.set(\n        textureAtlas.atlasTexture.image.width,\n        textureAtlas.atlasTexture.image.height\n      );\n    }\n  }\n\n  /**\n   * Pools the particle target if it does not exist.\n   * Updates the target and maps particle properties to the point.\n   *\n   * @param {Particle}\n   */\n  onParticleCreated(particle) {\n    if (!particle.target) {\n      particle.target = this.targetPool.get(Target, THREE);\n      this.uniqueList.add(particle.id);\n    }\n\n    this.updateTarget(particle).mapParticleTargetPropsToPoint(particle);\n  }\n\n  /**\n   * Maps particle properties to the point if the particle has a target.\n   *\n   * @param {Particle}\n   */\n  onParticleUpdate(particle) {\n    if (!particle.target) {\n      return;\n    }\n\n    this.updateTarget(particle).mapParticleTargetPropsToPoint(particle);\n  }\n\n  /**\n   * Resets and clears the particle target.\n   *\n   * @param {Particle}\n   */\n  onParticleDead(particle) {\n    if (!particle.target) {\n      return;\n    }\n\n    particle.target.reset();\n    this.mapParticleTargetPropsToPoint(particle);\n\n    particle.target = null;\n  }\n\n  /**\n   * Maps all mutable properties from the particle to the target.\n   *\n   * @param {Particle}\n   * @return {GPURenderer}\n   */\n  updateTarget(particle) {\n    const { position, scale, radius, color, alpha, body, id } = particle;\n    const { r, g, b } = color;\n\n    particle.target.position.copy(position);\n    particle.target.size = scale * radius;\n    particle.target.color.setRGB(r, g, b);\n    particle.target.alpha = alpha;\n    particle.target.index = this.uniqueList.find(id);\n\n    if (body && body instanceof THREE.Sprite) {\n      const { map } = body.material;\n\n      particle.target.texture = map;\n      particle.target.textureIndex = this.getTextureID(\n        map,\n        this.shouldDebugTextureAtlas\n      );\n    }\n\n    return this;\n  }\n\n  /**\n   * Entry point for mapping particle properties to buffer geometry points.\n   *\n   * @param {Particle} particle - The particle containing the properties to map\n   * @return {GPURenderer}\n   */\n  mapParticleTargetPropsToPoint(particle) {\n    this.updatePointPosition(particle)\n      .updatePointSize(particle)\n      .updatePointColor(particle)\n      .updatePointAlpha(particle)\n      .updatePointTextureIndex(particle);\n\n    return this;\n  }\n\n  /**\n   * Updates the point's position according to the particle's target position.\n   *\n   * @param {Particle} particle - The particle containing the target position.\n   * @return {GPURenderer}\n   */\n  updatePointPosition(particle) {\n    const attribute = 'position';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.position.x;\n    buffer.array[target.index * stride + offset + 1] = target.position.y;\n    buffer.array[target.index * stride + offset + 2] = target.position.z;\n\n    return this;\n  }\n\n  /**\n   * Updates the point's size relative to the particle's target scale and radius.\n   *\n   * @param {Particle} particle - The particle containing the target scale.\n   * @return {GPURenderer}\n   */\n  updatePointSize(particle) {\n    const attribute = 'size';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.size;\n\n    return this;\n  }\n\n  /**\n   * Updates the point's color attribute according with the particle's target color.\n   *\n   * @param {Particle} particle - The particle containing the target color and alpha.\n   * @return {GPURenderer}\n   */\n  updatePointColor(particle) {\n    const attribute = 'color';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.color.r;\n    buffer.array[target.index * stride + offset + 1] = target.color.g;\n    buffer.array[target.index * stride + offset + 2] = target.color.b;\n\n    return this;\n  }\n\n  /**\n   * Updates the point alpha attribute with the particle's target alpha.\n   *\n   * @param {Particle} particle - The particle containing the target alpha.\n   * @return {GPURenderer}\n   */\n  updatePointAlpha(particle) {\n    const attribute = 'alpha';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n\n    buffer.array[target.index * stride + offset + 0] = target.alpha;\n\n    return this;\n  }\n\n  /**\n   * Updates the point texture attribute with the particle's target texture.\n   *\n   * @param {Particle} particle - The particle containing the target texture.\n   * @return {GPURenderer}\n   */\n  updatePointTextureIndex(particle) {\n    const attribute = 'texID';\n    const { geometry, stride, buffer } = this;\n    const { target } = particle;\n    const { offset } = geometry.attributes[attribute];\n    const id = target.index * stride + offset + 0;\n\n    // eslint-disable-next-line\n    if (false) {\n      buffer.array[id] = target.textureIndex;\n    } else {\n      let ti = target.textureIndex * 4;\n      const ta = this.textureAtlas;\n      const ida = ta.indexData;\n      const nx = ida[ti++];\n      const ny = ida[ti++];\n      const px = ida[ti++];\n      const py = ida[ti++];\n\n      buffer.array[id] = ((nx * ta.atlasTexture.image.width) | 0) + px;\n      buffer.array[id + 1] = ((ny * ta.atlasTexture.image.height) | 0) + py;\n    }\n\n    return this;\n  }\n\n  getTextureID(texture, debug) {\n    if (texture.textureIndex === undefined) {\n      if (!this.textureAtlas) {\n        this.textureAtlas = new TextureAtlas(this, debug);\n      }\n\n      this.textureAtlas.addTexture(texture);\n    }\n\n    return texture.textureIndex;\n  }\n\n  destroy() {\n    const { container, points, textureAtlas, uniqueList } = this;\n\n    container.remove(points);\n    uniqueList.destroy();\n    textureAtlas && textureAtlas.destroy();\n  }\n}\n","import { DATA_TEXTURE_SIZE } from '../../common/TextureAtlas/constants';\nimport { SIZE_ATTENUATION_FACTOR } from '../../common/shaders/constants';\n\nexport const vertexShader = () => {\n  return `\n    uniform sampler2D uTexture;\n    //atlasIndex is a 256x1 float texture of tile rectangles as r=minx g=miny b=maxx a=maxy\n    uniform sampler2D atlasIndex;\n\n    attribute float size;\n    attribute vec3 color;\n    attribute float alpha;\n    attribute float texID;\n\n    varying vec3 targetColor;\n    varying float targetAlpha;\n    varying vec4 tileRect;\n    varying float tileID;\n\n    void main() {\n      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n      targetColor = color;\n      targetAlpha = alpha;\n\n      tileID = texID;\n      //get the tile rectangle from the atlasIndex texture..\n      tileRect = texture2D(atlasIndex, vec2((tileID + 0.5) / ${DATA_TEXTURE_SIZE}.0, 0.5));\n\n      gl_PointSize = ((size * ${SIZE_ATTENUATION_FACTOR}) / -mvPosition.z);\n      gl_Position = projectionMatrix * mvPosition;\n    }\n`;\n};\n","export const fragmentShader = () => {\n  return `\n    uniform vec3 baseColor;\n    uniform sampler2D uTexture;\n    uniform sampler2D atlasIndex;\n\n    varying vec3 targetColor;\n    varying float targetAlpha;\n    varying vec4 tileRect;\n    varying float tileID;\n\n    void main() {\n      gl_FragColor = vec4(baseColor * targetColor, targetAlpha);\n\n      vec2 uv = gl_PointCoord;\n      uv = mix(tileRect.xy, tileRect.zw, gl_PointCoord);\n\n      gl_FragColor = gl_FragColor * texture2D(uTexture, uv);\n\n    }\n`;\n};\n","import { SIZE_ATTENUATION_FACTOR } from '../../common/shaders/constants';\n\nexport const vertexShader = () => {\n  return `\n    uniform sampler2D uTexture;\n    uniform vec2 atlasDim;\n\n    attribute float size;\n    attribute vec3 color;\n    attribute float alpha;\n    attribute vec2 texID;\n\n    varying vec3 targetColor;\n    varying float targetAlpha;\n    varying vec4 tileRect;\n\n    void main() {\n      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n      targetColor = color;\n      targetAlpha = alpha;\n\n      vec2 tmin = floor(texID) / atlasDim;\n      vec2 tmax = fract(texID);\n      tileRect = vec4(tmin,tmax);\n\n      gl_PointSize = ((size * ${SIZE_ATTENUATION_FACTOR}) / -mvPosition.z);\n      gl_Position = projectionMatrix * mvPosition;\n    }\n`;\n};\n","export const fragmentShader = () => {\n  return `\n    uniform vec3 baseColor;\n    uniform sampler2D uTexture;\n\n    varying vec3 targetColor;\n    varying float targetAlpha;\n    varying vec4 tileRect;\n\n    void main() {\n      gl_FragColor = vec4(baseColor * targetColor, targetAlpha);\n\n      vec2 uv = gl_PointCoord;\n      uv = mix(tileRect.xy, tileRect.zw, gl_PointCoord);\n\n      gl_FragColor = gl_FragColor * texture2D(uTexture, uv);\n    }\n`;\n};\n","import BaseRenderer from '../BaseRenderer';\nimport { DEFAULT_RENDERER_OPTIONS } from './common/constants';\nimport DesktopGPURenderer from './Desktop';\nimport MobileGPURenderer from './Mobile';\nimport { RENDERER_TYPE_GPU } from '../types';\n\n/**\n * Performant particle renderer that uses THREE.Points to propagate particle (postiion, rgba etc.,) properties to\n * vertices in a ParticleBufferGeometry.\n * Uses a dynamic texture atlas to support systems with mutliple sprites in a performant way.\n *\n * NOTE! This is an experimental renderer and is currently not covered by tests, coverage will be added when the API\n * is more stable. Currently only compatible with sprite/texture based systems. Meshes are not yet supported.\n *\n * @author thrax <manthrax@gmail.com>\n * @author rohan-deshpande <rohan@creativelifeform.com>\n */\nexport default class GPURenderer extends BaseRenderer {\n  constructor(container, THREE, options = DEFAULT_RENDERER_OPTIONS) {\n    super(RENDERER_TYPE_GPU);\n\n    const { shouldForceDesktopRenderer, shouldForceMobileRenderer } = options;\n    const args = [container, THREE, options];\n\n    if (shouldForceDesktopRenderer) {\n      return new DesktopGPURenderer(...args);\n    }\n\n    if (shouldForceMobileRenderer) {\n      return new MobileGPURenderer(...args);\n    }\n\n    if (!this.isFloatingPointTextureSupported()) {\n      return new MobileGPURenderer(...args);\n    }\n\n    return new DesktopGPURenderer(...args);\n  }\n\n  isFloatingPointTextureSupported() {\n    const canvas = document.createElement('canvas');\n\n    if (window.WebGL2RenderingContext && canvas.getContext('webgl2')) {\n      // return false here to test the mobile renderer on desktop\n      return true;\n    }\n\n    const gl = canvas.getContext('webgl');\n    const support = !!gl.getExtension('OES_texture_float');\n\n    canvas.remove();\n\n    return support;\n  }\n}\n","import { System } from './core';\n\nexport * from './behaviour';\nexport * from './debug';\nexport * from './ease';\nexport * from './emitter';\nexport * from './initializer';\nexport * from './math';\nexport * from './renderer';\nexport * from './utils';\nexport * from './zone';\nexport { System, Particle, Pool } from './core';\nexport default System;\n"],"names":["root","factory","exports","module","define","amd","this","Symbol","baseTimes","isArguments","isArray","isBuffer","isIndex","isTypedArray","hasOwnProperty","Object","prototype","value","inherited","isArr","isArg","isBuff","isType","skipIndexes","result","length","String","key","call","push","array","iteratee","index","Array","baseRandom","undefined","getRawTag","objectToString","symToStringTag","toStringTag","baseGetTag","isObjectLike","isLength","typedArrayTags","isPrototype","nativeKeys","object","nativeFloor","Math","floor","nativeRandom","random","lower","upper","arraySample","values","collection","n","func","arrayMap","props","freeGlobal","g","objectProto","nativeObjectToString","toString","isOwn","tag","unmasked","e","reIsUint","type","test","Ctor","constructor","overArg","keys","freeExports","nodeType","freeModule","freeProcess","process","nodeUtil","require","types","binding","transform","arg","freeSelf","self","Function","baseIsArguments","propertyIsEnumerable","arguments","isFunction","stubFalse","Buffer","isObject","baseIsTypedArray","baseUnary","nodeIsTypedArray","arrayLikeKeys","baseKeys","isArrayLike","baseSample","baseValues","byteToHex","i","substr","buf","offset","bth","join","getRandomValues","crypto","bind","window","msCrypto","rnds8","Uint8Array","rnds","r","_nodeId","_clockseq","rng","bytesToUuid","_lastMSecs","_lastNSecs","options","b","node","clockseq","seedBytes","msecs","Date","getTime","nsecs","dt","Error","tl","tmh","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","globalThis","obj","prop","nmd","paths","children","BEHAVIOUR_TYPE_ALPHA","BEHAVIOUR_TYPE_ATTRACTION","BEHAVIOUR_TYPE_COLOR","BEHAVIOUR_TYPE_CROSS_ZONE","BEHAVIOUR_TYPE_FORCE","BEHAVIOUR_TYPE_GRAVITY","BEHAVIOUR_TYPE_RANDOM_DRIFT","BEHAVIOUR_TYPE_REPULSION","BEHAVIOUR_TYPE_ROTATE","BEHAVIOUR_TYPE_SCALE","BEHAVIOUR_TYPE_SPRING","INITIALIZER_TYPE_BODY","INITIALIZER_TYPE_BODY_SPRITE","INITIALIZER_TYPE_TEXTURE","INITIALIZER_TYPE_LIFE","INITIALIZER_TYPE_MASS","INITIALIZER_TYPE_POSITION","INITIALIZER_TYPE_RADIUS","INITIALIZER_TYPE_VECTOR_VELOCITY","INITIALIZER_TYPE_POLAR_VELOCITY","INITIALIZER_TYPE_RADIAL_VELOCITY","INITIALIZER_TYPES_THAT_REQUIRE_THREE","ZONE_TYPE_BOX","ZONE_TYPE_LINE","ZONE_TYPE_MESH","ZONE_TYPE_POINT","ZONE_TYPE_SPHERE","RENDERER_TYPE_GPU_MOBILE","RENDERER_TYPE_GPU_DESKTOP","PI","POOL_MAX","DR","EULER","__DEV__","env","ease","easeLinear","easeInQuad","pow","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInSine","cos","easeOutSine","sin","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInBack","s","easeOutBack","easeInOutBack","setEasingByName","easeName","getEasingByName","name","DEFAULT_LIFE","Infinity","DEFAULT_EASING","DEFAULT_SYSTEM_DELTA","SUPPORTED_JSON_INITIALIZER_TYPES","SUPPORTED_JSON_BEHAVIOUR_TYPES","SUPPORTED_JSON_ZONE_TYPES","_defineProperty","configurable","writable","getRGB","color","rgb","hex","m","exec","min","parseInt","charAt","_id","_uids","Map","getNewId","functionOrObject","has","newId","set","quaternion","vector","matrix","x","y","z","zero","one","q","_Math","DEG2RAD","RAD2DEG","generateUUID","lut","d0","d1","d2","d3","toUpperCase","clamp","max","euclideanModulo","mapLinear","a1","a2","b1","b2","lerp","t","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","log","LN2","floorPowerOfTwo","Quaternion","w","_x","_y","_z","_w","Vector3","Matrix4","elements","console","error","Euler","order","_order","DefaultOrder","assign","slerp","qa","qb","qm","copy","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","Number","EPSILON","len","atan2","tDir","f","defineProperties","_onChangeCallback","isQuaternion","clone","setFromEuler","euler","update","isEuler","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","angle","halfAngle","setFromRotationMatrix","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","dot","abs","normalize","angleTo","acos","rotateTowards","step","inverse","conjugate","v","lengthSq","l","multiply","p","warn","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","equals","fromArray","toArray","_onChange","callback","isVector3","setScalar","scalar","setX","setY","setZ","setComponent","getComponent","add","addVectors","addScalar","addScaledVector","sub","subVectors","subScalar","multiplyVectors","multiplyScalar","applyEuler","applyQuaternion","applyAxisAngle","applyMatrix3","applyMatrix4","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","divide","divideScalar","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","manhattanLength","setLength","alpha","lerpVectors","v1","v2","cross","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","theta","distanceTo","distanceToSquared","dx","dy","dz","manhattanDistanceTo","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","c","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","fromBufferAttribute","attribute","getX","getY","getZ","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","identity","me","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","lookAt","eye","target","up","multiplyMatrices","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","count","setXYZ","determinant","transpose","tmp","setPosition","getInverse","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","makeShear","position","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","decompose","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","h","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","toScreenPos","pos","canvas","width","height","toSpacePos","distance","initValue","defaults","destroyArray","destroyObject","isUndefined","setVectorByObj","pOBJ","velocity","acceleration","setPrototypeByObj","proObj","filters","indexOf","_getValue","pan","getValue","withDefaults","properties","randomAToB","INT","randomFloating","center","randomZone","display","degreeTransform","toColor16","num","randomColor","slice","energy","getNormal","axisRotate","v0","k","tha","addValue","Span","_isArray","Util","_center","MathUtils","createSpan","ArraySpan","items","super","sample","createArraySpan","ColorSpan","colors","shouldRandomize","createColorSpan","Box","depth","contains","INTEGRATION_TYPE_EULER","INTEGRATION_TYPE_RK2","INTEGRATION_TYPE_RK4","INTEGRATION_TYPE_VERLET","integrate","particle","time","damping","sleep","old","mass","clear","eulerIntegration","Vector3D","eulerFromDir","vector3D","Polar3D","setRadius","setPhi","setTheta","toVector3D","Particle","uid","life","age","dead","body","parent","useColor","useAlpha","easing","behaviours","rotation","distanceToCamera","getDirection","reset","removeAllBehaviours","applyBehaviour","destroy","addBehaviour","behaviour","initialize","addBehaviours","removeBehaviour","splice","Pool","cID","list","create","constructorArgs","canCreateNewObject","canInstantiateObject","canCloneObject","getCount","args","puid","__puid","PUID","pop","expire","_getList","listeners","_listeners","addEventListener","listener","removeEventListener","arr","removeAllEventListeners","dispatchEvent","eventName","eventTarget","ret","handler","hasEventListener","SYSTEM_UPDATE","PARTICLE_CREATED","PARTICLE_UPDATE","PARTICLE_DEAD","Initializer","isEnabled","init","emitter","hasBeenInitialized","json","Body","SUPPORTED_MATERIAL_BLENDING_MODES","AdditiveBlending","CustomBlending","MultiplyBlending","NoBlending","NormalBlending","SubtractiveBlending","DEFAULT_MATERIAL_PROPERTIES","blending","fog","DEFAULT_JSON_MATERIAL_PROPERTIES","BodySprite","THREE","texture","materialProperties","Sprite","SpriteMaterial","TextureLoader","load","map","material","sprite","ensureMappedBlendingMode","particleEuler","initializers","bindEmitter","Life","lifePan","Mass","massPan","Zone","crossType","supportsCrossing","getPosition","crossing","_bound","_cross","_dead","isBoxZone","isLineZone","isMeshZone","isPointZone","isScreenZone","isSphereZone","BoxZone","friction","_static","LineZone","MeshZone","bounds","ThreeGeometry","geometry","isBufferGeometry","fromBufferGeometry","vertices","rVector","PointZone","ScreenZone","renderer","dis","THREEUtil","domElement","d4","vec2","SphereZone","centerX","centerY","centerZ","the","Position","apply","zones","concat","addZone","zoneType","params","source","excluded","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","includes","zone","Radius","oldRadius","Rate","numPan","timePan","startTime","nextTime","particlesMin","particlesMax","perSecondMin","perSecondMax","Texture","loadedTexture","Velocity","dirVec","vr","_useV","radiusPan","PolarVelocity","polar3d","polarRadius","polarTheta","polarPhi","velocityTheta","RadialVelocity","vector3d","VectorVelocity","DEFAULT_EMITTER_RATE","Emitter","particles","emitterBehaviours","currentEmitTime","totalEmitTimes","bindEmitterEvent","rate","isEmitting","eventDispatcher","EventDispatcher","dispatch","event","setRate","newPosition","setRotation","newRotation","emit","isNumber","experimental_emit","setTotalEmitTimes","setLife","stopEmit","removeAllParticles","addInitializer","initializer","addInitializers","setInitializers","removeInitializer","removeAllInitializers","setBehaviours","addEmitterBehaviour","addEmitterBehaviours","setEmitterBehaviours","removeEmitterBehaviour","removeAllEmitterBehaviours","addOnEmitterDeadEventListener","onEmitterDead","createParticle","pool","setupParticle","InitializerUtil","generate","updateEmitterBehaviours","integrationType","removeEmitter","DEFAULT_BEHAVIOUR_EASING","Behaviour","_life","normalizeForce","force","normalizeValue","mutate","energize","fromJSON","Alpha","alphaA","alphaB","same","_same","Attraction","targetPosition","radiusSq","attractionForce","Collision","useMass","onCollide","delta","otherParticle","overlap","averageMass1","averageMass2","_getAverageMass","particleA","particleB","Color","colorA","colorB","ColorUtil","CrossZone","zoneParams","Force","fx","fy","fz","Gravity","gravity","RandomDrift","driftX","driftY","driftZ","delay","randomForce","delayPan","Repulsion","Rotate","rotationType","_rotationType","_setRotation","fR","tR","addR","particleRotation","Scale","scaleA","scaleB","Spring","spring","makeBehaviours","forEach","data","DEFAULT_OPTIONS","shouldAutoEmit","Promise","resolve","reject","numberOfBehaviours","madeBehaviours","System","preParticles","canUpdate","emitters","renderers","system","makeRate","makeInitializers","addEmitter","madeEmitters","numberOfEmitters","numberOfInitializers","madeInitializers","doNotRequireTextureLoading","filter","doRequireTextureLoading","textureLoader","TextureInitializer","then","madeEmitterBehaviours","catch","makeEmitters","madeEmitter","fromJSONAsync","addRenderer","removeRenderer","remove","onStart","onUpdate","onEnd","all","total","DEFAULT_SIZE","DEFAULT_POSITION","onSystemUpdated","drawZone","container","size","SphereGeometry","BoxGeometry","MeshBasicMaterial","wireframe","mesh","Mesh","drawEmitter","OctahedronGeometry","renderInfo","getCreatedNumber","style","addInfo","str","_infoType","getEmitterPos","_infoCon","innerHTML","bg","document","createElement","cssText","parentNode","appendChild","once","shift","unshift","FollowEmitter","mouseTarget","pObj","_allowEmitting","initEventHandler","mousemoveHandler","mousemove","mousedownHandler","mousedown","mouseupHandler","mouseup","setCameraAndCanvas","layerX","layerY","offsetX","offsetY","BaseRenderer","onSystemUpdate","onParticleCreated","onParticleUpdate","onParticleDead","logRendererType","CustomRenderer","targetPool","materialPool","MeshRenderer","_targetPool","_materialPool","_body","MeshLambertMaterial","isThreeSprite","isSprite","opacity","transparent","SpriteRenderer","VECTOR_3_SIZE","RGBA_SIZE","PARTICLE_BYTE_SIZE","reduce","cur","acc","SIZE_ATTRIBUTE_BUFFER_SIZE","ALPHA_ATTRIBUTE_BUFFER_SIZE","TEXID_ATTRIBUTE_BUFFER_SIZE","ATTRIBUTE_TO_SIZE_MAP","texID","DEFAULT_RENDERER_OPTIONS","baseColor","depthTest","depthWrite","maxParticles","shouldDebugTextureAtlas","shouldForceDesktopRenderer","shouldForceMobileRenderer","Target","setRGB","UniqueList","_items","item","find","ParticleBuffer","three","createInterleavedBuffer","createBufferGeometry","arrayBuffer","ArrayBuffer","interleavedBuffer","InterleavedBuffer","Float32Array","BufferGeometry","setAttribute","InterleavedBufferAttribute","buffer","stride","TextureAtlas","shouldDebug","rendererType","DATA_TEXTURE_SIZE","ctx","getContext","indexData","entries","atlasIndex","DataTexture","RGBAFormat","FloatType","debug","atlasTexture","CanvasTexture","flipY","uniforms","uTexture","uniformsNeedUpdate","halfmax","fillStyle","fillRect","font","fillText","zIndex","addTexture","uuid","textureIndex","needsUpdate","image","stats","boxes","area","maxWidth","box","sort","spaces","space","last","fill","potpack","ii","drawImage","dispose","DesktopGPURenderer","particleBuffer","ShaderMaterial","vertexShader","fragmentShader","uniqueList","points","Points","frustumCulled","textureAtlas","updateTarget","mapParticleTargetPropsToPoint","getTextureID","updatePointPosition","updatePointSize","updatePointColor","updatePointAlpha","updatePointTextureIndex","attributes","MobileGPURenderer","FFatlasIndex","atlasDim","Vector2","ti","ta","ida","nx","ny","px","py","GPURenderer","isFloatingPointTextureSupported","WebGL2RenderingContext","support","getExtension"],"sourceRoot":""}