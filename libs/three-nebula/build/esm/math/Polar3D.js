import Vector3D from './Vector3D';
import { MATH_TYPE_POLAR_3D as type } from './types';
export default class Polar3D {
  constructor(radius, theta, phi) {
    /**
     * @desc The class type.
     * @type {string}
     */
    this.type = type;
    this.radius = radius || 1;
    this.phi = phi || 0;
    this.theta = theta || 0;
  }

  set(radius, theta, phi) {
    this.radius = radius || 1;
    this.phi = phi || 0;
    this.theta = theta || 0;
    return this;
  }

  setRadius(radius) {
    this.radius = radius;
    return this;
  }

  setPhi(phi) {
    this.phi = phi;
    return this;
  }

  setTheta(theta) {
    this.theta = theta;
    return this;
  }

  copy(p) {
    this.radius = p.radius;
    this.phi = p.phi;
    this.theta = p.theta;
    return this;
  }

  toVector3D() {
    return new Vector3D(this.getX(), this.getY(), this.getZ());
  }

  getX() {
    return this.radius * Math.sin(this.theta) * Math.cos(this.phi);
  }

  getY() {
    return -this.radius * Math.sin(this.theta) * Math.sin(this.phi);
  }

  getZ() {
    return this.radius * Math.cos(this.theta);
  }

  normalize() {
    this.radius = 1;
    return this;
  }

  equals(v) {
    return v.radius === this.radius && v.phi === this.phi && v.theta === this.theta;
  }

  clear() {
    this.radius = 0.0;
    this.phi = 0.0;
    this.theta = 0.0;
    return this;
  }

  clone() {
    return new Polar3D(this.radius, this.phi, this.theta);
  }

}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tYXRoL1BvbGFyM0QuanMiXSwibmFtZXMiOlsiVmVjdG9yM0QiLCJNQVRIX1RZUEVfUE9MQVJfM0QiLCJ0eXBlIiwiUG9sYXIzRCIsImNvbnN0cnVjdG9yIiwicmFkaXVzIiwidGhldGEiLCJwaGkiLCJzZXQiLCJzZXRSYWRpdXMiLCJzZXRQaGkiLCJzZXRUaGV0YSIsImNvcHkiLCJwIiwidG9WZWN0b3IzRCIsImdldFgiLCJnZXRZIiwiZ2V0WiIsIk1hdGgiLCJzaW4iLCJjb3MiLCJub3JtYWxpemUiLCJlcXVhbHMiLCJ2IiwiY2xlYXIiLCJjbG9uZSJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsUUFBUCxNQUFxQixZQUFyQjtBQUNBLFNBQVNDLGtCQUFrQixJQUFJQyxJQUEvQixRQUEyQyxTQUEzQztBQUVBLGVBQWUsTUFBTUMsT0FBTixDQUFjO0FBQzNCQyxFQUFBQSxXQUFXLENBQUNDLE1BQUQsRUFBU0MsS0FBVCxFQUFnQkMsR0FBaEIsRUFBcUI7QUFDOUI7QUFDSjtBQUNBO0FBQ0E7QUFDSSxTQUFLTCxJQUFMLEdBQVlBLElBQVo7QUFDQSxTQUFLRyxNQUFMLEdBQWNBLE1BQU0sSUFBSSxDQUF4QjtBQUNBLFNBQUtFLEdBQUwsR0FBV0EsR0FBRyxJQUFJLENBQWxCO0FBQ0EsU0FBS0QsS0FBTCxHQUFhQSxLQUFLLElBQUksQ0FBdEI7QUFDRDs7QUFFREUsRUFBQUEsR0FBRyxDQUFDSCxNQUFELEVBQVNDLEtBQVQsRUFBZ0JDLEdBQWhCLEVBQXFCO0FBQ3RCLFNBQUtGLE1BQUwsR0FBY0EsTUFBTSxJQUFJLENBQXhCO0FBQ0EsU0FBS0UsR0FBTCxHQUFXQSxHQUFHLElBQUksQ0FBbEI7QUFDQSxTQUFLRCxLQUFMLEdBQWFBLEtBQUssSUFBSSxDQUF0QjtBQUVBLFdBQU8sSUFBUDtBQUNEOztBQUVERyxFQUFBQSxTQUFTLENBQUNKLE1BQUQsRUFBUztBQUNoQixTQUFLQSxNQUFMLEdBQWNBLE1BQWQ7QUFFQSxXQUFPLElBQVA7QUFDRDs7QUFFREssRUFBQUEsTUFBTSxDQUFDSCxHQUFELEVBQU07QUFDVixTQUFLQSxHQUFMLEdBQVdBLEdBQVg7QUFFQSxXQUFPLElBQVA7QUFDRDs7QUFFREksRUFBQUEsUUFBUSxDQUFDTCxLQUFELEVBQVE7QUFDZCxTQUFLQSxLQUFMLEdBQWFBLEtBQWI7QUFFQSxXQUFPLElBQVA7QUFDRDs7QUFFRE0sRUFBQUEsSUFBSSxDQUFDQyxDQUFELEVBQUk7QUFDTixTQUFLUixNQUFMLEdBQWNRLENBQUMsQ0FBQ1IsTUFBaEI7QUFDQSxTQUFLRSxHQUFMLEdBQVdNLENBQUMsQ0FBQ04sR0FBYjtBQUNBLFNBQUtELEtBQUwsR0FBYU8sQ0FBQyxDQUFDUCxLQUFmO0FBRUEsV0FBTyxJQUFQO0FBQ0Q7O0FBRURRLEVBQUFBLFVBQVUsR0FBRztBQUNYLFdBQU8sSUFBSWQsUUFBSixDQUFhLEtBQUtlLElBQUwsRUFBYixFQUEwQixLQUFLQyxJQUFMLEVBQTFCLEVBQXVDLEtBQUtDLElBQUwsRUFBdkMsQ0FBUDtBQUNEOztBQUVERixFQUFBQSxJQUFJLEdBQUc7QUFDTCxXQUFPLEtBQUtWLE1BQUwsR0FBY2EsSUFBSSxDQUFDQyxHQUFMLENBQVMsS0FBS2IsS0FBZCxDQUFkLEdBQXFDWSxJQUFJLENBQUNFLEdBQUwsQ0FBUyxLQUFLYixHQUFkLENBQTVDO0FBQ0Q7O0FBRURTLEVBQUFBLElBQUksR0FBRztBQUNMLFdBQU8sQ0FBQyxLQUFLWCxNQUFOLEdBQWVhLElBQUksQ0FBQ0MsR0FBTCxDQUFTLEtBQUtiLEtBQWQsQ0FBZixHQUFzQ1ksSUFBSSxDQUFDQyxHQUFMLENBQVMsS0FBS1osR0FBZCxDQUE3QztBQUNEOztBQUVEVSxFQUFBQSxJQUFJLEdBQUc7QUFDTCxXQUFPLEtBQUtaLE1BQUwsR0FBY2EsSUFBSSxDQUFDRSxHQUFMLENBQVMsS0FBS2QsS0FBZCxDQUFyQjtBQUNEOztBQUVEZSxFQUFBQSxTQUFTLEdBQUc7QUFDVixTQUFLaEIsTUFBTCxHQUFjLENBQWQ7QUFFQSxXQUFPLElBQVA7QUFDRDs7QUFFRGlCLEVBQUFBLE1BQU0sQ0FBQ0MsQ0FBRCxFQUFJO0FBQ1IsV0FDRUEsQ0FBQyxDQUFDbEIsTUFBRixLQUFhLEtBQUtBLE1BQWxCLElBQTRCa0IsQ0FBQyxDQUFDaEIsR0FBRixLQUFVLEtBQUtBLEdBQTNDLElBQWtEZ0IsQ0FBQyxDQUFDakIsS0FBRixLQUFZLEtBQUtBLEtBRHJFO0FBR0Q7O0FBRURrQixFQUFBQSxLQUFLLEdBQUc7QUFDTixTQUFLbkIsTUFBTCxHQUFjLEdBQWQ7QUFDQSxTQUFLRSxHQUFMLEdBQVcsR0FBWDtBQUNBLFNBQUtELEtBQUwsR0FBYSxHQUFiO0FBRUEsV0FBTyxJQUFQO0FBQ0Q7O0FBRURtQixFQUFBQSxLQUFLLEdBQUc7QUFDTixXQUFPLElBQUl0QixPQUFKLENBQVksS0FBS0UsTUFBakIsRUFBeUIsS0FBS0UsR0FBOUIsRUFBbUMsS0FBS0QsS0FBeEMsQ0FBUDtBQUNEOztBQXBGMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVmVjdG9yM0QgZnJvbSAnLi9WZWN0b3IzRCc7XG5pbXBvcnQgeyBNQVRIX1RZUEVfUE9MQVJfM0QgYXMgdHlwZSB9IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb2xhcjNEIHtcbiAgY29uc3RydWN0b3IocmFkaXVzLCB0aGV0YSwgcGhpKSB7XG4gICAgLyoqXG4gICAgICogQGRlc2MgVGhlIGNsYXNzIHR5cGUuXG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICB0aGlzLnR5cGUgPSB0eXBlO1xuICAgIHRoaXMucmFkaXVzID0gcmFkaXVzIHx8IDE7XG4gICAgdGhpcy5waGkgPSBwaGkgfHwgMDtcbiAgICB0aGlzLnRoZXRhID0gdGhldGEgfHwgMDtcbiAgfVxuXG4gIHNldChyYWRpdXMsIHRoZXRhLCBwaGkpIHtcbiAgICB0aGlzLnJhZGl1cyA9IHJhZGl1cyB8fCAxO1xuICAgIHRoaXMucGhpID0gcGhpIHx8IDA7XG4gICAgdGhpcy50aGV0YSA9IHRoZXRhIHx8IDA7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIHNldFJhZGl1cyhyYWRpdXMpIHtcbiAgICB0aGlzLnJhZGl1cyA9IHJhZGl1cztcblxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgc2V0UGhpKHBoaSkge1xuICAgIHRoaXMucGhpID0gcGhpO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBzZXRUaGV0YSh0aGV0YSkge1xuICAgIHRoaXMudGhldGEgPSB0aGV0YTtcblxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgY29weShwKSB7XG4gICAgdGhpcy5yYWRpdXMgPSBwLnJhZGl1cztcbiAgICB0aGlzLnBoaSA9IHAucGhpO1xuICAgIHRoaXMudGhldGEgPSBwLnRoZXRhO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICB0b1ZlY3RvcjNEKCkge1xuICAgIHJldHVybiBuZXcgVmVjdG9yM0QodGhpcy5nZXRYKCksIHRoaXMuZ2V0WSgpLCB0aGlzLmdldFooKSk7XG4gIH1cblxuICBnZXRYKCkge1xuICAgIHJldHVybiB0aGlzLnJhZGl1cyAqIE1hdGguc2luKHRoaXMudGhldGEpICogTWF0aC5jb3ModGhpcy5waGkpO1xuICB9XG5cbiAgZ2V0WSgpIHtcbiAgICByZXR1cm4gLXRoaXMucmFkaXVzICogTWF0aC5zaW4odGhpcy50aGV0YSkgKiBNYXRoLnNpbih0aGlzLnBoaSk7XG4gIH1cblxuICBnZXRaKCkge1xuICAgIHJldHVybiB0aGlzLnJhZGl1cyAqIE1hdGguY29zKHRoaXMudGhldGEpO1xuICB9XG5cbiAgbm9ybWFsaXplKCkge1xuICAgIHRoaXMucmFkaXVzID0gMTtcblxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgZXF1YWxzKHYpIHtcbiAgICByZXR1cm4gKFxuICAgICAgdi5yYWRpdXMgPT09IHRoaXMucmFkaXVzICYmIHYucGhpID09PSB0aGlzLnBoaSAmJiB2LnRoZXRhID09PSB0aGlzLnRoZXRhXG4gICAgKTtcbiAgfVxuXG4gIGNsZWFyKCkge1xuICAgIHRoaXMucmFkaXVzID0gMC4wO1xuICAgIHRoaXMucGhpID0gMC4wO1xuICAgIHRoaXMudGhldGEgPSAwLjA7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIGNsb25lKCkge1xuICAgIHJldHVybiBuZXcgUG9sYXIzRCh0aGlzLnJhZGl1cywgdGhpcy5waGksIHRoaXMudGhldGEpO1xuICB9XG59XG4iXX0=