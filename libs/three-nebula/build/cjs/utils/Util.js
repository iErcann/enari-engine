"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _default = {
  initValue: function initValue(value, defaults) {
    var _value = value != null && value != undefined ? value : defaults;

    return _value;
  },
  isArray: function isArray(value) {
    return Object.prototype.toString.call(value) === '[object Array]';
  },
  destroyArray: function destroyArray(array) {
    array.length = 0;
  },
  destroyObject: function destroyObject(obj) {
    for (var o in obj) {
      delete obj[o];
    }
  },
  isUndefined: function isUndefined() {
    for (var id in arguments) {
      var arg = arguments[id];
      if (arg !== undefined) return false;
    }

    return true;
  },
  setVectorByObj: function setVectorByObj(target, pOBJ) {
    if (pOBJ['x'] !== undefined) target.position.x = pOBJ['x'];
    if (pOBJ['y'] !== undefined) target.position.y = pOBJ['y'];
    if (pOBJ['z'] !== undefined) target.position.z = pOBJ['z'];
    if (pOBJ['vx'] !== undefined) target.velocity.x = pOBJ['vx'];
    if (pOBJ['vy'] !== undefined) target.velocity.y = pOBJ['vy'];
    if (pOBJ['vz'] !== undefined) target.velocity.z = pOBJ['vz'];
    if (pOBJ['ax'] !== undefined) target.acceleration.x = pOBJ['ax'];
    if (pOBJ['ay'] !== undefined) target.acceleration.y = pOBJ['ay'];
    if (pOBJ['az'] !== undefined) target.acceleration.z = pOBJ['az'];
    if (pOBJ['p'] !== undefined) target.position.copy(pOBJ['p']);
    if (pOBJ['v'] !== undefined) target.velocity.copy(pOBJ['v']);
    if (pOBJ['a'] !== undefined) target.acceleration.copy(pOBJ['a']);
    if (pOBJ['position'] !== undefined) target.position.copy(pOBJ['position']);
    if (pOBJ['velocity'] !== undefined) target.velocity.copy(pOBJ['velocity']);
    if (pOBJ['accelerate'] !== undefined) target.acceleration.copy(pOBJ['accelerate']);
  },
  //set prototype
  setPrototypeByObj: function setPrototypeByObj(target, proObj, filters) {
    for (var key in proObj) {
      // eslint-disable-next-line no-prototype-builtins
      if (target.hasOwnProperty(key)) {
        if (filters) {
          if (filters.indexOf(key) < 0) target[key] = this._getValue(proObj[key]);
        } else {
          target[key] = this._getValue(proObj[key]);
        }
      }
    }

    return target;
  },
  _getValue: function _getValue(pan) {
    if (pan.constructor.type === 'Span') return pan.getValue();else return pan;
  }
};
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlscy9VdGlsLmpzIl0sIm5hbWVzIjpbImluaXRWYWx1ZSIsInZhbHVlIiwiZGVmYXVsdHMiLCJfdmFsdWUiLCJ1bmRlZmluZWQiLCJpc0FycmF5IiwiT2JqZWN0IiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJjYWxsIiwiZGVzdHJveUFycmF5IiwiYXJyYXkiLCJsZW5ndGgiLCJkZXN0cm95T2JqZWN0Iiwib2JqIiwibyIsImlzVW5kZWZpbmVkIiwiaWQiLCJhcmd1bWVudHMiLCJhcmciLCJzZXRWZWN0b3JCeU9iaiIsInRhcmdldCIsInBPQkoiLCJwb3NpdGlvbiIsIngiLCJ5IiwieiIsInZlbG9jaXR5IiwiYWNjZWxlcmF0aW9uIiwiY29weSIsInNldFByb3RvdHlwZUJ5T2JqIiwicHJvT2JqIiwiZmlsdGVycyIsImtleSIsImhhc093blByb3BlcnR5IiwiaW5kZXhPZiIsIl9nZXRWYWx1ZSIsInBhbiIsImNvbnN0cnVjdG9yIiwidHlwZSIsImdldFZhbHVlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7ZUFBZTtBQUNiQSxFQUFBQSxTQUFTLEVBQUUsbUJBQVNDLEtBQVQsRUFBZ0JDLFFBQWhCLEVBQTBCO0FBQ25DLFFBQUlDLE1BQU0sR0FBR0YsS0FBSyxJQUFJLElBQVQsSUFBaUJBLEtBQUssSUFBSUcsU0FBMUIsR0FBc0NILEtBQXRDLEdBQThDQyxRQUEzRDs7QUFFQSxXQUFPQyxNQUFQO0FBQ0QsR0FMWTtBQU9iRSxFQUFBQSxPQUFPLEVBQUUsaUJBQVNKLEtBQVQsRUFBZ0I7QUFDdkIsV0FBT0ssTUFBTSxDQUFDQyxTQUFQLENBQWlCQyxRQUFqQixDQUEwQkMsSUFBMUIsQ0FBK0JSLEtBQS9CLE1BQTBDLGdCQUFqRDtBQUNELEdBVFk7QUFXYlMsRUFBQUEsWUFBWSxFQUFFLHNCQUFTQyxLQUFULEVBQWdCO0FBQzVCQSxJQUFBQSxLQUFLLENBQUNDLE1BQU4sR0FBZSxDQUFmO0FBQ0QsR0FiWTtBQWViQyxFQUFBQSxhQUFhLEVB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ZGVmYXVsdHMpIHtcbiAgICB2YXIgX3ZhbHVlID0gdmFsdWUgIT0gbnVsbCAmJiB2YWx1ZSAhPSB1bmRlZmluZWQgPyB2YWx1ZSA6IGRlZmF1bHRzO1xuXG4gICAgcmV0dXJuIF92YWx1ZTtcbiAgfSxcblxuICBpc0FycmF5OiBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodmFsdWUpID09PSAnW29iamVjdCBBcnJheV0nO1xuICB9LFxuXG4gIGRlc3Ryb3lBcnJheTogZnVuY3Rpb24oYXJyYXkpIHtcbiAgICBhcnJheS5sZW5ndGggPSAwO1xuICB9LFxuXG4gIGRlc3Ryb3lPYmplY3Q6IGZ1bmN0aW9uKG9iaikge1xuICAgIGZvciAodmFyIG8gaW4gb2JqKSBkZWxldGUgb2JqW29dO1xuICB9LFxuXG4gIGlzVW5kZWZpbmVkOiBmdW5jdGlvbigpIHtcbiAgICBmb3IgKHZhciBpZCBpbiBhcmd1bWVudHMpIHtcbiAgICAgIHZhciBhcmcgPSBhcmd1bWVudHNbaWRdO1xuXG4gICAgICBpZiAoYXJnICE9PSB1bmRlZmluZWQpIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSxcblxuICBzZXRWZWN0b3JCeU9iajogZnVuY3Rpb24odGFyZ2V0LCBwT0JKKSB7XG4gICAgaWYgKHBPQkpbJ3gnXSAhPT0gdW5kZWZpbmVkKSB0YXJnZXQucG9zaXRpb24ueCA9IHBPQkpbJ3gnXTtcbiAgICBpZiAocE9CSlsneSddICE9PSB1bmRlZmluZWQpIHRhcmdldC5wb3NpdGlvbi55ID0gcE9CSlsneSddO1xuICAgIGlmIChwT0JKWyd6J10gIT09IHVuZGVmaW5lZCkgdGFyZ2V0LnBvc2l0aW9uLnogPSBwT0JKWyd6J107XG5cbiAgICBpZiAocE9CSlsndngnXSAhPT0gdW5kZWZpbmVkKSB0YXJnZXQudmVsb2NpdHkueCA9IHBPQkpbJ3Z4J107XG4gICAgaWYgKHBPQkpbJ3Z5J10gIT09IHVuZGVmaW5lZCkgdGFyZ2V0LnZlbG9jaXR5LnkgPSBwT0JKWyd2eSddO1xuICAgIGlmIChwT0JKWyd2eiddICE9PSB1bmRlZmluZWQpIHRhcmdldC52ZWxvY2l0eS56ID0gcE9CSlsndnonXTtcblxuICAgIGlmIChwT0JKWydheCddICE9PSB1bmRlZmluZWQpIHRhcmdldC5hY2NlbGVyYXRpb24ueCA9IHBPQkpbJ2F4J107XG4gICAgaWYgKHBPQkpbJ2F5J10gIT09IHVuZGVmaW5lZCkgdGFyZ2V0LmFjY2VsZXJhdGlvbi55ID0gcE9CSlsnYXknXTtcbiAgICBpZiAocE9CSlsnYXonXSAhPT0gdW5kZWZpbmVkKSB0YXJnZXQuYWNjZWxlcmF0aW9uLnogPSBwT0JKWydheiddO1xuXG4gICAgaWYgKHBPQkpbJ3AnXSAhPT0gdW5kZWZpbmVkKSB0YXJnZXQucG9zaXRpb24uY29weShwT0JKWydwJ10pO1xuICAgIGlmIChwT0JKWyd2J10gIT09IHVuZGVmaW5lZCkgdGFyZ2V0LnZlbG9jaXR5LmNvcHkocE9CSlsndiddKTtcbiAgICBpZiAocE9CSlsnYSddICE9PSB1bmRlZmluZWQpIHRhcmdldC5hY2NlbGVyYXRpb24uY29weShwT0JKWydhJ10pO1xuXG4gICAgaWYgKHBPQkpbJ3Bvc2l0aW9uJ10gIT09IHVuZGVmaW5lZCkgdGFyZ2V0LnBvc2l0aW9uLmNvcHkocE9CSlsncG9zaXRpb24nXSk7XG4gICAgaWYgKHBPQkpbJ3ZlbG9jaXR5J10gIT09IHVuZGVmaW5lZCkgdGFyZ2V0LnZlbG9jaXR5LmNvcHkocE9CSlsndmVsb2NpdHknXSk7XG4gICAgaWYgKHBPQkpbJ2FjY2VsZXJhdGUnXSAhPT0gdW5kZWZpbmVkKVxuICAgICAgdGFyZ2V0LmFjY2VsZXJhdGlvbi5jb3B5KHBPQkpbJ2FjY2VsZXJhdGUnXSk7XG4gIH0sXG5cbiAgLy9zZXQgcHJvdG90eXBlXG4gIHNldFByb3RvdHlwZUJ5T2JqOiBmdW5jdGlvbih0YXJnZXQsIHByb09iaiwgZmlsdGVycykge1xuICAgIGZvciAodmFyIGtleSBpbiBwcm9PYmopIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnNcbiAgICAgIGlmICh0YXJnZXQuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICBpZiAoZmlsdGVycykge1xuICAgICAgICAgIGlmIChmaWx0ZXJzLmluZGV4T2Yoa2V5KSA8IDApXG4gICAgICAgICAgICB0YXJnZXRba2V5XSA9IHRoaXMuX2dldFZhbHVlKHByb09ialtrZXldKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHRoaXMuX2dldFZhbHVlKHByb09ialtrZXldKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH0sXG5cbiAgX2dldFZhbHVlOiBmdW5jdGlvbihwYW4pIHtcbiAgICBpZiAocGFuLmNvbnN0cnVjdG9yLnR5cGUgPT09ICdTcGFuJykgcmV0dXJuIHBhbi5nZXRWYWx1ZSgpO1xuICAgIGVsc2UgcmV0dXJuIHBhbjtcbiAgfSxcbn07XG4iXX0=