"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _three = require("../core/three/");

var _default = {
  toScreenPos: function () {
    var vector = new _three.Vector3();
    return function (pos, camera, canvas) {
      vector.copy(pos); // map to normalized device coordinate (NDC) space

      vector.project(camera); // map to 2D screen space

      vector.x = Math.round((vector.x + 1) * canvas.width / 2);
      vector.y = Math.round((-vector.y + 1) * canvas.height / 2);
      vector.z = 0;
      return vector;
    };
  }(),
  toSpacePos: function () {
    var vector = new _three.Vector3(),
        dir = new _three.Vector3(),
        distance;
    return function (pos, camera, canvas) {
      vector.set(pos.x / canvas.width * 2 - 1, -(pos.y / canvas.height) * 2 + 1, 0.5);
      vector.unproject(camera);
      dir.copy(vector.sub(camera.position).normalize());
      distance = -camera.position.z / dir.z;
      vector.copy(camera.position);
      vector.add(dir.multiplyScalar(distance));
      return vector;
    };
  }()
};
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlscy9USFJFRVV0aWwuanMiXSwibmFtZXMiOlsidG9TY3JlZW5Qb3MiLCJ2ZWN0b3IiLCJWZWN0b3IzIiwicG9zIiwiY2FtZXJhIiwiY2FudmFzIiwiY29weSIsInByb2plY3QiLCJ4IiwiTWF0aCIsInJvdW5kIiwid2lkdGgiLCJ5IiwiaGVpZ2h0IiwieiIsInRvU3BhY2VQb3MiLCJkaXIiLCJkaXN0YW5jZSIsInNldCIsInVucHJvamVjdCIsInN1YiIsInBvc2l0aW9uIiwibm9ybWFsaXplIiwiYWRkIiwibXVsdGlwbHlTY2FsYXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7ZUFFZTtBQUNiQSxFQUFBQSxXQUFXLEVBQUcsWUFBVztBQUN2QixRQUFJQyxNQUFNLEdBQUcsSUFBSUMsY0FBSixFQUFiO0FBRUEsV0FBTyxVQUFTQyxHQUFULEVBQWNDLE1BQWQsRUFBc0JDLE1BQXRCLEVBQThCO0FBQ25DSixNQUFBQSxNQUFNLENBQUNLLElBQVAsQ0FBWUgsR0FBWixFQURtQyxDQUVuQzs7QUFDQUYsTUFBQUEsTUFBTSxDQUFDTSxPQUFQLENBQWVILE1BQWYsRUFIbUMsQ0FJbkM7O0FBQ0FILE1BQUFBLE1BQU0sQ0FBQ08sQ0FBUCxHQUFXQyxJQUFJLENBQUNDLEtBQUwsQ0FBWSxDQUFDVCxNQUFNLENBQUNPLENBQVAsR0FBVyxDQUFaLElBQWlCSCxNQUFNLENBQUNNLEtBQXpCLEdBQWtDLENBQTdDLENBQVg7QUFDQVYsTUFBQUEsTUFBTSxDQUFDVyxDQUFQLEdBQVdILElBQUksQ0FBQ0MsS0FBTCxDQUFZLENBQUMsQ0FBQ1QsTUFBTSxDQUFDVyxDQUFSLEdBQVksQ0FBYixJQUFrQlAsTUFBTSxDQUFDUSxNQUExQixHQUFvQyxDQUEvQyxDQUFYO0FBQ0FaLE1BQUFBLE1BQU0sQ0FBQ2EsQ0FBUCxHQUFXLENBQVg7QUFFQSxhQUFPYixNQUFQO0FBQ0QsS0FWRDtBQVdELEdBZFksRUFEQTtBQWlCYmMsRUFBQUEsVUFBVSxFQUFHLFlBQVc7QUFDdEIsUUFBSWQsTUFBTSxHQUFHLElBQUlDLGNBQUosRUFBYjtBQUFBLFFBQ0VjLEdBQUcsR0FBRyxJQUFJZCxjQUFKLEVBRFI7QUFBQSxRQUVFZSxRQUZGO0FBSUEsV0FBTyxVQUFTZCxHQUFULEVBQWNDLE1BQWQsRUFBc0JDLE1BQXRCLEVBQThCO0FBQ25DSixNQUFBQSxNQUFNLENBQUNpQixHQUFQLENBQ0dmLEdBQUcsQ0FBQ0ssQ0FBSixHQUFRSCxNQUFNLENBQUNNLEtBQWhCLEdBQXlCLENBQXpCLEdBQTZCLENBRC9CLEVBRUUsRUFBRVIsR0FBRyxDQUFDUyxDQUFKLEdBQVFQLE1BQU0sQ0FBQ1EsTUFBakIsSUFBMkIsQ0FBM0IsR0FBK0IsQ0FGakMsRUFHRSxHQUhGO0FBS0FaLE1BQUFBLE1BQU0sQ0FBQ2tCLFNBQVAsQ0FBaUJmLE1BQWpCO0FBRUFZLE1BQUFBLEdBQUcsQ0FBQ1YsSUFBSixDQUFTTCxNQUFNLENBQUNtQixHQUFQLENBQVdoQixNQUFNLENBQUNpQixRQUFsQixFQUE0QkMsU0FBNUIsRUFBVDtBQUNBTCxNQUFBQSxRQUFRLEdBQUcsQ0FBQ2IsTUFBTSxDQUFDaUIsUUFBUCxDQUFnQlAsQ0FBakIsR0FBcUJFLEdBQUcsQ0FBQ0YsQ0FBcEM7QUFDQWIsTUFBQUEsTUFBTSxDQUFDSyxJQUFQLENBQVlGLE1BQU0sQ0FBQ2lCLFFBQW5CO0FBQ0FwQixNQUFBQSxNQUFNLENBQUNzQixHQUFQLENBQVdQLEdBQUcsQ0FBQ1EsY0FBSixDQUFtQlAsUUFBbkIsQ0FBWDtBQUVBLGFBQU9oQixNQUFQO0FBQ0QsS0FkRDtBQWVELEdBcEJXO0FBakJDLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWZWN0b3IzIH0gZnJvbSAnLi4vY29yZS90aHJlZS8nO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIHRvU2NyZWVuUG9zOiAoZnVuY3Rpb24oKSB7XG4gICAgdmFyIHZlY3RvciA9IG5ldyBWZWN0b3IzKCk7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24ocG9zLCBjYW1lcmEsIGNhbnZhcykge1xuICAgICAgdmVjdG9yLmNvcHkocG9zKTtcbiAgICAgIC8vIG1hcCB0byBub3JtYWxpemVkIGRldmljZSBjb29yZGluYXRlIChOREMpIHNwYWNlXG4gICAgICB2ZWN0b3IucHJvamVjdChjYW1lcmEpO1xuICAgICAgLy8gbWFwIHRvIDJEIHNjcmVlbiBzcGFjZVxuICAgICAgdmVjdG9yLnggPSBNYXRoLnJvdW5kKCgodmVjdG9yLnggKyAxKSAqIGNhbnZhcy53aWR0aCkgLyAyKTtcbiAgICAgIHZlY3Rvci55ID0gTWF0aC5yb3VuZCgoKC12ZWN0b3IueSArIDEpICogY2FudmFzLmhlaWdodCkgLyAyKTtcbiAgICAgIHZlY3Rvci56ID0gMDtcblxuICAgICAgcmV0dXJuIHZlY3RvcjtcbiAgICB9O1xuICB9KSgpLFxuXG4gIHRvU3BhY2VQb3M6IChmdW5jdGlvbigpIHtcbiAgICB2YXIgdmVjdG9yID0gbmV3IFZlY3RvcjMoKSxcbiAgICAgIGRpciA9IG5ldyBWZWN0b3IzKCksXG4gICAgICBkaXN0YW5jZTtcblxuICAgIHJldHVybiBmdW5jdGlvbihwb3MsIGNhbWVyYSwgY2FudmFzKSB7XG4gICAgICB2ZWN0b3Iuc2V0KFxuICAgICAgICAocG9zLnggLyBjYW52YXMud2lkdGgpICogMiAtIDEsXG4gICAgICAgIC0ocG9zLnkgLyBjYW52YXMuaGVpZ2h0KSAqIDIgKyAxLFxuICAgICAgICAwLjVcbiAgICAgICk7XG4gICAgICB2ZWN0b3IudW5wcm9qZWN0KGNhbWVyYSk7XG5cbiAgICAgIGRpci5jb3B5KHZlY3Rvci5zdWIoY2FtZXJhLnBvc2l0aW9uKS5ub3JtYWxpemUoKSk7XG4gICAgICBkaXN0YW5jZSA9IC1jYW1lcmEucG9zaXRpb24ueiAvIGRpci56O1xuICAgICAgdmVjdG9yLmNvcHkoY2FtZXJhLnBvc2l0aW9uKTtcbiAgICAgIHZlY3Rvci5hZGQoZGlyLm11bHRpcGx5U2NhbGFyKGRpc3RhbmNlKSk7XG5cbiAgICAgIHJldHVybiB2ZWN0b3I7XG4gICAgfTtcbiAgfSkoKSxcbn07XG4iXX0=