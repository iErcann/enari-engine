"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "INITIALIZER_TYPES_THAT_REQUIRE_THREE", {
  enumerable: true,
  get: function get() {
    return _types2.INITIALIZER_TYPES_THAT_REQUIRE_THREE;
  }
});
exports.SUPPORTED_JSON_ZONE_TYPES = exports.SUPPORTED_JSON_RENDERER_TYPES = exports.SUPPORTED_JSON_BEHAVIOUR_TYPES = exports.SUPPORTED_JSON_INITIALIZER_TYPES = exports.DEFAULT_SYSTEM_DELTA = exports.DEFAULT_EASING = exports.DEFAULT_USE_ALPHA = exports.DEFAULT_USE_COLOR = exports.DEFAULT_SCALE = exports.DEFAULT_ALPHA = exports.DEFAULT_RADIUS = exports.DEFAULT_MASS = exports.DEFAULT_PARENT = exports.DEFAULT_BODY = exports.DEFAULT_INDEX = exports.DEFAULT_SLEEP = exports.DEFAULT_DEAD = exports.DEFAULT_ENERGY = exports.DEFAULT_AGE = exports.DEFAULT_LIFE = void 0;

var _types = require("../behaviour/types");

var _types2 = require("../initializer/types");

var _types3 = require("../zone/types");

var _types4 = require("../renderer/types");

var _ease = require("../ease");

/**
 * @desc Default particle life
 * @type {number}
 */
var DEFAULT_LIFE = Infinity;
/**
 * @desc Default particle age
 * @type {number}
 */

exports.DEFAULT_LIFE = DEFAULT_LIFE;
var DEFAULT_AGE = 0;
/**
 * @desc Default particle energy
 * @type {number}
 */

exports.DEFAULT_AGE = DEFAULT_AGE;
var DEFAULT_ENERGY = 1;
/**
 * @desc Default particle dead
 * @type {boolean}
 */

exports.DEFAULT_ENERGY = DEFAULT_ENERGY;
var DEFAULT_DEAD = false;
/**
 * @desc Default particle sleep
 * @type {boolean}
 */

exports.DEFAULT_DEAD = DEFAULT_DEAD;
var DEFAULT_SLEEP = false;
/**
 * @desc Default particle index
 * @type {number}
 */

exports.DEFAULT_SLEEP = DEFAULT_SLEEP;
var DEFAULT_INDEX = 0;
/**
 * @desc Default particle body
 * @type {?object}
 */

exports.DEFAULT_INDEX = DEFAULT_INDEX;
var DEFAULT_BODY = null;
/**
 * @desc Default particle parent
 * @type {?Emitter}
 */

exports.DEFAULT_BODY = DEFAULT_BODY;
var DEFAULT_PARENT = null;
/**
 * @desc Default particle mass
 * @type {number}
 */

exports.DEFAULT_PARENT = DEFAULT_PARENT;
var DEFAULT_MASS = 1;
/**
 * @desc Default particle radius
 * @type {number}
 */

exports.DEFAULT_MASS = DEFAULT_MASS;
var DEFAULT_RADIUS = 10;
/**
 * @desc Default particle alpha
 * @type {number}
 */

exports.DEFAULT_RADIUS = DEFAULT_RADIUS;
var DEFAULT_ALPHA = 1;
/**
 * @desc Default particle scale
 * @type {number}
 */

exports.DEFAULT_ALPHA = DEFAULT_ALPHA;
var DEFAULT_SCALE = 1;
/**
 * @desc Default particle useColor
 * @type {boolean}
 */

exports.DEFAULT_SCALE = DEFAULT_SCALE;
var DEFAULT_USE_COLOR = false;
/**
 * @desc Default particle useAlpha
 * @type {boolean}
 */

exports.DEFAULT_USE_COLOR = DEFAULT_USE_COLOR;
var DEFAULT_USE_ALPHA = false;
/**
 * @desc Default particle easing
 * @type {function}
 */

exports.DEFAULT_USE_ALPHA = DEFAULT_USE_ALPHA;
var DEFAULT_EASING = _ease.easeLinear;
/**
 * @desc The default delta provided to the System instance
 * @type {number}
 */

exports.DEFAULT_EASING = DEFAULT_EASING;
var DEFAULT_SYSTEM_DELTA = 0.0167;
/**
 * @desc The types of initializers supported by the System.fromJSON method.
 * @type {array<string>}
 */

exports.DEFAULT_SYSTEM_DELTA = DEFAULT_SYSTEM_DELTA;
var SUPPORTED_JSON_INITIALIZER_TYPES = [_types2.INITIALIZER_TYPE_POSITION, _types2.INITIALIZER_TYPE_LIFE, _types2.INITIALIZER_TYPE_RADIUS, _types2.INITIALIZER_TYPE_MASS, _types2.INITIALIZER_TYPE_BODY, _types2.INITIALIZER_TYPE_BODY_SPRITE, _types2.INITIALIZER_TYPE_TEXTURE, _types2.INITIALIZER_TYPE_POLAR_VELOCITY, _types2.INITIALIZER_TYPE_RADIAL_VELOCITY, _types2.INITIALIZER_TYPE_VECTOR_VELOCITY];
/**
 * @desc The types of behaviours supported by the System.fromJSON method.
 * @type {array<string>}
 */

exports.SUPPORTED_JSON_INITIALIZER_TYPES = SUPPORTED_JSON_INITIALIZER_TYPES;
var SUPPORTED_JSON_BEHAVIOUR_TYPES = [_types.BEHAVIOUR_TYPE_ALPHA, _types.BEHAVIOUR_TYPE_ATTRACTION, _types.BEHAVIOUR_TYPE_COLOR, _types.BEHAVIOUR_TYPE_CROSS_ZONE, _types.BEHAVIOUR_TYPE_FORCE, _types.BEHAVIOUR_TYPE_GRAVITY, _types.BEHAVIOUR_TYPE_RANDOM_DRIFT, _types.BEHAVIOUR_TYPE_REPULSION, _types.BEHAVIOUR_TYPE_ROTATE, _types.BEHAVIOUR_TYPE_SCALE, _types.BEHAVIOUR_TYPE_SPRING];
/**
 * @desc The types of renderers supported by the System.fromJSON method.
 * @type {array<string>}
 */

exports.SUPPORTED_JSON_BEHAVIOUR_TYPES = SUPPORTED_JSON_BEHAVIOUR_TYPES;
var SUPPORTED_JSON_RENDERER_TYPES = [_types4.RENDERER_TYPE_SPRITE];
/**
 * @desc The types of zones supported by the System.fromJSON method.
 * @type {array<string>}
 */

exports.SUPPORTED_JSON_RENDERER_TYPES = SUPPORTED_JSON_RENDERER_TYPES;
var SUPPORTED_JSON_ZONE_TYPES = [_types3.ZONE_TYPE_BOX, _types3.ZONE_TYPE_LINE, _types3.ZONE_TYPE_MESH, _types3.ZONE_TYPE_POINT, _types3.ZONE_TYPE_SPHERE];
exports.SUPPORTED_JSON_ZONE_TYPES = SUPPORTED_JSON_ZONE_TYPES;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,